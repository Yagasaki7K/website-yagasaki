<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Anderson Marlon // Blog]]></title>
        <description><![CDATA[Software Developer]]></description>
        <link>https://yagasaki.vercel.app/</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Mon, 07 Jul 2025 21:49:47 GMT</lastBuildDate>
        <atom:link href="https://yagasaki.vercel.app//rss.xml" rel="self" type="application/rss+xml"/>
        <language><![CDATA[en]]></language>
        <item>
            <title><![CDATA[TDD e DDD - Fundamentos Pr√°ticos para Desenvolvedores JS/TS]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1434030216411-0b793f4b4173?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

> Neste artigo, voc√™ vai entender **os fundamentos de TDD e DDD** com clareza, exemplos diretos, sem jarg√£o, e com coment√°rios √∫teis para revisar no futuro. Ideal para quem trabalha com JavaScript/TypeScript e quer escrever **c√≥digo test√°vel, limpo e guiado por regras de neg√≥cio**. Esse artigo tamb√©m √© uma √≥tima refer√™ncia de bolso para revisar sempre que precisar, independente da linguagem.

---

## Parte 1: TDD (Test-Driven Development / Desenvolvimento Orientado a Testes)

### O que √© TDD?

**TDD √© escrever testes antes do c√≥digo.**
Voc√™ escreve um teste que falha, faz ele passar com o m√≠nimo de c√≥digo, e depois refatora.

### Ciclo Red ‚Üí Green ‚Üí Refactor:

1. **Red** ‚Äì Escreva um teste que falha.
2. **Green** ‚Äì Implemente o m√≠nimo para fazer o teste passar.
3. **Refactor** ‚Äì Limpe o c√≥digo sem quebrar os testes.

### Exemplo simples:

```javascript
// RED
it('should sum two numbers', () => {
  expect(sum(2, 3)).toBe(5);
});

// GREEN
function sum(a, b) {
  return a + b;
}

// REFACTOR (ex: adicionar tipos, validar entradas)
```

### Por que usar TDD?

* Garante que o c√≥digo faz o que deve fazer.
* Ajuda a escrever c√≥digo mais limpo e desacoplado.
* Reduz bugs em produ√ß√£o.

### Princ√≠pios chaves:

* Testes guiam o design do c√≥digo.
* Escrevemos **apenas o c√≥digo necess√°rio** para passar os testes.
* Refatoramos com confian√ßa, porque os testes garantem que n√£o quebramos nada.

### TL;DR do TDD:

> **TDD √© falhar primeiro, depois fazer passar, depois melhorar.**

---

## üõ†Ô∏è Parte 2: DDD (Domain-Driven Design / Design Orientado a Dom√≠nio)

### O que √© DDD?

**DDD √© uma forma de desenhar sistemas centrados na l√≥gica do neg√≥cio.**

Voc√™ modela o software baseado no dom√≠nio que est√° resolvendo: agendamentos, pagamentos, pedidos, etc. O foco √© o "mundo real", n√£o o banco de dados nem a API.

### Conceitos fundamentais:

#### 1. Dom√≠nio

O problema central que o software resolve. Ex: sistema de reservas.

#### 2. Modelos de Dom√≠nio

Representa√ß√µes no c√≥digo da l√≥gica de neg√≥cio. Ex: classes como `User`, `Appointment`, com regras internas.

#### 3. Linguagem Ub√≠qua (Ubiquitous Language)

A equipe t√©cnica e de neg√≥cio usam **os mesmos termos**. O c√≥digo reflete isso.

```javascript
// Ruim:
user.doActionY(invoice);

// Melhor:
user.payInvoice(invoice);
```

#### 4. Contextos Delimitados (Bounded Contexts)

Cada parte do sistema tem um contexto claro e separado. Ex: "Pagamento" n√£o √© o mesmo que "Log√≠stica".

#### 5. Camadas (arquitetura t√≠pica DDD)

* **Domain**: Regras de neg√≥cio, entidades, agregados.
* **Application**: Casos de uso (orquestram as regras do dom√≠nio).
* **Infrastructure**: Banco de dados, APIs externas, etc.
* **Interface**: Controllers, GraphQL, REST, etc.

### Benef√≠cios:

* Regras de neg√≥cio ficam claras e organizadas.
* F√°cil de evoluir sem bagun√ßa.
* Melhor comunica√ß√£o entre devs e o time de neg√≥cio.

### TL;DR do DDD:

> **DDD √© sobre entender o neg√≥cio profundamente e deixar isso claro no seu c√≥digo.**

---

## ü§ù Ligando TDD + DDD

* **DDD** define **o que** voc√™ vai escrever (modelagem).
* **TDD** define **como** voc√™ vai escrever (teste guiado).

### Exemplo:

```javascript
// Casos de uso:
class ScheduleAppointment {
  constructor(private repository: AppointmentRepository) {}

  execute({ date, userId }) {
    if (this.repository.exists(date)) {
      throw new Error('Conflict');
    }
    const appointment = new Appointment(date, userId);
    this.repository.save(appointment);
    return appointment;
  }
}

// Teste:
it('should not allow scheduling on same date', () => {
  // ...
});
// TDD garante que o ScheduleAppointment funciona como esperado.
```

---

## üåü Conclus√£o

* Use **TDD** para escrever c√≥digo que voc√™ confia e consegue refatorar sem medo.
* Use **DDD** para garantir que seu sistema est√° alinhado com a real necessidade do usu√°rio.
* Juntos, eles te ajudam a construir sistemas escal√°veis, test√°veis e com c√≥digo que parece conversas.

---

**Salve esse artigo como refer√™ncia de bolso para revis√£o.**

Qualquer d√∫vida, volte aqui, e lembre-se: *c√≥digo que conversa √© c√≥digo que vive.*
]]></description>
            <link>https://yagasaki.vercel.app//articles/tdd-e-ddd-fundamentos-praticos-para-desenvolvedores-js-ts</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/tdd-e-ddd-fundamentos-praticos-para-desenvolvedores-js-ts</guid>
            <pubDate>Fri, 27 Jun 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Monolito, Microservi√ßo e Serverless - Entenda as Diferen√ßas de Forma Clara]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1700165644892-3dd6b67b25bc?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

> Neste artigo voc√™ vai entender, com clareza e sem enrola√ß√£o, os conceitos de arquitetura mais usados como **monolito**, **microservi√ßos** e **serverless** ‚Äî al√©m de saber quando escolher cada arquitetura.

---

## 1. Monolito

### O que √©?

Um **monolito** √© uma aplica√ß√£o √∫nica e centralizada. Todo o c√≥digo (backend, l√≥gica de neg√≥cio, acesso a banco, etc.) vive no **mesmo projeto** e √© executado como um **√∫nico processo**.

### Caracter√≠sticas:

* Um √∫nico deploy.
* F√°cil de come√ßar, dif√≠cil de escalar.
* Tudo est√° acoplado no mesmo c√≥digo.

### Quando usar?

* Projetos pequenos ou MVPs.
* Quando a equipe √© reduzida.
* Quando h√° pouco dom√≠nio t√©cnico distribu√≠do.

```javascript
// Exemplo de estrutura monolito:
src/
  controllers/
    userController.ts
  services/
    userService.ts
  repositories/
    userRepository.ts
  index.ts (Express server que junta tudo)
```

### Vantagens:

* R√°pido para desenvolver.
* Menor complexidade inicial.
* Simples para fazer deploy.

### Desvantagens:

* Dificulta a escalabilidade em times grandes.
* Uma mudan√ßa pode quebrar tudo.
* Deploys s√£o pesados e arriscados.

---

## 2. Microservi√ßos

### O que √©?

**Microservi√ßos** s√£o uma abordagem onde a aplica√ß√£o √© dividida em **v√°rios servi√ßos pequenos e independentes**, cada um com uma responsabilidade clara.

### Caracter√≠sticas:

* Cada servi√ßo √© deployado separadamente.
* Comunica√ß√£o via HTTP, gRPC, filas, etc.
* Mais trabalho inicial, mas escal√°vel a longo prazo.

### Quando usar?

* Equipes grandes e especializadas.
* Projetos com m√∫ltiplos dom√≠nios e integra√ß√µes.
* Necessidade de escalar partes diferentes do sistema separadamente.

```javascript
// Exemplo:
services/
  auth-service/
    src/index.ts
  user-service/
    src/index.ts
  payment-service/
    src/index.ts
// Cada servi√ßo com seu pr√≥prio Dockerfile, banco e CI/CD
```

### Vantagens:

* Isolamento de responsabilidade.
* Times independentes podem trabalhar sem bloqueio.
* Escala t√©cnica e organizacional.

### Desvantagens:

* Complexidade de orquestra√ß√£o.
* Necessita infraestrutura e monitoramento.
* Mais dif√≠cil de testar integra√ß√£o.

---

## 3. Serverless

### O que √©?

**Serverless** √© uma arquitetura onde voc√™ escreve apenas **fun√ß√µes isoladas** que s√£o executadas **sob demanda**, sem se preocupar com servidores.

### Caracter√≠sticas:

* Custo baseado no uso (pay-per-request).
* Escala autom√°tica.
* Ideal para workloads intermitentes.

### Quando usar?

* Aplicativos de baixa/m√©dia carga.
* Integra√ß√µes event-driven (pagamentos, e-mails, webhooks, blogs).
* Quando o time quer focar s√≥ na l√≥gica.

```javascript
// Exemplo:
// handler.ts
export const handler = async (event) => {
  const { name } = JSON.parse(event.body);
  return {
    statusCode: 200,
    body: JSON.stringify({ message: `Hello, ${name}` })
  };
}

// Deploy em plataformas como AWS Lambda, Vercel, Netlify, etc.
};
```

### Vantagens:

* N√£o precisa gerenciar servidores.
* Alto desempenho com baixo custo.
* Escalabilidade autom√°tica.

### Desvantagens:

* Frio (cold start) pode ser problema.
* Dif√≠cil manter controle de execu√ß√£o e logs.
* Limita√ß√µes de tempo e recursos por fun√ß√£o.

---

## ü§î Qual escolher?

| Crit√©rio           | Monolito   | Microservi√ßos   | Serverless           |
| ------------------ | ---------- | --------------- | -------------------- |
| Facilidade inicial | ‚úÖ Alta     | ‚ùå Mais complexa | ‚úÖ Alta               |
| Escalabilidade     | ‚ùå Limitada | ‚úÖ Alta          | ‚úÖ Autom√°tica         |
| Custo de opera√ß√£o  | ‚úÖ Baixo    | ‚ùå Alto          | ‚úÖ Sob demanda        |
| Time pequeno       | ‚úÖ Ideal    | ‚ùå Dif√≠cil       | ‚úÖ Ideal              |
| Time grande        | ‚ùå Limitado | ‚úÖ Ideal         | ‚úÖ Dependente do caso |

---

## üåü Conclus√£o

* Use **monolito** para come√ßar r√°pido.
* Evolua para **microservi√ßos** se o dom√≠nio crescer e o time precisar de escalabilidade.
* Aposte em **serverless** para workloads espec√≠ficos e com eventos.

> N√£o existe bala de prata. O importante √© **escolher com consci√™ncia**. Se voc√™ entende os pr√≥s e contras, voc√™ est√° no controle.
]]></description>
            <link>https://yagasaki.vercel.app//articles/monolito-microservico-e-serverless-entenda-as-diferencas-de-forma-clara</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/monolito-microservico-e-serverless-entenda-as-diferencas-de-forma-clara</guid>
            <pubDate>Fri, 27 Jun 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[O que √© Developer Relations (DevRel)?]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/4619/sample_e1f388f86866f272f7177dfc42fef27ecbd977e4.jpg?5052391)

Escrevi um artigo explicando o que √© Developer Relations, o que faz quem trabalha com isso, quais s√£o os pilares e como essa √°rea se conecta com comunidades e educa√ß√£o.

Developer Relations √© a √°rea, ou a pessoa, que cuida do relacionamento com pessoas desenvolvedoras. Pode ser uma fun√ß√£o espec√≠fica dentro da empresa, uma equipe dedicada ou at√© um programa estruturado.

> ‚ÄúPara a empresa, eu represento a comunidade. Para a comunidade, eu represento a empresa.‚Äù

O foco de DevRel n√£o √© vender um produto. √â apoiar pessoas desenvolvedoras com o que elas precisam para terem sucesso: conte√∫dos que ensinam, suporte que resolve, espa√ßos para troca e ferramentas que funcionam. √â sobre criar conex√µes de verdade com quem est√° do outro lado do c√≥digo.

Quando bem feita, essa estrat√©gia ajuda n√£o s√≥ na ado√ß√£o do produto, mas tamb√©m na cria√ß√£o de uma comunidade que se sente parte da constru√ß√£o. Isso fortalece a confian√ßa, abre espa√ßo para feedback direto e estimula a inova√ß√£o de forma colaborativa.

## Os pilares de DevRel
A atua√ß√£o em DevRel costuma se apoiar em alguns pilares:

- **Developer Experience (DX)**: o olhar para a experi√™ncia de quem usa o produto sendo uma pessoa desenvolvedora. √â como o UX, mas com foco t√©cnico.
- **Developer Marketing**: ajuda a espalhar a mensagem certa, no canal certo, para o p√∫blico certo, e sempre com escuta ativa pra melhorar o produto.
- **Developer Education**: conte√∫dos, tutoriais e forma√ß√µes que ajudam na ado√ß√£o e no uso mais consciente da tecnologia.
- **Developer Success**: suporte ativo para garantir que quem usa o produto consiga alcan√ßar seus objetivos com ele.
- **Comunidade**: o pilar mais vivo e relacional, onde a troca acontece, onde se constroem la√ßos e se fortalece o senso de pertencimento.

DevRel √© uma √°rea multidisciplinar, e cada empresa vai dar mais foco a um ou outro pilar, dependendo do momento e da estrat√©gia. Como algu√©m que trabalha com isso, posso dizer: essa mistura de tech, comunica√ß√£o e pessoas √© o que torna essa √°rea t√£o potente.

## DevRel n√£o √© marketing tradicional
Embora o **Developer Marketing** esteja entre os pilares, Developer Relations vai al√©m da l√≥gica tradicional de marketing. A forma como a gente se comunica com devs precisa ser diferente: n√£o √© sobre vender, √© sobre gerar valor.

No meu caso, gosto de tratar o marketing como resultado das a√ß√µes de educa√ß√£o. Em vez de simplesmente anunciar uma nova funcionalidade, prefiro mostrar como ela resolve uma dor ou facilita o dia a dia de quem est√° no c√≥digo. Isso aproxima, cria conex√£o e faz com que o conte√∫do realmente ajude quem est√° lendo.

## Quem trabalha com DevRel?
Os cargos podem variar: Developer Advocates, Community Managers, Technical Writers, Evangelists‚Ä¶ ou at√© mesmo, uma pessoa de DevRel. Mas, no fim, todas essas fun√ß√µes t√™m em comum o papel de ponte. Uma pessoa de DevRel conecta empresa e comunidade, traduz necessidades t√©cnicas, compartilha aprendizados e garante que a voz de quem desenvolve seja ouvida.

## Por que DevRel importa?
Empresas que investem nessa √°rea n√£o est√£o s√≥ promovendo seus produtos, est√£o construindo rela√ß√µes. Est√£o ouvindo, aprendendo com a comunidade, co-criando solu√ß√µes. E isso faz toda a diferen√ßa.
]]></description>
            <link>https://yagasaki.vercel.app//articles/o-que-e-developer-relations-dev-rel</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/o-que-e-developer-relations-dev-rel</guid>
            <pubDate>Tue, 24 Jun 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Dominando REST de Verdade - O Guia R√°pido que Todo Dev Precisa Salvar]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/3300/sample_5d158e79a419d7ecdcda9b8924fbe017cf1ca549.jpg?3430923)

Se voc√™ est√° construindo ou consumindo APIs REST, este guia direto ao ponto vai te mostrar tudo o que precisa saber para projetar servi√ßos web com clareza, escalabilidade e boas pr√°ticas. Aprenda a evitar os erros mais comuns, utilizar os m√©todos HTTP corretamente, aplicar versionamento, pagina√ß√£o e estruturar endpoints como um profissional. Ideal para quem est√° come√ßando e essencial como refer√™ncia para quem j√° desenvolve h√° mais tempo. Leia, salve e compartilhe com outros devs que querem elevar o n√≠vel das APIs que produzem.

# Como Projetar uma API REST

- **REST (Transfer√™ncia de Estado Representacional)** √© um estilo arquitet√¥nico para construir servi√ßos web.
- Foco em recursos, n√£o em a√ß√µes (e.g., `/users`, n√£o `/getUsers`).

## Restri√ß√µes REST:

1. **Arquitetura Cliente‚ÄìServidor**: Clientes e servidores operam independentemente.
2. **Sem Estado**: Cada requisi√ß√£o deve conter todas as informa√ß√µes necess√°rias para process√°-la.
3. **Cache√°vel**: Respostas devem definir se s√£o cache√°veis para melhorar o desempenho.
4. **Interface Uniforme**: Uma estrutura consistente e previs√≠vel para intera√ß√µes.
   a. **Identifica√ß√£o de Recursos**: Cada recurso tem um URI √∫nico (e.g., `/users/123`).
   b. **Manipula√ß√£o de Recursos atrav√©s de Representa√ß√µes**: Clientes modificam recursos via representa√ß√µes (e.g., JSON).
   c. **Mensagens Auto-descritivas**: Requisi√ß√µes/respostas incluem todas as informa√ß√µes necess√°rias.
   d. **Hiperm√≠dia como Mecanismo de Estado da Aplica√ß√£o (HATEOAS)**: Respostas cont√™m links para a√ß√µes relacionadas para f√°cil navega√ß√£o.
5. **Sistema em Camadas**: APIs devem suportar uma arquitetura de m√∫ltiplas camadas sem expor detalhes de implementa√ß√£o.
6. **C√≥digo sob Demanda (opcional)**: Servidores podem enviar c√≥digo execut√°vel para clientes.

## M√©todos HTTP:

- **GET**: Recuperar dados de um recurso (somente leitura).
- **POST**: Criar um novo recurso.
- **PUT**: Atualizar um recurso existente ou criar se n√£o existir.
- **DELETE**: Remover um recurso.
- **PATCH**: Atualizar parcialmente um recurso.

## Melhores Pr√°ticas:

- Use substantivos para endpoints (evite verbos): `/products` em vez de `/getProducts`.
- Use c√≥digos de status HTTP efetivamente:
  - `200 OK`: Sucesso.
  - `201 Created`: Recurso criado com sucesso.
  - `404 Not Found`: Recurso n√£o existe.
  - `500 Internal Server Error`: Erro no servidor.
- **Tratamento de Vers√£o**: Use URLs para versioning (e.g., `/api/v1/`).
- **Pagina√ß√£o para Grandes Conjuntos de Dados**: Inclua par√¢metros como `limit` e `offset`.

---

## Continua√ß√£o do artigo ‚Äî Dicas Extras para APIs RESTful

## Seguran√ßa

- **Autentica√ß√£o e Autoriza√ß√£o**: Use tokens JWT ou OAuth2 para garantir acesso seguro.
- **HTTPS Sempre**: Proteja dados em tr√¢nsito usando HTTPS.
- **Rate Limiting**: Evite abusos de API limitando o n√∫mero de requisi√ß√µes por IP/usu√°rio.
- **Valida√ß√£o de Entrada**: Sempre valide os dados recebidos pelo cliente para evitar inje√ß√µes ou dados malformados.

## Consist√™ncia

- **Nomes padronizados**: Padronize o uso de nomes no plural (e.g., `/users`, `/products`).
- **Estrutura uniforme de resposta**:

```json
{
  "data": { ... },
  "error": null
}
```

Ou, em caso de erro:

```json
{
  "data": null,
  "error": {
    "message": "Recurso n√£o encontrado",
    "code": 404
  }
}
```

## Documenta√ß√£o

- **Documente com Swagger/OpenAPI**: Gere documenta√ß√£o interativa para facilitar o uso da API por terceiros.
- **Inclua exemplos de uso**: Demonstre como consumir os endpoints, com curl, Postman ou c√≥digo.

## Testes

- **Teste seus endpoints**: Use ferramentas como Postman, Insomnia ou testes automatizados (e.g., Jest, Supertest).
- **Cobertura de testes para erros**: Teste casos como inputs inv√°lidos, acessos n√£o autorizados, e conflitos (`409 Conflict`).

## Monitoramento

- **Logs estruturados**: Registre requisi√ß√µes, respostas e erros com clareza.
- **M√©tricas e tracing**: Utilize Prometheus, Grafana, ou servi√ßos como New Relic para acompanhar desempenho.

---

Com esses princ√≠pios e boas pr√°ticas, voc√™ ter√° uma base s√≥lida para projetar APIs REST bem estruturadas, seguras e escal√°veis.
]]></description>
            <link>https://yagasaki.vercel.app//articles/dominando-rest-de-verdade-o-guia-rapido-que-todo-dev-precisa-salvar</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/dominando-rest-de-verdade-o-guia-rapido-que-todo-dev-precisa-salvar</guid>
            <pubDate>Thu, 29 May 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Configurando o SEO do Head com Next.js]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1616499370260-485b3e5ed653?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80)

Em 2013, eu havia criado o Onigiri Hardcore, um blog de not√≠cias sobre animes, jogos e tudo que envolve a
cultura nerd como um todo. Ano passado, depois de nove anos, eu tinha decidido restaurar ele e
desenvolv√™-lo com outras tecnologias. Inicialmente ele era em Blogger, depois passou para Wordpress e
hoje, fiquei na d√∫vida sobre como desenvolver ele. Seria em Docusaurus, por conta da otimiza√ß√£o do SEO e
f√°cil manipula√ß√£o com Markdown, ou seria em Next.js, por conta da facilidade de desenvolvimento - por ser
em React por debaixo dos panos - e otimiza√ß√£o do SEO? Manteria ele em React e for√ßaria um _Server Side
Rendering_ para que o SEO funcionasse?

Teve muitas coisas que tive que estudar para transformar o Onigiri Hardcore no que est√° hoje, em quest√µes
visuais n√£o foi dif√≠cil, para um desenvolvedor focado em Front-end como eu, desevolvi em duas, tr√™s
semanas. Ali contava com tudo pronto, slide, menu, footer, etc. Mas, o que me deixou mais tempo foi a
quest√£o do SEO. Eu n√£o queria que o SEO fosse feito de forma manual, eu queria que fosse feito de forma
autom√°tica, como o Docusaurus faz. Ent√£o, eu tive que estudar como o Docusaurus fazia e como o Next.js
fazia e comparar como funcionava por debaixo dos panos.

E, no final, n√£o resolveu de nada. O maior problema? V√°rias fontes auxiliavam em desenvolver o SEO focado
apenas na primeira p√°gina e n√£o em algo como um blog que requer um SEO din√¢mico em outras p√°ginas, o
Docusaurus fazia isso, mas valeria a pena trocar toda a infraestrutura s√≥ para testar isso? N√£o, n√£o
valia, seria muito retrabalho e havia v√°rios projetos j√° em NextJS, a quest√£o era identificar o que eu
estava fazendo de errado.

E eis a solu√ß√£o.

# Configurando o SEO do Head com Next.js

Neste artigo, discutiremos a cria√ß√£o de um arquivo _document.js, a organiza√ß√£o do componente principal
NextJs, a cria√ß√£o de um componente principal de SEO din√¢mico e a otimiza√ß√£o do SEO com o seguinte:

- T√≠tulo e descri√ß√£o ‚Äúregulares‚Äù
- Og title e descri√ß√£o
- Twitter Card
- URL can√¥nico
- Dados estruturados

Tamb√©m discutiremos brevemente algumas pr√°ticas recomendadas para metatags e dados estruturados aplicados
ao site. Tamb√©m podemos criar ‚Äúvari√°veis globais‚Äù para manter nossas informa√ß√µes centralizadas em um
arquivo. Dessa forma, se uma informa√ß√£o mudar, n√£o precisamos vasculhar todos os arquivos e
potencialmente nos expor a erros. Ent√£o vamos come√ßar!

Come√ßaremos com nossas vari√°veis globais, pois as usaremos v√°rias vezes. Manterei o n√∫mero de vari√°veis
no m√≠nimo, mas use sua imagina√ß√£o para aplic√°-las. Eles n√£o funcionam apenas para metatags e s√£o √∫teis
para n√∫meros de telefone, endere√ßos ou qualquer coisa que voc√™ tenha em seu site mais de uma vez. Usarei
as informa√ß√µes do Onigiri Hardcore para demonstrar melhor tudo que acontece.

## Criando Vari√°veis Globais

No caso, dentro da estrutura do NextJS, usei o pr√≥prio `src` e criei um arquivo chamado `SEO.js`. Este
arquivo conter√° o objeto SEO que usaremos em todo o site. Este arquivo √© adequado para metadados e
qualquer coisa sujeita a altera√ß√µes. Verifique se essa nomenclatura n√£o ir√° atrapalhar o projeto ou dar
conflito em alguma palavra reservada.

```js
// src/seo.js

const SEO = {
    title: 'Onigiri Hardcore',
    description: 'Um site nerd entregando conte√∫dos nerds desde 2013',
    siteThumbnail: 'https://i.imgur.com/VoOogmx.jpg',
    siteUrl: "https://onigirihardcore.vercel.app",
    email: "kalifyinc@gmail.com",
    twitter: "https://twitter.com/OnigiriHardcore",
    twitterHandle: "@OnigiriHardcore",
    ogType: "website",
}

export default SEO
```

Podemos facilmente importar este arquivo e usar a nota√ß√£o de ponto regular ao acessar nossas vari√°veis
(SEO.title = Onigiri Hardcore). Se o seu logotipo aparecer no cabe√ßalho, rodap√© e outras √°reas do seu
site, voc√™ pode aplic√°-lo em todos os lugares necess√°rios com `<img src={SEO.siteThumbnail} alt="" />`,
por exemplo. Se for necess√°rio alterar o logotipo ou o nome do logotipo, basta acessar `SEO.js` e
alter√°-lo aqui para refletir as altera√ß√µes em todo o site.

## Criando um arquivo _document
A cria√ß√£o de um arquivo `_document.js` personalizado estender√° o documento padr√£o usado em cada p√°gina,
que controlar√° a estrutura HTML. √â aqui que voc√™ pode colocar links para arquivos externos, como o link
de uma fonte do Google Fonts, e √© um bom lugar para metatags que permanecer√£o constantes em todo o site.

:::tip
Se voc√™ n√£o usa o styled-components em seu projeto, voc√™ pode ignorar as informa√ß√µes abaixo do
`Fast refresh with NextJS doesn't broken the CSS` e focar apenas na codifica√ß√£o dentro do `render()`,
nele temos informa√ß√µes simples que n√£o iremos alterar e ir√° permanecer em toda a aplica√ß√£o.
:::

```js
// pages/_document.js

import { ServerStyleSheet } from 'styled-components';
import Document, { Html, Main, Head, NextScript } from 'next/document';

export default class MyDocument extends Document {

    // Fast refresh with NextJS doesn't broken the CSS
    static async getInitialProps(ctx) {
        const sheet = new ServerStyleSheet()
        const originalRenderPage = ctx.renderPage

        try {
            ctx.renderPage = () =>
                originalRenderPage({
                    enhanceApp: (App) => (props) =>
                        sheet.collectStyles(<App {...props} />),
                })

            const initialProps = await Document.getInitialProps(ctx)
            return {
                ...initialProps,
                styles: (
                    <>
                        {initialProps.styles}
                        {sheet.getStyleElement()}
                    </>
                ),
            }
        } finally {
            sheet.seal()
        }
    }
    // Finish Here

    render() {
        return (
            <Html lang="pt-br">
                <Head>
                    <meta charSet="utf-8" />
                    <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
                    <link rel="icon" type="image/png" href="/icone.png" />
                    <meta name="robots" content="index, follow" />
                </Head>

                <body>
                    <Main />
                    <NextScript />
                </body>
            </Html>
        )
    }
}
```

## Criando um componente de Head din√¢mico
Em seguida, precisaremos criar um arquivo para nosso componente Head din√¢mico. Chamei meu `OwnHead.jsx`;
√© aqui que residir√° a maior parte de nossa marca√ß√£o de metadados.

```js
// components/OwnHead.jsx

import Head from "next/head"

const OwnHead = () => {
    return (
        <Head>

        </Head>
    )
}

export default OwnHead
```

Em seguida, inicialize as metavari√°veis a serem usadas em outros componentes. Itens como t√≠tulo,
descri√ß√£o e URL da imagem podem ser usados v√°rias vezes aqui, reduzindo a quantidade de c√≥digo necess√°ria
em nossos outros componentes. Descobri que usar o t√≠tulo, descri√ß√£o, canonicalUrl, ogTwitterImage e
ogType era suficiente para qualquer metatag lan√ßada contra mim. Se voc√™ precisar de mais, basta adicionar
mais vari√°veis aqui e us√°-las em outros componentes.

```js
// components/OwnHead.jsx

import Head from "next/head"

const OwnHead = ({
    title,
    description,
    canonicalUrl,
    ogTwitterImage,
    ogType,
    children,
}) => {

    return (
        <Head>

        </Head>
    )
}

export default OwnHead
```

Podemos come√ßar retornando nossas meta tags junto com as vari√°veis globais que criamos anteriormente com
elas inicializadas.

```js
// components/OwnHead.jsx

import Head from "next/head"
import SEO from "@data/siteMetadata"

const OwnHead = ({
    title,
    description,
    canonicalUrl,
    ogTwitterImage,
    ogType,
    children,
}) => {

    return (
        <Head>
            <title>{title}</title>
            <meta name="viewport" content="width=device-width, initial-scale=1"/>
            <meta name="description" content={description} />

            <meta name="twitter:card" content="summary" />
            <meta name="twitter:site" content={SEO.twitterHandle} />
            <meta name="twitter:title" content={title} />
            <meta name="twitter:description" content={description} />
            <meta name="twitter:image" content={ogTwitterImage} />

            <link rel="canonical" href={canonicalUrl} />

            <meta property="og:locale" content="en_US" />
            <meta property="og:site_name" content={SEO.companyName} />
            <meta property="og:type" content={ogType} />
            <meta property="og:title" content={title} />
            <meta property="og:description" content={description} />
            <meta property="og:image" content={ogImageUrl} />
            <meta property="og:url" content={canonicalUrl} />
        </Head>
    )
}

export default OwnHead
```

Agora temos uma boa vis√£o do que cada p√°gina ir√° ter em sua se√ß√£o de cabe√ßalho. A seguir, vamos discutir
o que estamos usando para entender melhor nossos metadados; ent√£o, usaremos nosso componente rec√©m-criado
em nossas p√°ginas.

## Title

Assim como parece, o t√≠tulo de cada documento. O t√≠tulo √© exibido na guia do navegador e geralmente exibe
de 55 a 60 caracteres. Os mecanismos de pesquisa omitir√£o qualquer coisa mais longa nos resultados.
Certifique-se de que seus t√≠tulos sejam informativos e exclusivos para cada p√°gina.

Ao inicializar uma vari√°vel de t√≠tulo em nosso componente, podemos us√°-la para nossa metatag de t√≠tulo
regular, a metatag de t√≠tulo de gr√°fico aberto e nosso cart√£o do Twitter.

## Description

Cada p√°gina deve ter uma descri√ß√£o informativa e exclusiva. Descri√ß√µes com mais de 160 caracteres
geralmente n√£o s√£o exibidas. Embora n√£o haja um m√≠nimo, deve ser longo o suficiente para descrever a
p√°gina com precis√£o.

Ao inicializar uma vari√°vel de descri√ß√£o em nosso componente, podemos us√°-la para nossa metatag de
descri√ß√£o regular, a metatag de descri√ß√£o de gr√°fico aberto e nosso cart√£o do Twitter.

## Canonical

O Google recomenda o uso de tags can√¥nicas para conte√∫do duplicado em seu site. No entanto, se um link
can√¥nico n√£o for definido explicitamente, o Google far√° essa escolha para voc√™, levando a resultados
inesperados. Esteja ciente, mesmo que voc√™ selecione um link can√¥nico, o Google pode escolher uma p√°gina
diferente se achar necess√°rio. Como o inicializamos em nosso componente, teremos um definido
explicitamente para cada p√°gina.

Ao inicializar uma vari√°vel canonicalUrl em nosso componente, podemos us√°-la para nossa tag Link can√¥nica
e a metatag de URL de grafo aberto.

## Open Graph

O Open Graph do Facebook tem algumas meta tags, e n√≥s cobrimos a maioria, mas n√£o todas. O que inclu√≠ √© o
suficiente para exibir postagens compartilhadas corretamente, mas √© isso. Se voc√™ tiver um, precisar√°
adicionar propriedades para o v√≠deo ou para o ID do aplicativo do Facebook.

Inicializamos uma vari√°vel chamada ogType e devo explicar como usaremos isso. A propriedade ‚Äútipo‚Äù tem
usos diferentes dependendo da p√°gina do nosso site. Por exemplo, o ‚Äútipo‚Äù para p√°ginas como √≠ndice,
contato, sobre ou similares ser√° ‚Äúsite‚Äù e para postagens de blog ser√° ‚Äúartigo‚Äù.

Al√©m disso, o comprimento m√°ximo da descri√ß√£o √© de 60 caracteres, mas temos nossa vari√°vel {description},
que tamb√©m usamos para nossa meta tag de descri√ß√£o regular. No entanto, a descri√ß√£o padr√£o √© de 160
caracteres, ent√£o o que fazemos? Voc√™ pode dividir os dois se quiser, mas n√£o h√° penalidade por passar
gr√°ficos abertos de 60 caracteres no m√°ximo. Tenha em mente que ele ser√° truncado.

## Twitter Card
Como o Open Graph, temos a maioria das bases cobertas aqui, mas n√£o todas. Temos o suficiente para exibir
uma p√°gina ou postar corretamente. O comprimento m√°ximo da descri√ß√£o do Twitter √© de 200 caracteres,
ent√£o estamos seguros com o comprimento m√°ximo de 160 caracteres que definimos para nossa vari√°vel.

## Head com conte√∫dos din√¢micos na P√°gina Inicial

Por fim, podemos usar nosso componente din√¢mico de cabe√ßa para visualizar como nos salvamos da repeti√ß√£o
de codifica√ß√£o. Novamente, isso funciona excepcionalmente bem para p√°ginas est√°ticas, e veremos como usar
isso em uma se√ß√£o de blog a seguir.

```js
import SEO from "src/SEO"
import OwnHead from "components/OwnHead"

const Index = () => {
    return (
        <>
            <OwnHead
                title={`Your Awesome Title Here`}
                description={`Your description goes here on every page. Keep character count between 140 to 160 characters`}
                canonicalUrl={SEO.siteUrl}
                ogTwitterImage={SEO.siteLogoSquare}
                ogType={"website"}
            />

            <div>
                <h1>P√°gina Inicial</h1>
            </div>
        </>
    )
}

export default Index
```

## Head com conte√∫dos din√¢micos no Blog

Aqui veremos como utilizar o componente head din√¢mico em uma p√°gina de blog. Como este √© um blog NextJS,
ele √© inicializado com {post} que mapeia as postagens. Podemos usar `post.title`, `post.description` e,
dependendo da sua configura√ß√£o, `post.image.url`. O site deste projeto usa um m√©todo de fetch e criei
todos os par√¢metros em seu site.

```js
// pages/blog/[slug].js

import { getPosts } from "../../services"
import SEO from "src/SEO"
import OwnHead from "components/OwnHead"

export async function getStaticProps() {
    const response = await fetch('API_FETCH')
    const data = await response.json()
    return {
        props: {
            data
        }
    }
}

const Post = ({post}) => {
    return (
        <>
            <Header />
            <SlugDetails>
                {
                    data && data.map((post, index) => (
                        post.slug === slug ? (
                            <div key={index}>
                                <OwnHead title={title + post.title} description={post.description}
                                    canonicalUrl={SEO.website + slug} ogTwitterImage={post.image} ogType={SEO.ogType} />
                                <h1>{post.title}</h1>
                                <p>{post.description}</p>
                            </div>
                        ) : null
                    ))
                }
            </SlugDetails>
            <Footer />
        </>
    )
}

export default Post
```

E √© isso, espero que te ajude da mesma maneira que me ajudou, levei muito tempo para entender como fazer
isso, v√°rios tutoriais em v√£o, v√°rias abordagens diferentes para tentar chegar nesse mesmo resultado e
tudo em v√£o. Qualquer d√∫vida, estarei a disposi√ß√£o no [Twitter](https://twitter.com/yagasaki7k).

Essa publica√ß√£o √© uma vers√£o adaptada em portugu√™s do [Javascript Articles sobre NextJS Dynamic Head For SEO](https://javascriptarticles.com/nextjs-dynamic-head-for-seo/)

Aproveite!
]]></description>
            <link>https://yagasaki.vercel.app//articles/configurando-o-seo-do-head-com-next-js</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/configurando-o-seo-do-head-com-next-js</guid>
            <pubDate>Mon, 12 May 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Liberando espa√ßo no WSL2]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/1547/sample_25408a7d329087f914e28db646bad7da7ae7a720.jpg?5678146)

Imagine que voc√™ √© um desenvolvedor, usa WSL - ambiente de desenvolvimento Linux no Windows - usa Docker e por algum motivo,
meses depois da primeira formata√ß√£o, seu disco est√° literalmente lotado, mas voc√™ n√£o tem a minima ideia do que aconteceu.
Pois √©, isso j√° aconteceu comigo. Voc√™ usa limpa disco, programas de terceiros, at√© mesmo o pr√≥prio limpador do Windows, mas
nada aconteceu, voc√™ continua com o espa√ßo lotado.

Em casos - como o meu - j√° cheguei at√© a formatar o computador. S√≥ que convenhamos, √© um saco perder horas e horas configurando tudo de novo,
mas afinal, o que acontece?

O WSL usa disco din√¢mico, ent√£o ele vai aumentando o tamanho do disco virtual do WSL conforme voc√™ vai precisando de espa√ßo.
S√≥ tem um problema, ele s√≥ aumenta o tamanho de disco, ele n√£o consegue diminuir sozinho (ou quase). Ent√£o se voc√™ colocar um arquivo de 20GB no WSL,
ele vai adicionar 20GB ao tamanho do disco, e quando voc√™ deletar o arquivo, o tamanho do disco n√£o ir√° diminuir. Mas √© bem simples fazer a realoca√ß√£o do espa√ßo.

# Procure pelos arquivos do disco virtual

Para isso, vamos caminhando at√© as pastas, diretamente no Windows - esque√ßa WSL.

Voc√™ vai at√© esse local:

```bash
C:\Users\_SEU_USU√ÅRIO_\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu...\LocalState
```

Para quem estiver usando o Docker Desktop tamb√©m existe esse local:

```bash
C:\Users\_SEU_USU√ÅRIO_\AppData\Local\Docker\wsl\data
```

Abra o Powershell como Administrador e execute os seguintes comandos:

```bash
wsl --shutdown

diskpart

select vdisk file="C:\...\...\ext4.vhdx"

attach vdisk readonly

compact vdisk

detach vdisk
```

> ‚ö†Ô∏è **Importante:** N√£o pule o passo 1

E pronto, voc√™ ter√° liberado alguns GBs do seu disco. Existem relatos - inclusive para quem usa Docker
que chega a ser liberado mais de 60GB, ent√£o fa√ßa isso periodicamente.

Sabe quais foram as fontes desse artigo?

- [Issue #4699](https://github.com/microsoft/wsl/issues/4699)
- [Compact WSL2 Disk](https://www.github.com/mikemaccana/compact-wsl2-disk/)

Esse artigo foi √∫til pra voc√™? D√° um feedback l√° no [Twitter](https://twitter.com/Yagasaki7k) e me fale quanto
de espa√ßo foi liberado do seu disco.
]]></description>
            <link>https://yagasaki.vercel.app//articles/liberando-espaco-no-wsl2</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/liberando-espaco-no-wsl2</guid>
            <pubDate>Tue, 29 Apr 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como instalar o Ragnarok LATAM no Linux via Proton (usando Heroic)]]></title>
            <description><![CDATA[
![](https://safebooru.org//images/9/da5915ef1cbc7c1b6c995883053ca6c70b164d42.jpg?8321)

Se voc√™ √© das antigas e jogou Ragnarok, deve ter ficado sabendo que o Ragnarok Latam, criado pela Gravity, est√° de volta
e trazendo nostalgia a todos.

Se voc√™ quer rodar o **Ragnarok LATAM** no Linux, d√° pra fazer funcionar perfeitamente com o **Heroic Games Launcher** e **Proton GE**. Este passo a passo foi testado e comprovado ‚Äî tudo gra√ßas ao **aleex5**, que descobriu esse m√©todo e compartilhou com a comunidade.

---

## üõ°Ô∏è Heroic

### ‚úÖ Pr√©-requisitos

- **Heroic Games Launcher** instalado

<details>
<summary>Clique para ver como instalar</summary>

Se voc√™ ainda n√£o tiver o Flatpak instalado:

```bash
sudo apt install flatpak
```

Adicione o reposit√≥rio Flathub:
```bash
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
```

Instale o Heroic:
```bash
flatpak install flathub com.heroicgameslauncher.hgl
```

> A vers√£o Flatpak do Heroic Games Launcher √© prefer√≠vel, pois garante atualiza√ß√µes r√°pidas, maior controle de permiss√µes e desempenho superior em rela√ß√£o ao APT e Snap, que podem ter vers√µes desatualizadas ou sobrecarga de desempenho. Al√©m disso, por ser a vers√£o "Oficial" do app, √© recomendada pelos pr√≥prios desenvolvedores.
</details>

- **Proton GE** (Proton GloriousEggroll)

---

## üì• Instalando o Proton GE no Heroic

1. Abra o **Heroic Games Launcher**
2. V√° em `Configura√ß√µes` ‚Üí `Wine Manager`
3. Na aba **Proton-GE**, baixe a vers√£o **GE-Proton9-27**
   (Vers√µes mais novas tamb√©m podem funcionar)

---

## üéÆ Instalando o Ragnarok no Heroic

1. No Heroic, clique em **ADD GAME**
2. Preencha o campo **Game/App Name** com **Ragnarok**
3. Expanda a se√ß√£o **Show Wine Settings**
4. Selecione **GE-Proton9-27** em **Wine Version**
5. Clique em **Run Installer First** (Importante: escolha o Proton **antes** de rodar o `.exe`)
6. Selecione o instalador `.exe` do **Ragnarok LATAM** que voc√™ baixou
7. Rode o instalador normalmente
8. Ap√≥s a instala√ß√£o, localize o execut√°vel do jogo:

Caminho padr√£o:
```yaml
~/path/to/prefix/Prefixes/default/Ragnarok/pfx/drive_c/Gravity/Ragnarok/Ragnarok.exe
```

9. Finalize a instala√ß√£o

---

## ‚öôÔ∏è Configurando o Wine (Proton)

1. No Heroic, v√° at√© as **Configura√ß√µes** do jogo
2. Clique em **Wine Config (winecfg)**
3. Na aba **Aplicativo**, clique em **Add application...** e selecione `Ragexe.exe` no caminho `Gravity/Ragnarok/Ragexe.exe`
4. Com o `Ragexe.exe` selecionado, defina o modo de compatibilidade como **Windows 7**
5. Clique em **Aplicar** e depois em **OK**

### üìù Passos opcionais

1. Instale as fontes do Windows clicando em **Winetricks**
2. Instale o pacote `corefonts`

> **Importante:**
> Algumas pessoas relataram que precisaram deletar o arquivo `dbghelp.dll` da pasta `System32`, localizada em:
>
> ```
> ~/path/to/prefix/Prefixes/default/Ragnarok/pfx/drive_c/Windows/System32
> ```
> para o jogo rodar corretamente. Vale a tentativa se algo n√£o funcionar!

---

## üöÄ Rodando o Ragnarok

Agora √© s√≥ abrir o jogo normalmente pelo Heroic.
Se tudo estiver configurado certo, o Ragnarok vai iniciar sem problemas!

---

## üôå Agradecimentos

Agradecimento especial ao **@aleex5**, que descobriu essa configura√ß√£o e compartilhou com a galera ‚Äî salvando a comunidade Linux que queria reviver esse cl√°ssico!

---

## ü§ù Contribui√ß√£o

Para contribuir, basta mandar um PR no seguinte reposit√≥rio:
[https://github.com/RyuunosukeDS3/ragnarok-latam-linux-guide](https://github.com/RyuunosukeDS3/ragnarok-latam-linux-guide)
]]></description>
            <link>https://yagasaki.vercel.app//articles/como-instalar-o-ragnarok-latam-no-linux-via-proton-usando-heroic</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/como-instalar-o-ragnarok-latam-no-linux-via-proton-usando-heroic</guid>
            <pubDate>Thu, 06 Mar 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Diferen√ßas entre Ci√™ncia da Computa√ß√£o, An√°lise e Desenvolvimento de Sistemas e Engenharia de Software]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/2/sample_4ed69f8e53a6b19710bc7ffa5fde4c5bad6d3718.jpg?5294517)

No universo da tecnologia, √© comum encontrar confus√£o entre os cursos e √°reas de **Ci√™ncia da Computa√ß√£o**, **An√°lise e Desenvolvimento de Sistemas** e **Engenharia de Software**. Apesar de compartilharem algumas semelhan√ßas, cada uma dessas disciplinas tem focos, objetivos e abordagens distintos. Neste artigo, vamos explorar essas diferen√ßas para ajudar voc√™ a entender qual delas se alinha melhor aos seus interesses ou carreira.

---

## Ci√™ncia da Computa√ß√£o

### O que √©?
A **Ci√™ncia da Computa√ß√£o** √© uma √°rea te√≥rica e acad√™mica que estuda os fundamentos da computa√ß√£o. Ela se aprofunda em conceitos como algoritmos, estruturas de dados, teoria da computa√ß√£o, intelig√™ncia artificial, criptografia e sistemas operacionais.

### Foco principal
- **Teoria e abstra√ß√£o**: Entender como a computa√ß√£o funciona em um n√≠vel fundamental.
- Desenvolvimento de novos m√©todos, ferramentas e tecnologias.
- Pesquisa e inova√ß√£o em √°reas como machine learning, computa√ß√£o qu√¢ntica e an√°lise de complexidade.

### Perfil do profissional
O cientista da computa√ß√£o geralmente √© algu√©m curioso, com interesse em resolver problemas complexos e abstratos. Muitos seguem carreira acad√™mica ou atuam em pesquisa e desenvolvimento (P&D) em grandes empresas de tecnologia.

### Exemplos de atua√ß√£o
- Desenvolvimento de novos algoritmos para IA.
- Pesquisa em seguran√ßa cibern√©tica.
- Cria√ß√£o de linguagens de programa√ß√£o ou compiladores.

### Grade curricular (exemplos)
- Matem√°tica avan√ßada (c√°lculo, √°lgebra linear).
- Teoria dos aut√¥matos e linguagens formais.
- Programa√ß√£o em n√≠vel baixo (como assembly).

---

## An√°lise e Desenvolvimento de Sistemas

### O que √©?
**An√°lise e Desenvolvimento de Sistemas** (ADS) √© uma √°rea mais pr√°tica e voltada para o mercado de trabalho. O foco est√° em projetar, desenvolver e manter sistemas de software que atendam √†s necessidades de empresas ou usu√°rios finais.

### Foco principal
- **Solu√ß√µes pr√°ticas**: Criar sistemas funcionais e eficientes para problemas reais.
- An√°lise de requisitos e implementa√ß√£o de softwares sob demanda.
- Manuten√ß√£o e evolu√ß√£o de sistemas existentes.

### Perfil do profissional
O analista e desenvolvedor de sistemas √© um "resolvedor de problemas" com foco em atender clientes ou empresas. Ele trabalha diretamente com tecnologias atuais e frameworks populares, priorizando entregas r√°pidas e funcionais.

### Exemplos de atua√ß√£o
- Desenvolvimento de um sistema de gerenciamento para uma empresa.
- Cria√ß√£o de aplicativos web ou mobile.
- Integra√ß√£o de sistemas legados com novas tecnologias.

### Grade curricular (exemplos)
- Banco de dados e modelagem.
- Programa√ß√£o web (HTML, CSS, JavaScript).
- Metodologias √°geis (Scrum, Kanban).

---

## Engenharia de Software

### O que √©?
A **Engenharia de Software** √© uma disciplina que aplica princ√≠pios de engenharia ao desenvolvimento de software. Ela foca no processo completo de cria√ß√£o, desde o planejamento at√© a manuten√ß√£o, garantindo qualidade, escalabilidade e confiabilidade.

### Foco principal
- **Processos estruturados**: Uso de metodologias para gerenciar grandes projetos de software.
- Qualidade do produto final (robustez, efici√™ncia, testabilidade).
- Trabalho em equipe e gest√£o de ciclo de vida do software.

### Perfil do profissional
O engenheiro de software √© organizado, met√≥dico e atento aos detalhes. Ele geralmente atua em projetos maiores, colaborando com equipes multidisciplinares e garantindo que o software seja sustent√°vel a longo prazo.

### Exemplos de atua√ß√£o
- Arquitetura de sistemas corporativos complexos.
- Gest√£o de projetos de software em larga escala.
- Implementa√ß√£o de testes automatizados e DevOps.

### Grade curricular (exemplos)
- Gerenciamento de projetos de software.
- Engenharia de requisitos.
- Design de software e padr√µes de projeto.

---

## Compara√ß√£o R√°pida

| Aspecto                  | Ci√™ncia da Computa√ß√£o         | An√°lise e Desenvolvimento de Sistemas | Engenharia de Software         |
|--------------------------|-------------------------------|---------------------------------------|--------------------------------|
| **Foco**                | Teoria e inova√ß√£o            | Pr√°tica e solu√ß√µes r√°pidas           | Processos e qualidade          |
| **Abordagem**           | Abstrata e acad√™mica         | Pr√°tica e orientada ao mercado       | Sistem√°tica e estruturada      |
| **Atua√ß√£o principal**   | Pesquisa e P&D               | Desenvolvimento de sistemas          | Gest√£o de projetos de software |
| **Escala de projetos**  | Geralmente individual/pesquisa | Pequenos a m√©dios projetos          | M√©dios a grandes projetos      |
| **Base curricular**     | Matem√°tica e teoria          | Programa√ß√£o e ferramentas pr√°ticas   | Metodologias e processos       |

---

## Qual escolher?

- **Ci√™ncia da Computa√ß√£o**: Ideal para quem ama teoria, pesquisa e quer criar o "futuro" da tecnologia.
- **An√°lise e Desenvolvimento de Sistemas**: Perfeito para quem quer entrar r√°pido no mercado e desenvolver solu√ß√µes pr√°ticas - como ser desenvolvedor web, mobile / programador.
- **Engenharia de Software**: √ìtimo para quem gosta de planejar, gerenciar e construir planejamento de softwares robustos em equipe.

Cada uma dessas √°reas tem seu valor e depende dos seus objetivos. Seja explorando os limites da computa√ß√£o, entregando sistemas funcionais ou garantindo qualidade em larga escala, h√° um caminho para cada perfil no mundo da tecnologia!
]]></description>
            <link>https://yagasaki.vercel.app//articles/diferencas-entre-ciencia-da-computacao-analise-e-desenvolvimento-de-sistemas-e-engenharia-de-software</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/diferencas-entre-ciencia-da-computacao-analise-e-desenvolvimento-de-sistemas-e-engenharia-de-software</guid>
            <pubDate>Thu, 20 Feb 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[O que √© lideran√ßa t√©cnica, o famoso Tech Lead?]]></title>
            <description><![CDATA[![](https://safebooru.org//samples/2386/sample_237af85b75563428bfc120274a9831b0841344d4.jpg?2485489)

Esse artigo de estudo √© uma an√°lise com base na aula sobre Lideran√ßa T√©cnica do S√©rgio Fiorotti na Rocketseat. Toda a explica√ß√£o, toda a an√°lise, √© com base na aula dele, e
transportada para o que eu entendo, o que eu acho, e a melhor abordagem em cima disso.

# O que √© ser Tech Lead?
√â um cargo, definitivamente, ent√£o diferente de ser um l√≠der ou ter uma lideran√ßa em um projeto, isso n√£o te faz um Tech Lead. O Tech Lead √© um cargo, e ele √© respons√°vel por
envolver a parte t√©cnica, gerir as pessoas, o neg√≥cio, ele tamb√©m √© respons√°vel por ajudar e/ou conduzir as diretrizes t√©cnicas do neg√≥cio, e convergir a solu√ß√£o de um problema,
mantendo a autonomia das pessoas, ou seja, a ess√™ncia delas.

Claro que diferente disso, liderar um projeto j√° √© mais diferente, j√° que voc√™ n√£o precisa gerir as pessoas, voc√™ √© respons√°vel apenas por aquele projeto e passar adiante,
as tarefas, tentar explicar com clareza o que deve ser feito, e assim por diante. Por isso, lideran√ßa n√£o √© um cargo.

# Por que existe o Tech Lead?
No primeiro momento, quando uma empresa √© criada, geralmente ela comp√µe um CEO, sendo um Diretor Geral e um CTO, um diretor de tecnologia, geralmente essa pessoa √© uma desenvolvedora,
ap√≥s ir evoluindo, a empresa vai crescendo, no primeiro momento podendo ter um desenvolvedor - sem contar o CTO - e um designer freela, depois disso ter tr√™s desenvolvedores e um designer,
E no quarto momento ter sete desenvolvedores, um designer, um respons√°vel pelo produto e um devops - que √© o respons√°vel pela infraestrutura. Agora, depois que passa desse n√∫mero,
podendo at√© ser uma quantidade menor do que sete membros, fica um pouco complicado gerir uma grande quantidade de pessoas.

Eis que surge o Tech Lead. Ele ser√° o membro respons√°vel por alinhar com todos os desenvolvedores, dessa maneira, o CTO ou o CEO da empresa, passar√° a tarefa para ele,
e ele se encarregar√° de passar para os desenvolvedores, criando uma cadeia de comando e evitando tantas responsabilidades para uma √∫nica pessoa.

# Qual o escopo de um Tech Lead?

Imaginamos o seguinte cen√°rio, voc√™ foi de J√∫nior ou Estagi√°rio (Early-Career), evoluiu para Pleno (Mid-Level), e depois de um tempo, voc√™ se tornou S√™nior.

Existem v√°rios escopos aonde um S√™nior pode seguir. Ele pode seguir para a parte de gest√£o, mas raramente acontece de um s√™nior que virou gestor, retornar
para a parte t√©cnica e temos a parte t√©cnica, aonde ele pode optar por ser tornar um Tech Lead, um Engineering Manager que √© basicamente um Staff Engineer ou pode seguir outros caminhos,
como VP que √© Vice-Presidente, um CTO que √© Chief Technology Officer, um chefe de tecnologia como mencionado anteriormente e assim por diante.

Em empresas pequenas ou startups, √© normal ter um Tech Lead que seja Staff Engineer, por conta da necessidade da empresa, e logo mais pra frente, quando estiver mais estruturada, isso
acabar mudando. Pode sim, existir mais de um Tech Lead para empresas - geralmente quando a empresa est√° grande. Assim, como pode ter v√°rios S√™niors, e assim por diante, tudo depende,
do escopo em que a empresa est√°.

O que geralmente acontece? Um S√™nior virar um Staff Engineer, e um Staff Engineer virar um Tech Lead, e um Tech Lead virar um Engineering Manager e raramente, acontece, esse
retrocesso, como um Engineering Manager virar um Tech Lead, e um Tech Lead virar um Staff Engineer, e um Staff Engineer voltar a ser apenas um S√™nior, dentro de uma empresa,
claro que pode acontecer por falta de oportunidade de trabalho, mas √© incomum esse tipo de situa√ß√£o dentro da empresa.

At√© porqu√™, quando se come√ßa a gerir pessoas, voc√™ deixa a responsabilidade t√©cnica para outras e o seu foco n√£o volta mais a ser o mesmo.

# Quais s√£o os Pilares do Tech Lead? (4Ps)
## Plataforma
- Arquitetura
Qualidade do c√≥digo, testes, documenta√ß√£o, escalabilidade, manutenibilidade, performance, seguran√ßa, e assim por diante.

- Decis√µes T√©cnicas
Validar a decis√£o, sendo Paliativa ou Definitiva (sendo o melhor cen√°rio)

- DevOps
Cultura DevOps, se preocupar com o processo de desenvolvimento, se preocupar com automatiza√ß√£o, pipeline, com a valida√ß√£o, evitar erros.

## Produto
- Modelos de Neg√≥cio
Saber sobre o modelo de neg√≥cio da empresa, se √© um SaaS, um marketplace, fintech. Existem problemas comuns em cada aspecto do neg√≥cio.

- Squad
Como dividir o time de engenharia e desenvolvimento, tecnologia. Geralmente baseado em algum problema, existe motivo para ela ter sido dividida.

- Time de Produto e Time de Projeto
Din√¢mica de projeto tem inicio e fim com prazos, depois disso n√£o se envolve mais, porque depois de entregue, √© finalizado.
J√° a din√¢mica de produtos tem como exemplo uma plataforma, aonde tem problemas di√°rios e ainda a solu√ß√µes de melhoria em cima daquele produto, sendo uma plataforma de e-commerce, por exemplo. Trabalhando em algo de maneira constante, diferente do projeto.

## Processos
- Agilidade
Temos para isso as metologias de SCRUM/XP/Kanban. Mas e o papel do Scrum Master (SM)? Ele est√° ali mais para te educar, orientar e te dar um insight referente a metodologia que est√° utilizando,
te dar um auxilio referente ao que deve ser entregue, referente a prazos do produto, qual dificuldade, as quebras de tarefas. E toda a decis√£o deve ser do Tech Lead.

- Ciclo de Desenvolvimento
Se o desenvolvimento pegar uma tarefa e como ele est√° sendo entregue. Em um escopo menor, todos dever√£o ter direito a adicionar uma tarefa e cabe ao Tech Lead validar se aquela tarefa √© v√°lida ou n√£o para o projeto.

- Playbooks
Manuais de Incides de seguran√ßa, suporte, data especifica de prazo, quais alternativas, o que deve ser feito. O Tech Lead tem que educar o time e orientar para que outros saibam fazer o que ele faz e as alternativas e liberdades que o time poder√° ter durante a aus√™ncia do Tech Lead, principalmente em situa√ß√µes aonde o projeto ou produto quebre ou tenha algum problema.

## Pessoas
- Jornada do Talento
Como foi o recrutamento dessa pessoa, entrevista, contrata√ß√£o, integra√ß√£o, treinamento, desenvolvimento, promo√ß√£o, e por fim, a sa√≠da.

- North Star e OKRs
√â como √© feito a avalia√ß√£o de uma pessoa dentro da equipe atrav√©s das metas definidas pela empresa, como ela entregou e o que ela entregou (Resultado x Cultura), a avalia√ß√£o do colaborador, como √© o Plano de Desenvolvimento Individual (PDI), o que essa pessoa quer ser, qual √© o seu plano de carreira.

- Cultura de Feedback
Feedbacks constantes - Mais f√°cil de ter esse tipo de troca de experi√™ncia, feedbacks para evitar ansiedade em cima do desenvolvedor.

Feedback construtivo - O que foi bom, o que foi ruim, o que pode ser melhorado, o que pode ser feito para melhorar, o que pode ser feito para evitar que isso aconte√ßa novamente.

Feedback de Reconhecimento - O que foi bom, o que estava ruim, o que poderia ser melhorado, o que incomoda ou n√£o, o que geralmente atrasa no desenvolvimento em equipe e individual.

![image](https://github.com/user-attachments/assets/d94f0bdb-0844-4c6e-a1c2-20c67bfb76bd)

# O que √© a Jornada do Talento?

## Talento (Talent Moment)

Quem √© o talento? √â o candidato. Primeiro, ele tem o Recruitment Marketing, aonde ele participou de eventos, palestras, workshops, algumas a√ß√µes para contratar.

No segundo momento, ele entra num banco de dados, o sourcing, para filtrar os participantes atrav√©s dos leads para refinar e chegar pr√≥ximo ao escopo esperado da empresa.

Na terceira etapa, temos a oportunidade, a sele√ß√£o (selection), em entrevistas com RH, Tech Lead e passando pelo onboarding, onde existe o teste te√≥rico e pr√°tico, para saber se ele realmente √© o que a empresa espera, aonde passando de contratado para colaborador, sendo tamb√©m conhecido, como o tempo de experi√™ncia.

Depois desse momento, temos o momento de performance, aonde o RH ir√° se comunicar com frequ√™ncia, desenvolvimento, avalia√ß√£o de performance, reconhecimento do membro da equipe.

E por √∫ltimo, o engajamento, quando se torna basicamente um embaixador da empresa, aonde ele ir√° indicar pessoas, participar de eventos, palestras, workshops, e assim por diante.

# O que √© a Jornada do Colaborador?

Recrutamento > Onboarding (Contrata√ß√£o) > Desenvolvimento (Performance > Evolu√ß√£o > Desenvolvimento) > Offboarding (Desligamento)

## Recrutamento
- Quem voc√™ est√° procurando?
  - Qual √© o perfil desejado? (+ t√©cnico / + comunicativo / + cultura (para evolu√ß√£o) / + experi√™ncia)
  - Quais os desafios? (As tecnologias envolvidas, objetivos do projeto, os desafios da equipe)
  - Descri√ß√£o da vaga (Mais contingente com o dia a dia)
  - O que muda na din√¢mica do time (como o envolvimento vai dar impacto na equipe, o que ela espera da equipe)

- Simplifique o seu processo (que desafios ela j√° enfrentou ou precisa enfrentar para conquistar os objetivos necess√°rios)
  - Quais etapas ter√° o processo (entrevista t√©cnica, entrevista com RH, entrevista com Tech Lead e como simplificar isso)
  - Quais as expectativas sobre os candidatos (em cada etapa do processo)
  - Quais as responsabilidades durante o processo (delegar fun√ß√µes para cada processo)

- N√£o seja o vil√£o do recrutamento
 - Planeje sua agenda
 - Tempo para feedbacks (dar feedbacks para os candidatos)
 - Apresentar vis√£o realista sobre o trabalho
 - Divulga√ß√£o da vaga (Ajudar a divulgar a vaga, a construir a vaga)
 - Programa de indica√ß√µes

## Onboarding (Contrata√ß√£o)
- Antes de tudo
Explicar o que ela precisa para trabalhar, acessos que ela precisa, ferramentas que ser√£o utilizadas, como abrir chamado,
como abrir uma issue - se necess√°ria, processo de desenvolvimento para produ√ß√£o, como √© feito o deploy, como √© feito
uma atualiza√ß√£o, monitoramento, processo do projeto (Cliente > CEO / PO (Product Owner) > CTO > Desenvolvedores), code review, etc.

- Apresenta√ß√µes
 - Cultura (Valores da empresa, como trabalham, proatividade, autonomia, responsabilidade, comunica√ß√£o)
 - Opera√ß√£o (Como √© feito o deploy, como √© feito o monitoramento, suporte ao cliente, como √© feito o processo de desenvolvimento)
 - Processos (Os desafios que ir√° enfrentar)

- Desafio (Acostumar com todo o processo, a rotina da empresa e da equipe) - Geralmente usado no tempo de experi√™ncia ou menos.

## Ciclo de Desenvolvimento
- Cultura de feedbacks (1-1, feedbacks constantes, metas atingidas)
- Alinhamento de carreira (Alinhar a carreira do contribuinte com o que ele deseja, aonde ele quer chegar)
- North Star e OKRs (Avalia√ß√£o de performance, o que foi entregue, metas da empresa, o que pode ser melhorado)
- Delegar para desenvolver (Para eles desenvolverem da maneira que voc√™ deseja, sem interferir no processo e na qualidade)

## Performance
Como avaliamos algu√©m que est√° se desenvolvendo?
- 1-1s (Tenha frequ√™ncia para dar feedbacks)
- Avalia√ß√£o 360
- Como e quando dar um aumento? (Baseado na performance, reconhecimento, performar no desenvolvimento, na qualidade do trabalho, na qualidade do feedback)
- Promo√ß√£o e M√©rito

## Offboarding
- J√° houveram feedbacks?
- Decis√£o baseada em fatos
- Decis√£o foi tomada em cima dos valores ou performance
- Esgotaram as possibilidades? (Declino de performance, fato recorrente ou critico)
- Evite efetuar offboarding sozinho (Isso mostra apoio na decis√£o - escolha um outro l√≠der)

# Os cinco desafios das equipes
Baseada no livro "Os cinco desafios das equipes" de Patrick Lencioni

## Desafio 1
- Falta de confian√ßa (entre os membros da equipe - geralmente acontece quando tem membro novo ou l√≠der novo)
 - Escondem suas fraquezas e seus erros uns dos outros
 - Hesitam em pedir ajuda ou dar feedbacks
 - Hesitam em oferecer ajuda a pessoas que atuam fora de suas √°reas de responsabilidade
 - Tiram conclus√µes precipitadas sobre as inten√ß√µes e aptid√µes dos outros, sem tentar esclarec√™-las
 - N√£o reconhecem nem exploram as experi√™ncias e habilidades uns dos outros
 - Perdem tempo e energia controlando o pr√≥prio comportamento para causar boa impress√£o
 - Guardam m√°goas
 - Temem as reuni√µes e encontram motivos para evitar passar tempo junto dos colegas

- Onde existe confian√ßa entre os membros da equipe
 - Admitem suas fraquezas e seus erros
 - Pedem ajuda
 - Aceitam perguntas e informa√ß√µes sobre suas √°reas de responsabilidade
 - D√£o uns aos outros o benef√≠cio da d√∫vida antes de chegar a conclus√µes negativas
 - Assumem riscos dando feedback, oferecendo ajuda
 - Valorizam e exploram as experi√™ncias e as habilidades uns dos outros
 - Investem tempo e energia em quest√µes importantes, n√£o em politicagens
 - Oferecem e aceitam desculpas sem hesitar
 - Anseiam pelas reuni√µes e por outras oportunidades de trabalhar em equipe

- Seu papel como l√≠der!
 - Ser o primeiro a demonstrar vulnerabilidade
 - Deve criar um ambiente onde vulnerabilidade n√£o seja punida
 - E por fim, sua vulnerabilidade tem que ser verdadeira, fingir isso ir√° causar facilmente a perda de confian√ßa da sua equipe

## Desafio 2
- Medo de conflitos (Harmonia artificial na equipe)
 - T√™m reuni√µes entediantes
 - Criam ambientes prop√≠cios a politicagens e ataques pessoais
 - Ignoram quest√µes controversas que s√£o fundamentais para o sucesso da equipe
 - N√£o exploram todas as opini√µes e perspectivas dos integrantes da equipe
 - Perdem tempo e energia administrando riscos interpessoais e posturas

- Equipes que se envolvem nos conflitos
 - T√™m reuni√µes interessantes e vigorosas
 - Extraem e exploram as ideias de todos os seus integrantes
 - Solucionam problemas com rapidez
 - Minimizam as politicagens
 - Colocam em pauta quest√µes cr√≠ticas

- Seu papel como l√≠der!
 - Deve demonstrar modera√ß√£o e permitir que o desfecho ocorra naturalmente, sem interromper prematuramente o conflito querendo proteger e impossibilitando os demais membros a amadurecer e lidar por si s√≥ com os conflitos
 - Por mais banal que seja, ao evitar discuss√µes que s√£o necess√°rias e produtivas, voc√™ faz surgir essa disfun√ß√£o!

## Desafio 3
- Falta de Comprometimento (Ambiguidade - N√£o consegue se comprometer)
 - Cria ambiguidade entre seus integrantes em rela√ß√£o a dire√ß√£o e prioridades
 - V√™ portas se fecharem devido a an√°lises excessivas e demora desnecess√°ria
 - Alimenta a falta de confian√ßa e o medo de errar
 - Revisita discuss√µes e decis√µes in√∫meras vezes
 - Estimular questionamentos entre seus integrantes

- Equipes comprometidas
 - Gera clareza em rela√ß√£o a dire√ß√£o e prioridades
 - Alinha todo o grupo em torno dos objetivos comuns
 - Desenvolve a capacidade de aprender atrav√©s dos erros
 - Aproveita as oportunidades antes que os competidores ou concorr√™ncia fa√ßam isso
 - Segue em frente sem hesita√ß√£o
 - Muda de dire√ß√£o sem hesita√ß√£o ou culpa

- Seu papel como l√≠der!
 - Se sentir √† vontade se alguma decis√£o se revelar errada
 - Deve estimular os demais a chegar a conclus√µes sobre as quest√µes, assim como aderir ao que a equipe tiver decidido
 - N√£o supervalorizar a certeza e o consenso

## Desafio 4
- Evitar responsabilizar os outros (Gerando baixos padr√µes)
 - Cria ressentimento entre os integrantes que possuem diferentes padr√µes de desempenho
 - Estimula a mediocridade
 - Perde prazos fundamentais
 - Coloca sobre os ombros do l√≠der o fardo injusto de ser a √∫nica fonte de disciplina

- Equipes que se responsabilizam
 - Faz com que cada membroi que tenha um mau desempenho sinta-se pressionado a melhorar
 - Identifica problemas em potencial com rapidez, atrav√©s do questionamento das abordagens uns dos outros, sem hesita√ß√£o
 - Estabelece o respeito entre todos os integrantes, que devem estabelecer os mesmos altos n√≠veis de desempenho entre si
 - Evita a burocracia excessiva em rela√ß√£o ao controle do desempenho e √†s a√ß√µes corretivas

- Seu papel como l√≠der!
 - Estimular cultura e criar mecanismos para que todos os membros da equipe se responsabilizem uns aos outros
 - Evitar responsabilizar os outros por suas atribui√ß√µes √© um convite para mudar foco de aten√ß√£o da sua equipe e n√£o ao resultado coletivo

## Desafio 5
- Falta de aten√ß√£o aos resultados (Afetar status e ego)
 - Fica estagnada, n√£o progride
 - Raramente supera seus concorrentes e inova√ß√µes
 - Perde funcion√°rios voltados para o alcance dos objetivos
 - Estimula membros a se concentrarem nas pr√≥prias carreiras e em objetivos individuais
 - Perde o foco facilmente

- Equipes que foca nos resultados coletivos
 - Mant√©m os funcion√°rios que focam nos resultados
 - Minimiza o comportamento individualista
 - Fica feliz com o sucesso e sofre profundamente com o fracasso
 - Beneficia-se de indiv√≠duos que renunciam aos pr√≥prios objetivos e/ou interesses pelo bem da equipe
 - Evita distra√ß√µes

- Seu papel como lider!
 - Se os membros da equipe sentirem que o l√≠der valoriza qualquer coisa diferente de resultados, eles assumir√£o essa postura como uma permiss√£o para fazer o mesmo
 - Deve valorizar recompensas e reconhecimentos para aqueles que fizeram contribui√ß√µes verdadeiras para o alcance dos resultados coletivos

# Empatia Assertiva
- Importar-se pessoalmente
Diz respeito a se importar de forma genu√≠na pela pessoa como um todo e n√£o s√≥ pelos aspectos profissionais.

- Desafie diretamente
Desafiar diretamente requer confian√ßa para demonstrar que voc√™ se importa o suficiente para dizer o que precisa ser dito.

- Empatia Nociva
Tem como foco fazer o outro se sentir bem ao inv√©s de elogiar ou fazer cr√≠ticas sinceras. H√° uma preocupa√ß√£o gen√∫ina, mas evitamos falar o que precisa ser dito para evitar tens√£o, disc√≥rdia, m√°goas e o mal estar. √â um elogio n√£o espec√≠fico, com a inten√ß√£o de agradar e n√£o de ajudar a entender o que est√° bom ou ruim. Evita a conversa sincera.

- Insinceridade Manipuladora
Ocorre quando voc√™ n√£o se importa o suficiente nem o desafia diretamente. Na maioria das vezes √© uma tentativa de manipular o outro para obter ganho pessoal. Usado para fazer com que algu√©m goste de voc√™, para conquistar vantagem, ou quando simplesmente estamos cansados demais para continuar discutindo.

- Agressividade Ofensiva
√â quando voc√™ critica algu√©m sem se dar o trabalho de mostrar que se importa e/ou sem inten√ß√£o genu√≠na de ajudar. Muitas vezes voc√™ conhece as vulnerabilidades do outro e explora isso com inten√ß√£o, para levar alguma vantagem ou impor sua domin√¢ncia. S√£o elogios ir√¥nicos ou cr√≠ticas sem gentileza.

- Sinceridade Radical / Empatia Assertiva
√â o feedback claro e sem maldade. Acontece quando voc√™ aborda diretamente o problema, dizendo o que precisa ser dito, de forma contextualizada, pessoal e espec√≠fica, sem rodeios, com sinceridade e gentileza. √â dizer as coisas como elas s√£o indo direto ao ponto de forma emp√°tica e assertiva.

# Tour of Duty
√â uma ferramenta, um framework baseado no livro The Alliance: Managing Talent in the Networked Age, escriti pelo Reid Hoffman.

"Nada mais √© do que um alinhamento de expectativas e objetivos entre a empresa e o colaborador"

## Problema
De acordo com uma pesquisa da Gallup, 70% dos colaboradores n√£o s√£o engajados nos seus trabalhos.

E uma revis√£o dessa pesquisa mostra como o bem-estar e a experi√™ncia dos colaboradores est√° diretamente relacionado √† produtividade, engajamento e resultados de neg√≥cios.

E quando n√£o nos sentimentos engajados, acabamos saindo da empresa. N√£o criamos v√≠nculo algum e vamos trabalhando como um freelancer.

- N√£o nos sentimos valorizados.
- N√£o estamos evoluindo e aprendendo.
- N√£o temos um ambiente psicologicamente seguro.
- N√£o nos sentimos ouvidos.

## Como funciona?
- Conversas individuais (1:1s)
- Tipos de Tour of Duty
- Din√¢micas de Auto Conhecimento ou Inspira√ß√£o
- Desenhar seus objetivos - Alinhamentos de expectativas

### Conversas Individuais
- Quais os planos pra sua vida?
- Qual a pr√≥xima empresa e/ou cargo que voc√™ deseja trabalhar?

## Tipos
- Transformacional - Ela quer evoluir no pr√≥prio cargo/carreira (Aprendizado > Aplica√ß√£o > Transi√ß√£o)
- Rotacional - Voc√™ ir√° para uma √°rea totalmente nova ou quer mudar de profiss√£o
- Fundacional - Geralmente serve para aqueles que fundaram a empresa, ou que pretendem ficar por muitos anos, mais comum nos casos dos executivos.

## Din√¢micas
- Valores / Auto conhecimento
 - Escolha tr√™s pessoas (fora da empresa) que voc√™ ela e descreva tr√™s valores que ela admira nelas
 - √â importante aqui refletir sobre os seus princ√≠pios, o que te guia e faz ela agir.
 - Se esses valores conectam com seu objetivo e prop√≥sito

- Aspira√ß√µes
 - Conecte-se com tr√™s pessoas que ela possui alguma liga√ß√£o com seu objetivo, que exer√ßa o cargo que voc√™ queira assumir talvez.
 - √â importante aqui ela ir√° fazer as perguntas certas e ouvir bastante.
 - Refletir sobre as respostas dos entrevistados e se isso √© o que ela deseja para a sua carreira.

## Desenhe seu Tour
- Qual o objetivo para o colaborador? O que ele quer se tornar?
- Quanto tempo ele precisa?
- O que pode mudar para a empresa? (Analisar o que a mudan√ßa dele ajuda na sua empresa)
- D√™ a oportunidade dela aplicar as mudan√ßas que ela deseja na empresa

E para conte√∫dos adicionais, enquanto estava escrevendo esse artigo para busca r√°pida e autodidata, surgiu esse v√≠deo do **Filipe Dischamps**, trato como um conte√∫do adicional
e recomendo muito ouvir ele, al√©m de uma boa did√°tica ele foi ex CTO de um dos maiores meios de pagamento do Brasil e ele compartilha sobre como pensar como o CTO, chefe de tecnologia.

<iframe width="1200" height="800" src="https://www.youtube.com/embed/M3na7_wwvPQ" title="Como se Tornar o CTO da Sua Empresa (verdades crueis)" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
]]></description>
            <link>https://yagasaki.vercel.app//articles/o-que-e-lideranca-tecnica-o-famoso-tech-lead</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/o-que-e-lideranca-tecnica-o-famoso-tech-lead</guid>
            <pubDate>Wed, 12 Feb 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[China lan√ßa modelo de IA que supera OpenAI, DeepSeek e Meta]]></title>
            <description><![CDATA[
![](https://w.wallhaven.cc/full/1k/wallhaven-1kxe59.jpg)

## China Revoluciona o Mercado de IA com o Modelo K1.5 Loong Thinking

A China acaba de dar um grande passo no desenvolvimento da intelig√™ncia artificial ao lan√ßar o modelo **K1.5 Loong Thinking**, tamb√©m conhecido como [Kimi.ai](https://kimi.ai/). Este novo modelo j√° est√° superando solu√ß√µes de gigantes da tecnologia como **OpenAI, DeepSeek e Meta**.

A grande inova√ß√£o do **K1.5 Loong Thinking** est√° em sua capacidade **multimodal de racioc√≠nio**, permitindo analisar grandes volumes de dados e realizar pesquisas em tempo real na web. Com um impressionante **contexto de 200 mil caracteres**, ele se diferencia de seus concorrentes ao oferecer uma compreens√£o aprofundada de textos, imagens, gr√°ficos e tend√™ncias de mercado.

## 1. Racioc√≠nio Multimodal e Intelig√™ncia Financeira

Um dos pontos mais impressionantes do **K1.5 Loong Thinking** √© sua **capacidade de atuar como analista de investimentos**. Para testar o modelo, solicitei que ele analisasse **gr√°ficos da NVIDIA**, cruzasse dados com not√≠cias recentes e oferecesse recomenda√ß√µes de investimento.

### Resultado

Ele n√£o apenas interpretou os gr√°ficos corretamente, mas tamb√©m fez uma **an√°lise completa de mercado**, identificando padr√µes de corre√ß√£o e tend√™ncias de tomada de lucros.

![](https://yagasaki.vercel.app/articles/china-1.gif)

### O que torna isso revolucion√°rio?

- **Racioc√≠nio Multimodal** ‚Üí O modelo pode **entender e interpretar** diferentes tipos de dados simultaneamente (texto, imagens e gr√°ficos).
- **Janela de Contexto de 200 mil Caracteres** ‚Üí Diferente dos modelos concorrentes, ele pode analisar **longos textos** e grandes volumes de dados com precis√£o.
- **Pesquisa em Tempo Real** ‚Üí Ao acessar **mais de 1.000 p√°ginas da web**, ele fornece insights **atualizados e relevantes**.

## 2. Compara√ß√£o com DeepSeek, OpenAI e Meta

Para avaliar o impacto do **K1.5 Loong Thinking**, foi realizada uma compara√ß√£o direta com os modelos **DeepSeek, OpenAI e Meta**.

| Funcionalidade         | K1.5 Loong Thinking | DeepSeek | OpenAI | Meta |
|------------------------|--------------------|----------|--------|------|
| Racioc√≠nio Multimodal  | Sim | N√£o | Sim | Sim |
| Interpreta√ß√£o de Imagens | Sim | N√£o | Sim (limitado) | Sim |
| An√°lise em Tempo Real  | Sim | N√£o | N√£o | N√£o |
| Pesquisa na Web | Sim (1000+ p√°ginas) | Limitado | N√£o | N√£o |
| Processamento de M√∫ltiplos Arquivos | Sim (50 arquivos) | 10 arquivos | 10 arquivos | 10 arquivos |
| Janela de Contexto | 200 mil caracteres | 20 mil caracteres | 128 mil caracteres | 100 mil caracteres |

A tabela mostra que o **K1.5 Loong Thinking** lidera em **quase todas as categorias**, especialmente em **racioc√≠nio multimodal, an√°lise em tempo real e pesquisa na web**.

![](https://yagasaki.vercel.app/articles/china-2.gif)

## 3. Processamento de M√∫ltiplos Arquivos

Outra grande vantagem do **K1.5 Loong Thinking** √© sua **capacidade de an√°lise simult√¢nea**. Ele pode processar **at√© 50 arquivos** de uma vez, incluindo:

- **PDFs**
- **Documentos Word**
- **Imagens e gr√°ficos**

Enquanto isso, ferramentas como **OpenAI e DeepSeek** s√£o limitadas a **apenas 10 arquivos** por vez.

![](https://pbs.twimg.com/media/Gja9SAyakAA2CMe?format=jpg&name=large)
![](https://pbs.twimg.com/media/Gja9SMmawAA2hhv?format=jpg&name=large)
![](https://pbs.twimg.com/media/Gja9SYha0AAwdoK?format=jpg&name=medium)

Essa funcionalidade √© um **divisor de √°guas** para pesquisadores, analistas e empresas que precisam processar **grandes volumes de informa√ß√£o rapidamente**.

## 4. Pesquisa Avan√ßada na Web

O **K1.5 Loong Thinking** n√£o apenas realiza pesquisas em tempo real, mas tamb√©m **resume informa√ß√µes de mais de 100 sites simultaneamente**.

![](https://yagasaki.vercel.app/articles/china-3.gif)

### Benef√≠cios

- **Economia de tempo**: Em segundos, o modelo pesquisa e organiza as principais informa√ß√µes.
- **Maior precis√£o**: Elimina ru√≠dos e prioriza dados relevantes.
- **Aplica√ß√£o profissional**: Ideal para analistas de mercado, jornalistas e pesquisadores.

## 5. Expans√£o de Contexto para 200 Mil Caracteres

Em apenas **seis meses**, a janela de contexto do **K1.5 Loong Thinking** **aumentou 10 vezes**.

Isso permite que ele **entenda textos mais longos**, contextualize informa√ß√µes e gere respostas muito mais **inteligentes e coerentes**.

![](https://pbs.twimg.com/media/Gja9VkZaEAA9gfV?format=png&name=4096x4096)

### Por que isso importa?

- **Capacidade de leitura extensa** ‚Üí Ele pode processar **livros inteiros, artigos e estudos**.
- **Gera√ß√£o de insights mais profundos** ‚Üí Melhora a compreens√£o e interpreta√ß√£o de temas complexos.

## 6. Depura√ß√£o de C√≥digo em Tempo Real para Programadores

Para desenvolvedores, o **K1.5 Loong Thinking** oferece **suporte inteligente para programa√ß√£o**.

Ele atua como um **mentor de c√≥digo**, ajudando a:

- Encontrar **bugs** e sugerir solu√ß√µes.
- Melhorar a **efici√™ncia e organiza√ß√£o do c√≥digo**.
- Fornecer explica√ß√µes **detalhadas sobre algoritmos e fun√ß√µes**.

![](https://yagasaki.vercel.app/articles/china-4.gif)

Se voc√™ j√° precisou de um **pair programming com IA**, essa √© a ferramenta certa.

## 7. Ideal para Pesquisadores, Escritores e Estudantes

O **K1.5 Loong Thinking** √© perfeito para:

- **Pesquisadores** ‚Üí Processa **grandes volumes de informa√ß√µes** e identifica padr√µes.
- **Escritores** ‚Üí Gera ideias, estrutura narrativas e melhora a criatividade.
- **Estudantes** ‚Üí Explica t√≥picos dif√≠ceis de forma clara e objetiva.

![](https://yagasaki.vercel.app/articles/china-5.gif)

Mesmo o **ChatGPT Pro**, que custa **US$ 200/m√™s**, n√£o oferece **todas essas funcionalidades**.

---

## Conclus√£o

O **K1.5 Loong Thinking** representa um **avan√ßo sem precedentes** na intelig√™ncia artificial, superando modelos ocidentais e oferecendo:

- **Racioc√≠nio multimodal poderoso**
- **Capacidade de an√°lise em tempo real**
- **Processamento avan√ßado de m√∫ltiplos arquivos**
- **Janela de contexto 10x maior**
- **Suporte inteligente para desenvolvedores**

Com essas caracter√≠sticas, a China prova que est√° **pronta para liderar a revolu√ß√£o da IA**.

Se voc√™ busca a **ferramenta de IA definitiva para pesquisa, mercado financeiro ou desenvolvimento de software**, vale a pena testar o **K1.5 Loong Thinking**.

Voc√™ pode acessar a p√°gina oficial da [Kimi.ai](https://kimi.ai/) e fazer a sua conta, √© necess√°rio um n√∫mero de telefone v√°lido para efetuar o cadastro.

**Voc√™ acredita que esse modelo pode superar a OpenAI no futuro? Deixe sua opini√£o em nosso [grupo do Whatsapp](https://chat.whatsapp.com/ESgYKVgH8KZ5U5lHLvv8j0) ou em nosso [Discord](https://discord.gg/jhSepmE7nN)!**
]]></description>
            <link>https://yagasaki.vercel.app//articles/china-lanca-modelo-de-ia-que-supera-open-ai-deep-seek-e-meta</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/china-lanca-modelo-de-ia-que-supera-open-ai-deep-seek-e-meta</guid>
            <pubDate>Tue, 11 Feb 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Aprendendo a criar reposit√≥rios com WSL e comandos b√°sicos]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/1797/sample_5a4829cc66b2ba4f9e5eaae9d1df76331a85e775.jpg?5467027)

Imagine que voc√™ acabou de [instalar seu WSL](https://yagasaki.vercel.app/article/como-instalar-o-wsl), conforme eu havia explicado em 19 de Abril do ano passado,
mas voc√™ est√° perdido, n√£o sabe o que fazer, como come√ßar e o que deveria ser feito para come√ßar a utilizar o WSL adequadamente junto com os seus reposit√≥rios do GitHub. Tudo bem?

Ent√£o, imaginando que voc√™ est√° com WSL instalado corretamente e o VSCode possu√≠ a extens√£o [WSL da Microsoft](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl),
vamos a algumas dicas que devem ser seguidas.

Inicialmente, vamos entender os comandos b√°sicos do Linux - de prefer√™ncia Debian (Ubuntu, Debian, etc).

- `cd`, respons√°vel por ir at√© o diret√≥rio, se voc√™ der `cd ..`, voc√™ voltar√° uma pasta, se voc√™ der `cd NOMEDAPASTA`, voc√™ entrar√° dentro dela. E atente-se a caixa alta.
- `ls`, voc√™ ir√° listar os arquivos que est√° no diret√≥rio em que voc√™ se encontra, muito √∫til para saber aonde voc√™ deve ir, ou se est√° em uma pasta errada.
- `mkdir`, comando para criar uma pasta - Mas n√£o usaremos nesse artigo.
- `rm -rf NOMEDAPASTA`, comando para remover uma pasta - Mas n√£o usaremos nesse artigo.

Agora que voc√™ sabe o b√°sico do b√°sico, vamos a dicas.

## Quando for criar um projeto novo
Eu geralmente recomendo criar direto pelo site, dessa maneira, voc√™ evita complica√ß√µes desnecess√°rias e configura√ß√µes do pasta para transform√°-la em reposit√≥rio. Caso queira saber,
como fazer isso, e se tornar um expert do terminal, procure mais a respeito do `git init` e as possibilidades que nele existem, de acordo com a documenta√ß√£o.

Enfim, vamos aos passos:
1. Crie um reposit√≥rio no [site do GitHub](https://github.com/new)
2. Coloque o nome do reposit√≥rio, a descri√ß√£o e deixe sempre marcado que voc√™ deseja um `README.md` no seu projeto.
3. Clique em `<> Code` no reposit√≥rio e selecione a op√ß√£o do SSH - caso n√£o tenha configurado ou n√£o saiba o que √© um SSH, [leia esse artigo](https://www.ssh.com/academy/ssh/keygen) - em ingl√™s.
4. V√° no Ubuntu (Terminal), e verifique se voc√™ est√° em alguma pasta, geralmente estar√° indicado em azul `~`, se n√£o estiver, use `cd ..` ou `cd ~` para voltar.
5. Clone o reposit√≥rio.
6. Dentro dele `cd NOMEDAPASTA`, fa√ßa as altera√ß√µes ou copie os novos arquivos.
7. Caso seja uma migra√ß√£o -  Copie os arquivos dentro da pasta do Ubuntu, escreva no Ubuntu: `explorer.exe .` e atrav√©s do Windows Explorer, jogue os arquivos na pasta correspondente.
8. Elimine todos os arquivos com a extens√£o `.Zone.Identifier`, ele atrapalha que o projeto rode adequadamente - falarei o motivo disso mais abaixo.
9. Depois de removido, fa√ßa o procedimento de `git add .`, `git commit -am "COLOQUE A ALTERA√á√ÉO"` e `git push`.
10. Caso tenha esquecido de remover o `Zone.Identifier` depois que subiu o commit, n√£o tem problema, remova eles, em seguida suba um novo commit.

## Clonar um projeto/fork j√° existente.
1. Clone o reposit√≥rio na raiz do seu Ubuntu, novamente, estar√° indicado `~` em azul.
2. Um exemplo de como clonar √© atrav√©s do comando: `git clone https://github.com/SEUNOME/NOME-DO-REPOSITORIO.git`
3. Acesse o interior da pasta atrav√©s do `cd NOMEDAPASTA` e instale as depend√™ncias - caso o projeto tenha um arquivo `package.json` use `npm install` ou use algo de acordo com as prefer√™ncias j√° sugeridas no projeto existente como `yarn` ou `bun` - Em casos de projetos em Javascript.

## Abrindo o VSCode usando Ubuntu.
1. Abra o VSCode, no canto inferior esquerdo em azul, verifique se est√° escrito `WSL: Ubuntu` ou algo do g√™nero.
2. Se sim, abra a pasta atrav√©s do `Open Folder` e continue o procedimento previsto, como codar o seu projeto.
3. Se n√£o, clique com o bot√£o esquerdo no canto inferior esquerdo em azul.
4. Ir√° abrir uma caixa no centro do seu VSCode, clique em `Connect with WSL`.
5. Abra a pasta atrav√©s do `Open Folder` e continue o procedimento previsto, como codar o seu projeto.

## O que √© o .Zone.Identifier?
Quando voc√™ baixa um arquivo da internet (por exemplo, de um navegador como Chrome ou Edge), o Windows adiciona um marcador especial ao arquivo para indicar que ele veio de uma "zona de internet". Esse marcador √© armazenado em um arquivo oculto chamado .Zone.Identifier, que √© associado ao arquivo original. Esse arquivo cont√©m informa√ß√µes sobre a zona de seguran√ßa do arquivo.

O .Zone.Identifier √© usado pelo Windows para decidir se deve exibir um aviso de seguran√ßa quando voc√™ tenta abrir o arquivo. Por exemplo, ao abrir um execut√°vel baixado da internet, o Windows pode mostrar uma mensagem como: "Este arquivo veio da internet. Voc√™ tem certeza de que deseja execut√°-lo?"

E como estamos rodando tudo atrav√©s do WSL, isso pode gerar um conflito e n√£o √© isso que queremos. Por isso, removemos.
]]></description>
            <link>https://yagasaki.vercel.app//articles/aprendendo-a-criar-repositorios-com-wsl-e-comandos-basicos</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/aprendendo-a-criar-repositorios-com-wsl-e-comandos-basicos</guid>
            <pubDate>Sun, 09 Feb 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Hugging Face facilita para desenvolvedores rodarem modelos de IA em nuvens de terceiros]]></title>
            <description><![CDATA[
![](https://techcrunch.com/wp-content/uploads/2023/08/11f5fd43-3e13-4313-a003-9d36a81e3fde.png?resize=1200,602)

A plataforma de desenvolvimento de IA Hugging Face fez parceria com fornecedores de nuvem de terceiros, incluindo a SambaNova, para lan√ßar o Inference Providers, um recurso projetado para facilitar que desenvolvedores na Hugging Face rodem modelos de IA usando a infraestrutura de sua escolha.

A Hugging Face afirma que parceiros como Fal, Replicate, Together AI e a j√° mencionada SambaNova trabalharam com a empresa para integrar o acesso a seus respectivos data centers diretamente na plataforma Hugging Face. Agora, os desenvolvedores na Hugging Face podem, por exemplo, configurar um modelo DeepSeek nos servidores da SambaNova a partir de uma p√°gina de projeto da Hugging Face com apenas alguns cliques.

A Hugging Face h√° muito tempo oferece sua pr√≥pria solu√ß√£o interna para rodar modelos de IA. No entanto, em uma postagem no blog na ter√ßa-feira, a empresa explicou que seu foco mudou para colabora√ß√£o, armazenamento e capacidades de distribui√ß√£o de modelos.

![](https://techcrunch.com/wp-content/uploads/2025/01/ezgif-13c21e0d12b8a.gif?w=680)

‚ÄúOs provedores de solu√ß√µes serverless floresceram, e o momento era ideal para que a Hugging Face oferecesse acesso f√°cil e unificado a infer√™ncias serverless por meio de um conjunto de grandes provedores‚Äù, escreveu a empresa no post. ‚Äú[Foi] natural fazer parceria com a pr√≥xima gera√ß√£o de provedores de infer√™ncia serverless para uma infer√™ncia sem servidor e centrada em modelos.‚Äù

A infer√™ncia serverless permite que os desenvolvedores implantem e escalem modelos de IA sem precisar configurar ou gerenciar o hardware subjacente. Provedores como a SambaNova lan√ßam automaticamente os recursos computacionais necess√°rios e os ajustam para cima ou para baixo, dependendo do uso.

A Hugging Face afirma que os desenvolvedores que utilizam provedores de nuvem de terceiros por meio de sua plataforma pagar√£o as tarifas padr√£o da API do provedor, pelo menos por enquanto. (A Hugging Face pode estabelecer acordos de compartilhamento de receita com os parceiros no futuro, segundo a empresa.) Todos os usu√°rios da Hugging Face recebem uma pequena cota de cr√©ditos para usar em infer√™ncia, e assinantes do Hugging Face Pro, o plano premium da plataforma, recebem $2 adicionais em cr√©ditos por m√™s.

![](https://techcrunch.com/wp-content/uploads/2025/01/user-settings.png?resize=668,253)

Fundada em 2016 como uma startup de chatbots, a Hugging Face se tornou uma das maiores plataformas globais de hospedagem e desenvolvimento de modelos de IA. At√© o momento, a Hugging Face j√° arrecadou cerca de $400 milh√µes em capital de investidores como Salesforce, Google, Amazon e Nvidia. A empresa afirma ser lucrativa.

Artigo de [Kyle Wiggers](https://techcrunch.com/author/kyle-wiggers/) via [TechCrunch](https://techcrunch.com/2025/01/28/hugging-face-makes-it-easier-for-devs-to-run-ai-models-on-third-party-clouds/)

Quer conversar sobre isso comigo? Me procura l√° no [Twitter](https://twitter.com/Yagasaki7K), faz um tweet, me chama,
vamos trocar experi√™ncias, novidades e ideias em cima desse navegador que est√° retomando meu brilho nos olhos.
]]></description>
            <link>https://yagasaki.vercel.app//articles/hugging-face-facilita-para-desenvolvedores-rodarem-modelos-de-ia-em-nuvens-de-terceiros</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/hugging-face-facilita-para-desenvolvedores-rodarem-modelos-de-ia-em-nuvens-de-terceiros</guid>
            <pubDate>Tue, 28 Jan 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[DeepSeek-R1 e o impacto que seu lan√ßamento causou no mercado]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/4610/sample_e53772af1a04c1ca06891720f290d04f1fc0b719.jpg?5343222)

A an√°lise a seguir foi feita com base nas informa√ß√µes do *el hombre pulpo* (@coproduto) no [Twitter](https://x.com/coproduto/status/1884002124402712642). No entanto foi adaptada e revisada para este blog. O objetivo aqui √© preservar informa√ß√µes valiosas enquanto reconhecemos e creditamos o autor original.

O tema de hoje √© o **DeepSeek-R1** e o impacto que seu lan√ßamento causou no mercado. Como em qualquer assunto t√©cnico, h√° muita desinforma√ß√£o circulando por a√≠. O prop√≥sito deste artigo n√£o √© ser altamente t√©cnico, mas sim explicar de forma clara o que o modelo √© (e o que n√£o √©).

---

### O que √© o DeepSeek-R1?

O **DeepSeek-R1** √© um modelo generativo de linguagem grande (LLM) criado pelo laborat√≥rio chin√™s **DeepSeek**. Ele possui capacidades avan√ßadas de "racioc√≠nio", sendo compar√°vel ao **OpenAI o1**, o segundo modelo mais poderoso da OpenAI. Abaixo, voc√™ pode ver como o desempenho deles se compara em benchmarks:

![](https://pbs.twimg.com/media/GiVSZkVWkAAR1Vr?format=jpg&name=4096x4096)

Agora, o que significa "capacidade de racioc√≠nio" nesse contexto? Basicamente, ao inv√©s de gerar uma resposta diretamente, o modelo primeiro "pensa em voz alta", gerando um texto interno antes de responder. Isso melhora significativamente a qualidade das respostas em compara√ß√£o ao m√©todo direto.

Mas, como mostrado acima, √© importante destacar: o DeepSeek-R1 est√° no mesmo n√≠vel do OpenAI o1, **n√£o** do OpenAI o3 (o modelo mais poderoso da OpenAI no momento). A aus√™ncia do o3 nos benchmarks apresentados pela DeepSeek n√£o √© coincid√™ncia ‚Äî ningu√©m vai promover um comparativo que prejudique sua pr√≥pria imagem.

---

### Desmistificando a narrativa

Algumas pessoas t√™m alardeado que "A China superou os EUA em IA!", mas isso n√£o √© verdade. O que aconteceu foi que a China conseguiu replicar o **segundo melhor modelo dos EUA**, o que j√° √© um feito impressionante, mas n√£o significa que superaram os americanos.

Deixando claro: o trabalho da DeepSeek no R1 √© extremamente avan√ßado, e nada do que est√° sendo dito aqui √© para menosprez√°-los. No entanto, √© preciso evitar exageros.

---

### Um modelo open source (mas nem t√£o acess√≠vel assim)

O R1 √© um modelo **open source e open weights**, o que significa que tanto o c√≥digo quanto os pesos est√£o dispon√≠veis publicamente. Na teoria, qualquer pessoa pode rod√°-lo ‚Äî desde que tenha o hardware necess√°rio. E aqui est√° o problema: s√≥ para carregar o R1, s√£o necess√°rios **671 GB de mem√≥ria de v√≠deo**.

![](https://pbs.twimg.com/media/GiVUBNKWMAAlcVw?format=jpg&name=large)

Muito provavelmente, voc√™ n√£o tem 671 GB de VRAM, e eu tamb√©m n√£o. Por isso, embora o modelo seja "acess√≠vel" no sentido t√©cnico, ele est√° longe de ser vi√°vel para a maioria das pessoas. Ainda assim, voc√™ pode utilizar o [R1 pela API](https://chat.deepseek.com/).

---

### As destila√ß√µes do R1

Talvez voc√™ tenha ouvido que algumas pessoas conseguiram rodar vers√µes do R1 localmente. Isso √© verdade, mas o que rodaram foram **destila√ß√µes** do modelo.

![](https://pbs.twimg.com/media/GiVUliNXAAAEN94?format=jpg&name=large)

Mas o que s√£o destila√ß√µes? Resumidamente, trata-se de vers√µes menores e mais leves do modelo, treinadas para imitar a IA original. Apesar de serem bastante √∫teis, essas destila√ß√µes s√£o menos potentes do que o modelo completo. Ent√£o, n√£o, ningu√©m est√° rodando "o equivalente ao OpenAI o1 ou o3 em um Raspberry Pi".

---

### O verdadeiro impacto do R1 no mercado

Se o DeepSeek-R1 n√£o superou os modelos da OpenAI, por que o mercado foi t√£o afetado? A resposta est√° no **custo de treinamento**.

Treinar modelos de IA √© extremamente caro e depende de grandes quantidades de GPUs ‚Äî algo que impulsionou o pre√ßo da Nvidia nos √∫ltimos anos. Por√©m, o m√©todo inovador da DeepSeek permite treinar IAs poderosas de forma **muito mais barata**, o que altera drasticamente as proje√ß√µes futuras para empresas de hardware, como a Nvidia.

![](https://pbs.twimg.com/media/GiVV61uWEAAOj6n?format=jpg&name=large)

Esse √© o verdadeiro impacto do R1: ele n√£o s√≥ demonstra um avan√ßo t√©cnico, mas tamb√©m apresenta m√©todos mais eficientes para treinar modelos, o que pode beneficiar todos os laborat√≥rios no futuro.

---

### Conclus√£o

Para resumir:

- O DeepSeek-R1 **n√£o √© melhor** que os modelos mais avan√ßados dos EUA, mas √© compar√°vel ao OpenAI o1.
- Ele **n√£o roda em hardware dom√©stico**, a menos que seja uma destila√ß√£o, que √© uma vers√£o mais limitada do modelo.
- O verdadeiro impacto do R1 est√° no custo reduzido de treinamento, o que pode transformar a ind√∫stria de IA como um todo.

Apesar disso, o trabalho da DeepSeek √© admir√°vel e deve ser celebrado, especialmente por seu compromisso em abrir seus avan√ßos ao p√∫blico.

Quer discutir mais sobre esse tema? Me procure no [Twitter](https://twitter.com/Yagasaki7K). Vamos trocar ideias e explorar juntos o futuro da IA!
]]></description>
            <link>https://yagasaki.vercel.app//articles/deep-seek-r1-e-o-impacto-que-seu-lan√ßamento-causou-no-mercado</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/deep-seek-r1-e-o-impacto-que-seu-lan√ßamento-causou-no-mercado</guid>
            <pubDate>Tue, 28 Jan 2025 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como mover o WSL para outra unidade do disco]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/3910/sample_57a2cf4f2a509b52a4ae16da4b454ed390ff9f32.jpg?4086516)

Quando n√≥s criamos um WSL ele √© salvo no Windows dentro da pasta C:\Users\NOME-DO-SEU-USUARIO\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState e dependendo da quantidade de aplicativos e servi√ßos que voc√™ instalar no WSL o espa√ßo usado pode ficar bem grande. Ent√£o, existe uma maneira de voc√™ migrar esses dados para outra unidade de disco do seu computador. Para isso precisamos seguir os passos abaixo.

## Chocolatery

Primeiro instale o Chocolatey digitando o c√≥digo abaixo no Windows Terminal ou no PowerShell, voc√™ vai precisar desse utilit√°rio.

```bash
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
```

## LxRunOffline
Agora que j√° temos o Chocolatery instalado, vamos us√°-lo para instalar o LxRunOffline, que √© um utilit√°rio completo para gerenciar o Windows Subsystem for Linux (WSL).

```bash
choco install lxrunoffline
```

## Verificando as distros instaladas
Com o lxrunoffline j√° instalado vamos ver quais distros Linux est√£o instaladas no nosso Windows.

```bash
wsl -l -v
```

## Movendo a distro para outra unidade do disco

Certifique-se de que a distro n√£o esteja em execu√ß√£o, para ter certeza, de que v√£o est√° todas as distros encerradas, rode o comando abaixo:

```bash
wsl --shutdown
```

Para mover todo o conte√∫do da distro Linux para outra unidade, usamos o comando abaixo:

```bash
lxrunoffline move -n Ubuntu -d D:\wsl\Ubuntu
```

Onde D:\wsl\Ubuntu √© a pasta de destino.

Esse comando move o arquivo ext4.vhdx o HD virtual do Linux.

Pronto, agora voc√™ ganhou espe√ßo na sua unidade C:\

Obseva√ß√£o: N√£o mova mais de uma distro para a mesma pasta, isso causar√° um conflito. Ent√£o a minha recomenda√ß√£o √© criar a pasta D:\wsl, e dentro dela, uma pasta para cada distro.
]]></description>
            <link>https://yagasaki.vercel.app//articles/como-mover-o-wsl-para-outra-unidade-do-disco</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/como-mover-o-wsl-para-outra-unidade-do-disco</guid>
            <pubDate>Tue, 24 Dec 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Utilizando CSS-in-JS em componentes din√¢micos da aplica√ß√£o]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/514/sample_afd575d3d675683c6f19582e19edd62f56d900a5.jpg?5301417)

Inicialmente, vamos entender o CSS-in-JS que estaremos utilizando em nosso projeto frontend.

CSS-in-JS √© uma t√©cnica que permite escrever o c√≥digo CSS (respons√°vel pelo estilo visual de uma p√°gina) diretamente
dentro de arquivos JavaScript. Em vez de ter um arquivo CSS separado, voc√™ define estilos junto com a l√≥gica do
componente.

Com CSS-in-JS, os estilos s√£o aplicados a cada componente de forma isolada, o que ajuda a evitar conflitos de estilo e
facilita a manuten√ß√£o, especialmente em projetos maiores. Bibliotecas como Styled Components e Emotion s√£o populares
para isso e funcionam muito bem em ambientes como React.

T√°, entendemos o cen√°rio do que √© o CSS-in-JS. Como isso √© √∫til para dentro de uma aplica√ß√£o?

Em um cen√°rio, onde estamos habituados a usar module.css - importar o CSS direto da aplica√ß√£o. Ter√≠amos um c√≥digo basicamente assim.

Sendo, o Button.module.css:

```css
.button {
  background-color: #6200ea;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.button:hover {
  background-color: #3700b3;
}
```

E o componente Button.js:

```js
import React from 'react';
import styles from './Button.module.css'; // Importa o CSS Module

function Button() {
  return <button className={styles.button}>Clique Aqui</button>;
}

export default Button;
```

Conseguimos identificar que fica algo enraizado, claro, voc√™ pode usar essa maneira para criar aplica√ß√µes, diretamente
utilizando styled-components, sem a necessidade do Javascript dentro do CSS, assim como eu fa√ßo.

E no outro cen√°rio, temos o styled-components, utilizando a mesma propriedade para gerar - da mesma maneira e ainda sem
o Javascript no CSS.

```js
import React from 'react';
import styled from 'styled-components';

const StyledButton = styled.button`
  background-color: #6200ea;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;

  &:hover {
    background-color: #3700b3;
  }
`;

function Button() {
  return <StyledButton>Clique Aqui</StyledButton>;
}

export default Button;
```

O que nos permite ter mais facilidade em dar manuten√ß√£o na componentiza√ß√£o e at√© a reutiliza√ß√£o de componentes.

E como seria o cen√°rio, aonde queremos que o bot√£o seja din√¢mico? Suponhamos que nossa aplica√ß√£o tem o mesmo bot√£o,
mas diferentes _backgrounds_ para cada se√ß√£o da nossa aplica√ß√£o. Isso vale para casos aonde temos um formul√°rio, com o
mesmo bot√£o e cores de fundo diferente, sendo uma para limpar o envio e outra para enviar.

```js
import React from 'react';
import styled from 'styled-components';

// Define as props do bot√£o
const StyledButton = styled.button`
  background-color: ${({ bgColor }) => bgColor || '#6200ea'};
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.3s;

  &:hover {
    opacity: 0.9; // Simples efeito de escurecimento reduzindo a opacidade
  }
`;

const Button = ({ bgColor, children }) => {
  return <StyledButton bgColor={bgColor}>{children}</StyledButton>;
};

export default Button;
```

Dessa maneira, colocamos o Javascript para trabalhar dentro do CSS, pedimos para que qualquer cor enviada dentro de uma propriedade,
seja a cor de fundo do bot√£o ou, caso ela n√£o seja informada, ela ser√° representada por uma cor padr√£o.

Sendo assim, em nossa aplica√ß√£o, poderiamos chamar v√°rios bot√µes com o mesmo estilo, mas com cores diferentes.

```js
import React from 'react';
import Button from './Button';

function App() {
  return (
    <div>
      <Button bgColor="#1e90ff">Clique Aqui</Button>
      <Button bgColor="#ff6347">Excluir</Button>
      <Button>Sem Cor (Fallback)</Button>
    </div>
  );
}

export default App;
```

E caso n√£o seja informado a cor, ele ir√° assumir a cor padr√£o que √© `#6200ea`, j√° que n√£o foi identificada uma outra cor.

Finalizando, vimos como o CSS-in-JS pode ser uma solu√ß√£o poderosa para aplica√ß√µes din√¢micas, especialmente no contexto
de componentes reutiliz√°veis e personalizados, como bot√µes com cores de fundo din√¢micas. Em compara√ß√£o com a abordagem
tradicional de `module.css`, o uso de CSS-in-JS, como `styled-components`, permite uma maior integra√ß√£o com a l√≥gica do
JavaScript, facilitando a passagem de _props_ diretamente para o estilo de um componente.

A flexibilidade oferecida pelo CSS-in-JS permite a cria√ß√£o de componentes altamente reutiliz√°veis que respondem a
diversas necessidades de design sem a complexidade de classes CSS adicionais. Isso √© especialmente √∫til em projetos que
exigem uma interface din√¢mica, onde o estilo pode variar com base no contexto, estado ou prefer√™ncias do usu√°rio.

Para projetos que demandam uma alta manutenibilidade e adapta√ß√£o de estilo ao longo do tempo, o CSS-in-JS √© uma solu√ß√£o
que traz o melhor dos dois mundos: a organiza√ß√£o e o isolamento de estilos pr√≥prios do CSS tradicional, com o dinamismo
e a modularidade do JavaScript moderno, sem precisar ficar duplicando c√≥digos e criando componentes semelhantes com um
detalhe ou outro de diferen√ßa.
]]></description>
            <link>https://yagasaki.vercel.app//articles/utilizando-css-in-js-em-componentes-dinamicos-da-aplicacao</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/utilizando-css-in-js-em-componentes-dinamicos-da-aplicacao</guid>
            <pubDate>Mon, 11 Nov 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Desbloqueie o modo Ultra Security do seu Windows]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/256/sample_0462c1628af4048d08c1b8b0408f900187999f6e.jpg?5171904)

J√° imaginou um desconhecido tentar acessar o seu computador e toda vez que digitar a senha corretamente ou at√© mesmo
entrar automaticamente, ele apenas desligar? Seria estranho, certamente, voc√™ poderia dizer at√© que √© um v√≠rus,
mas eu vou explicar para voc√™.

## Modo Ultra Security

Imagine que voc√™ que vai sair de f√©rias e voc√™ n√£o gosta de deixar seu computador com senha e tem receio
de sua fam√≠lia ou algum primo distante chegar e usar o seu computador, detonar ele ou at√© mesmo acessar
documentos que n√£o deveriam. A solu√ß√£o se chama Ultra Security.

Como funciona? √â simples. Eu desenvolvi um script que ir√° rodar junto da pasta "Inicializar" ou "Startup",
e ele ir√° aguardar dez segundos para encontrar uma pasta chamada `iamhere`, caso ela n√£o exista,
o computador ir√° executar o desligamento automaticamente. Interessante, n√©?

## Como fa√ßo para instalar?

Primeiramente, v√° at√© o meu Github e fa√ßa o [download do script](https://github.com/Yagasaki7K/feature-ultrasecurity).

√â s√≥ clicar no bot√£o verde `< > Code`, e fazer o download do zip.

Com o zip no seu computador. Descompacte ele. E voc√™ ver√° dois arquivos.

Um √© o `Ultra Security.exe` e o outro √© um atalho para o "Startup", a p√°gina de inicializa√ß√£o do Windows.

Agora, o que voc√™ precisa fazer, √© literalmente, arrastar o programa `Ultra Security` para dentro do `Startup`
e toda vez que o seu computador iniciar, o nosso programa ir√° executar junto.

Caso j√° queira ver o resultado, √© s√≥ reiniciar o computador e voil√†!

Vale lembrar que essa ferramenta n√£o √© indicada para uso di√°rio, mas √© extremamente √∫til quando voc√™ vai se ausentar por
alguns dias e n√£o quer que ningu√©m mexa no seu computador.

Caso queira entender o que o `Ultra Security.exe` est√° fazendo, vou deixar o c√≥digo abaixo:

```bash
; For the tutorial and more details, visit: yagasaki.dev

#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
; #Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.

; Wait for 10 seconds
Sleep, 10000

; Get the path to the desktop
desktopPath := A_Desktop "\iamhere"

; Check if the "iamhere" folder exists on the desktop; if not, shutdown the computer
If !FileExist(desktopPath)
{
    Shutdown, 5
}
```
]]></description>
            <link>https://yagasaki.vercel.app//articles/desbloqueie-o-modo-ultra-security</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/desbloqueie-o-modo-ultra-security</guid>
            <pubDate>Sat, 28 Sep 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Twitter e Cloudflare - Entenda tudo que est√° acontecendo, aspectos t√©cnicos e pol√™micas]]></title>
            <description><![CDATA[
![](https://safebooru.org//images/4424/4cd5b8a914a6f6274bd96b7bd2f8c0de33ac2f10.jpg?4613994)

O Twitter, ou melhor, o "X", como √© conhecido atualmente, ressurgiu brevemente das cinzas no Brasil, apenas para ser
bloqueado novamente logo em seguida. Este breve retorno gerou discuss√µes sobre os aspectos t√©cnicos por tr√°s do bloqueio
e levantou quest√µes importantes sobre liberdade de express√£o e controle da internet. Vamos come√ßar explorando a pol√™mica
antes de mergulharmos nas explica√ß√µes mais t√©cnicas.

## Como o Twitter voltou e por que foi bloqueado novamente?
Gra√ßas √† criatividade de v√°rios desenvolvedores, discutiu-se a possibilidade de migrar o Twitter para a Cloudflare, uma
das maiores redes de distribui√ß√£o de conte√∫do e prote√ß√£o de sites do mundo. Para entender melhor o que aconteceu, √©
preciso conhecer alguns detalhes sobre como funcionam a internet e as redes no Brasil. Atualmente, os provedores de
internet (ISPs) brasileiros est√£o bloqueando qualquer solicita√ß√£o para os intervalos de IP do Twitter, impedindo o
acesso ao site.

Para quem √© leigo em tecnologia, vamos come√ßar explicando um conceito b√°sico: o DNS (Domain Name System). Quando voc√™
acessa um site, como o "twitter.com", n√£o √© o nome que o computador reconhece, mas sim o endere√ßo IP, que √© o "local" do
servidor onde o site est√° hospedado. O DNS √© o "tradutor" que converte o nome do site no endere√ßo IP correspondente,
permitindo que o navegador saiba aonde ir.

Agora, no caso do bloqueio do Twitter no Brasil, um dos primeiros passos adotados foi justamente bloquear as consultas
DNS. Ou seja, os provedores de internet (ISPs) brasileiros, respons√°veis por controlar o acesso a internet no Brasil,
simplesmente pararam de devolver o endere√ßo IP do Twitter para quem tentava acessar o site. Sem esse IP, mesmo que voc√™
digite "twitter.com", o navegador n√£o conseguir√° encontrar o servidor.

## Cloudflare: Uma alternativa para contornar bloqueios
A Cloudflare, conhecida por seu DNS p√∫blico (como o famoso 1.1.1.1), permite que os usu√°rios contornem esses bloqueios
configurando um servidor de DNS alternativo. Em vez de usar o DNS padr√£o do provedor, que pode estar bloqueando o
Twitter, voc√™ pode configurar manualmente o DNS da Cloudflare nas configura√ß√µes do seu Wi-Fi ou do dispositivo. Isso, em
teoria, permitiria acessar o Twitter novamente, pois o servidor da Cloudflare retornaria o IP correto.

Contudo, se o governo brasileiro decidir bloquear diretamente o IP do Twitter, o DNS da Cloudflare n√£o seria suficiente
para contornar o problema. Neste caso, mesmo sabendo o IP de cor, voc√™ n√£o conseguiria acessar, pois o tr√°fego seria
interrompido antes de chegar ao servidor.

## Mover o Twitter para a Cloudflare: vantagens e desafios
Uma quest√£o que surgiu foi se mover a infraestrutura do Twitter para a Cloudflare tornaria o bloqueio invi√°vel. A
Cloudflare oferece servi√ßos como CDN (Content Delivery Network), cache e prote√ß√£o contra ataques DDoS, sendo amplamente
utilizada por empresas e governos ao redor do mundo.

A infraestrutura da Cloudflare √© t√£o robusta que, se o governo quisesse bloquear o Twitter por meio dela, teria que
bloquear tamb√©m uma grande parte da internet brasileira. Sites populares, como Magazine Luiza, Reclame Aqui, e at√©
institui√ß√µes governamentais, utilizam a Cloudflare. Isso significaria cortar o acesso a uma vasta gama de servi√ßos
essenciais na web.

No entanto, essa migra√ß√£o traz implica√ß√µes comerciais. Empresas como a Caixa Econ√¥mica Federal e outros grandes sites
brasileiros utilizam a Cloudflare. Bloquear o Twitter por meio dela poderia gerar efeitos colaterais indesejados e
impactar muitos outros sites e servi√ßos.

## O papel da Cloudflare na prote√ß√£o da internet
A Cloudflare, desde sua cria√ß√£o, se posicionou como uma defensora da liberdade de express√£o. Em um artigo de 2013, o CEO
da empresa, Matthew Prince, deixou claro que a miss√£o da Cloudflare √© manter a internet livre e aberta, sem monitorar ou
censurar o conte√∫do de seus clientes.

Contudo, o cen√°rio mudou nos √∫ltimos anos. A Cloudflare, que antes tinha uma postura muito forte em prol da liberdade de
express√£o, agora precisa lidar com press√µes de governos e acionistas. Isso levanta a quest√£o: at√© que ponto a empresa
manter√° sua postura neutra diante de ordens judiciais e pedidos de bloqueio de conte√∫do, como aconteceu no Brasil?

## Como contornar o bloqueio
Mesmo com bloqueios de IP e DNS, ainda existem maneiras de acessar o Twitter. Uma delas seria usar um proxy ou uma VPN
(Rede Virtual Privada), que redireciona o tr√°fego para fora do Brasil, permitindo o acesso ao site. Esses m√©todos, no
entanto, exigem um n√≠vel t√©cnico mais elevado e n√£o s√£o uma solu√ß√£o pr√°tica para a maioria dos usu√°rios.

Uma solu√ß√£o pr√°tica, √© a instala√ß√£o do WARP, uma VPN gratuita da Cloudflare que permite com apenas um clique de bot√£o
e totalmente gratuita acessar p√°ginas como o Twitter por exemplo, a √∫nica desvantagem, se tratando de VPNs e burlar
m√©todos de seguran√ßa, a conex√£o de banda cai pela metade naturalmente, ent√£o √© recomendado utilizar apenas
em casos de navega√ß√£o e desligar em casos de download ou at√© mesmo durante o uso de jogos, por exemplo.

## O impacto das decis√µes da Cloudflare no Brasil
√â importante ressaltar que a Cloudflare n√£o √© apenas uma empresa de prote√ß√£o e distribui√ß√£o de conte√∫do. Ela representa
um ponto-chave na estrutura da internet moderna, e suas decis√µes afetam bilh√µes de usu√°rios globalmente. No Brasil,
embora a Cloudflare tenha uma presen√ßa significativa, a opera√ß√£o local ainda √© limitada, o que pode influenciar nas
decis√µes que envolvem bloqueios ou restri√ß√µes de servi√ßos.

O bloqueio do Twitter no Brasil √© apenas um exemplo de uma quest√£o muito mais ampla: at√© onde os governos podem ir para
controlar o que √© acessado na internet? Empresas como a Cloudflare se encontram em uma posi√ß√£o delicada, equilibrando
press√µes pol√≠ticas e sua miss√£o de proteger uma internet livre.

Ao longo dos √∫ltimos 10 anos, o debate sobre o papel de empresas de tecnologia na prote√ß√£o da liberdade de express√£o s√≥
cresceu. A Cloudflare, com sua neutralidade, tem sido um dos principais pilares da internet aberta, mas √† medida que a
empresa cresce e se torna mais influente, essas decis√µes ficam cada vez mais complicadas.

A suspens√£o do Twitter no Brasil levanta importantes quest√µes sobre o controle da internet e a liberdade de express√£o. A
Cloudflare, com sua infraestrutura robusta, desempenha um papel crucial na forma como grandes sites, incluindo o
Twitter, operam. No entanto, a solu√ß√£o para o bloqueio do Twitter no Brasil ainda parece incerta. A empresa, que sempre
se posicionou como uma defensora da internet aberta, agora enfrenta press√µes para equilibrar sua miss√£o com as demandas
legais de governos e acionistas.

Seja qual for o desfecho, o caso do Twitter no Brasil certamente servir√° como exemplo para futuras discuss√µes sobre
censura e controle na internet.
]]></description>
            <link>https://yagasaki.vercel.app//articles/twitter-e-cloudflare-entenda-tudo-que-esta-acontecendo-aspectos-tecnicos-e-polemicas</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/twitter-e-cloudflare-entenda-tudo-que-esta-acontecendo-aspectos-tecnicos-e-polemicas</guid>
            <pubDate>Thu, 19 Sep 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Voc√™ sabe o que s√£o os hooks do React? Veja os principais e entenda-os de uma vez]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1680315597398-0e1a4777a803?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

Inicialmente, vamos entender. O que s√£o hooks? S√£o fun√ß√µes do React que nos permitem utilizar recursos como gerenciamento de estados
e efeitos colaterais em componentes funcionais, sem precisar escrever classes ou diversas linhas de c√≥digo.

O que podemos fazer com eles? Bom, gerenciamento de estados, a√ß√µes ap√≥s a renderiza√ß√£o, acessar estados globais e at√© mesmo,
utilizar refer√™ncias.

## useState
Ele √© quem nos permite **controlar os estados** de um componente. Ele retorna um par de valores: o valor atual do estado
e uma fun√ß√£o para atualiz√°-lo.

No exemplo abaixo, ele est√° sendo utilizado para gerenciar se uma certa cadeira j√° foi arremessada. Quando o usu√°rio
clicar em "Sim" ou "N√£o", o estado √© atualizado e a resposta exibida ser√° alterada.

```js
function App() {
    // Iniciamos como falso, j√° que n√£o aconteceu ainda
    const [cadeiraJaFoiArremessada, setCadeiraJaFoiArremessada] = useState(false)

    // Fun√ß√£o para atualizar o estado para verdadeiro
    const confirmarArremesso = () => {
        setCadeiraJaFoiArremessada(true)
    }

    // Fun√ß√£o para atualizar o estado para falso
    const negarArremesso = () => {
        setCadeiraJaFoiArremessada(false)
    }

    return (
        <div>
            <h1>A cadeira j√° foi remessada?</h1>
            <h2>Resposta: {cadeiraJaFoiArremessada ? 'Sim' : 'N√£o'}</h2>

            <button onClick={confirmarArremesso}>Sim</button>
            <button onClick={negarArremesso}>N√£o</button>
        </div>
    )
}
```

Existem outras maneira de se fazer isso ao inv√©s de criar fun√ß√µes propriamente ditas e tornar tudo mais simples, como:

```jsx
<button onClick={() => setCadeiraJaFoiArremessada(true)}>Sim</button>
<button onClick={() => setCadeiraJaFoiArremessada(false)}>N√£o</button>
```

Isso ir√° eliminar uma quantidade imensa de c√≥digo desnecess√°rio e a funcionalidade ainda ser√° a mesma.

## useEffect

Este hook nos permite executar efeitos colaterais em componentes, como chamadas de API e manipula√ß√£o de DOM.

Ele roda uma vez ap√≥s a renderiza√ß√£o inicial do componente e pode ser configurado para ser disparado sempre que um valor
no array de depend√™ncias mudar.

No exemplo abaixo, sempre que a vari√°vel **cadeiraJaFoiArremessada** for alterada, a fun√ß√£o ser√° executada.

```jsx
useEffect(() => {
    if (cadeiraJaFoiArremessada) {
        alert('Arremessaram a cadeira')
    }
}, [cadeiraJaFoiArremessada])
```

## useRef
Ele nos possibilidade criarmos uma refer√™ncia mut√°vel, a qual podemos associar a elementos do DOM, como inputs,
sem precisar causar uma nova renderiza√ß√£o do componente.

No exemplo abaixo, usamos o useRef para referenciar o campo de input e, com a fun√ß√£o **focarNoInput**, podemos
aplicar o foco diretamente utilizando o Javascript.

```jsx
function App() {
    const inputRef = useRef(null)

    const focarNoInput = () => inputRef.current.focus()

    return (
        <div>
            <label>Quem arremessou a cadeira?</label>
            <input ref={inputRef} type="text" />
            <button onClick={focarNoInput}>Focar no input</button>
        </div>
    )
}
```

Curtiu o conte√∫do? Fique √† vontade para acrescentar ou perguntar algo √∫til para mim l√° no [Twitter/X](https://twitter.com/yagasaki7k),
compartilhe com amigos e conhecidos caso esse conte√∫do tenha sido √∫til. At√© mais!
]]></description>
            <link>https://yagasaki.vercel.app//articles/os-principais-hooks-do-react</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/os-principais-hooks-do-react</guid>
            <pubDate>Wed, 18 Sep 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Primeiros Passos na l√≠nguagem GO - Completo]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/4619/sample_ca6c98da5a62c2d4ab04437cd8efa192e3c4b601.jpg?5135295)

Caso voc√™ deseje utilizar esse conte√∫do como uma fonte de estudos ao inv√©s de uma revis√£o, eu sugiro acompanhar o
[reposit√≥rio original](https://github.com/Yagasaki7K/courses/tree/main/course-go-first-steps), aonde estar√£o sendo
manuten√ß√µes e melhorias de acordo com as necessidades, al√©m de claro, estar separado por t√≥pico em uma leitura menos
cansativa.

Vamos ao que interessa.

# 1. Introdu√ß√£o a Go
Go, tamb√©m conhecida como Golang, √© uma linguagem de programa√ß√£o de c√≥digo aberto desenvolvida pelo Google. Foi
projetada para ser eficiente, concisa, simples e f√°cil de ler. O projeto inicial da lingaugem de programa√ß√£o Go
foi iniciado em setembro de 2007 por tr√™s engenheiros renomados: _Robert Griesemer_, _Rob Pike_ e _Ken Thompson_,
que trabalhavam no Google. Eles colaboraram para criar uma linguagem que atendesse √†s necessidades espec√≠ficas
de desenvolvimento de software no ambiento do Google, enfocando efici√™ncia, concis√£o e legibilidade do c√≥digo. A
primeira vers√£o est√°vel foi lan√ßada em 2012. Algumas caracter√≠sticas not√°veis da linguagem Go incluem:

## Concorr√™ncia e Paralelismo:
Go foi projetada com suporte integrado para concorr√™ncia e paralelismo. Ela possui primitivas de concorr√™ncia,
como _goroutines_ (unidades leves de execu√ß√£o) e canais (mecanismo de comunica√ß√£o entre _goroutines_), facilitando
a constru√ß√£o de programas concorrentes de maneira eficiente.

## Coleta de Lixo Eficiente:
Go possui um coletor de lixo eficiente que gerencia automaticamente a aloca√ß√£o e libera√ß√£o de mem√≥ria, aliviando
os desenvolvedores da responsabilidade de gerenciar manualmente a aloca√ß√£o e desaloca√ß√£o de mem√≥ria.

## Simplicidade e Legibilidade:
Go foi projetada com uma sintaxe simples e clara. A linguagem evita recursos complexos e excessivamente
abstratos, o que facilita a leitura e manuten√ß√£o do c√≥digo. A ideia √© que o c√≥digo seja claro e compreens√≠vel sem
a necessidade de muita explica√ß√£o.

## Compila√ß√£o R√°pida:
Go √© uma linguagem compilada e a compila√ß√£o √© r√°pida, o que ajuda no desenvolvimento eficiente. Ela tamb√©m suporta a
compila√ß√£o cruzada, permitindo que voc√™ compile o c√≥digo para diferentes sistemas operacionais e arquiteturas.

## Gerenciamento de Depend√™ncias Integrado:
O Go possui uma ferramenta integrada para gerenciamento de depend√™ncias chamada
"_go modules_". Isso facilita o controle e a gest√£o das depend√™ncias do projeto.

## Orienta√ß√£o a Interfaces:
Go segue um paradigma de programa√ß√£o orientada a interfaces. Em vez de depender de heran√ßa de classes, o Go incentiva a
composi√ß√£o de tipos atrav√©s de interfaces, proporcionando flexibilidade e reutiliza√ß√£o de c√≥digo.

## Ferramentas de Teste Integradas:
Go possui um sistema de teste integrado, facilitando a escrita e execu√ß√£o de testes unit√°rios e de integra√ß√£o.

## Suporte a Programa√ß√£o de Baixo N√≠vel:
Go oferece suporte a programa√ß√£o de baixo n√≠vel quando necess√°rio, incluindo a capacidade de
manipular ponteiros, embora a linguagem incentive um estilo de programa√ß√£o seguro. A linguagem Go tem sido amplamente
adotada em diversos projetos, desde desenvolvimento de sistemas distribu√≠dos at√© aplica√ß√µes de servidores web. Seu
design focado na simplicidade, efici√™ncia e concorr√™ncia a torna uma escolha popular para muitos desenvolvedores.

# 2. Configurando ambiente
Para come√ßarmos a programar em Go, precisamos inicialmente configurar o nosso ambiente de desenvolvimento. Veja os
passos de como configurar o seu ambiente de acordo com o seu sistema operacional.

## Windows 10 ou superior:
V√° at√© a p√°gina [https://go.dev/dl](https://go.dev/dl) para baixar a vers√£o binn√°ria mais recente do instalador.
Certifique-se de selecionar a vers√£o compat√≠vel com seu sistema operacional, no caso do Windows (.msi)

Fa√ßa a instala√ß√£o, instale na pasta recomendada e finalize.

Para testar a instala√ß√£o, se ela foi instalada de maneira correta, v√° em **CMD** e digite o comando **go version**,
para verificar se a instala√ß√£o foi conclu√≠da com sucesso. Uma mensagem de retorno ser√° exibida, algo como
`go version go1.22.3 windows/amd64`.

## Linux

### Debian/Ubuntu:
`sudo apt-get update && apt-get upgrade -y && install golang`

### Arch/Manjaro:
`sudo pacman -Syyu && pacman -S go`

### Fedora:
`sudo dnf checkupdate && sudo dnf upgrade -y && sudo dnf install golang`

### OpenSUSE:
`sudo zyper update && sudo zyper upgrade -y && sudo zyper install go`

Os comandos citados acima sincronizam e atualizam os reposit√≥rios de cada distribui√ß√£o e instala o Go. Por√©m, √©
importante lembrar que **nem sempre o reposit√≥rio da sua distribui√ß√£o estar√° com a vers√£o mais atual do Go**

Ap√≥s estar instalado, execute `go version` em seu terminal, se estiver tudo tranquilo, instale a extens√£o do GO
na sua IDE, se tiver algum problema, revise os passos anteriores.

Ap√≥s instalar o GO na sua IDE, abra o _Command Palette_ (Ctrl+Shift+P) e procure por **Go: Install/Update Tools**.

Selecione todas as ferramentas e clique em OK. Um terminnal ser√° aberto e come√ßar√° a atualiza√ß√£o das ferramentas,
aguarde at√© que conclua todas as atualiza√ß√µes. Quando concluir, o terminal mostrar√° algo como
`All tools successfully installed. You are ready to Go. :)`

# 3. Estrutura b√°sica do programa

A estrutura b√°sico de um programa Go √© relativamente simples. Veja um exemplo:

```go
// O pacote principal de um programa Go deve ser "main"
package main

// Importa√ß√£o de pacotes necess√°rios.
import "fmt"

// Fun√ß√£o principal. A execu√ß√£o do programa come√ßa aqui.
func main() {
    // Corpo da fun√ß√£o main.
    fmt.Println("Hello, World!")
}
```

Agora, vamos entender um pouco sobre o que est√° acontecendo na estrutura acima:

## Pacote (package):
Cada arquivo Go pertence a um pacote, e o pacote principal de um programa execut√°vel deve ser chamado de
_main_. Isso inndica que √© um programa execut√°vel.

## Importa√ß√£o (import):
Ap√≥s a declara√ß√£o do pacote, voc√™ pode importar outros pacotes necess√°rios para o seu programa. No exemplo,
estamos importante o pacote _"fmt"_ para formata√ß√£o de sa√≠da.

## Fun√ß√£o Principal (func main()):
Todo programa Go execut√°vel deve ter uma fun√ß√£o chamada _main_. Esta √© a fun√ß√£o que ser√° executada quando o programa for
iniciado. O c√≥digo dentro desta fun√ß√£o ser√° a entrada principal do seu programa.

## Corpo da Fun√ß√£o Principal:
O corpo da fun√ß√£o _main_ cont√©m o c√≥digo que ser√° executado quando o programa for iniciado. No exemplo, estamos usando a
fun√ß√£o _fmt.Println_ para imprimir "Hello, Go!" no console.

Esta √© uma estrutura b√°sica, e programas Go podem evoluir para incluir v√°rias fun√ß√µes, pacotes, e estruturas de controle
de fluxo. No entanto, todos os programas Go devem ter uma fun√ß√£o main no pacote principal para come√ßar a execu√ß√£o.

Agora que voc√™ j√° entende a estrutura b√°sica de um programa, faremos o nosso primeiro programa em Go.

# 4. M√≥dulos
Em Go, quando iniciamos um novo projeto, sempre come√ßaremos com o comando _go mod init_. Ele √© usado em Go para
inicializar um novo m√≥dulo (ou converter um projeto existente em um m√≥dulo).

A introdu√ß√£o de m√≥dulos no Go √© uma maneira de gerenciar depend√™ncias e versionamento de maneira mais eficiente.

Aqui est√£o algumas raz√µes pelas quais voc√™ deve usar o _go mod init_:

## Gerenciamento de Depend√™ncias:
Ao iniciar um m√≥dulo com go mod init, voc√™ est√° criando um ambiente onde o Go pode gerenciar suas depend√™ncias de forma
estruturada. O arquivo go.mod resultante conter√° informa√ß√µes sobre os m√≥dulos usados pelo seu projeto, incluindo suas
vers√µes.

## Controle de Vers√£o:
O go.mod inclui informa√ß√µes sobre as vers√µes espec√≠ficas das depend√™ncias utilizadas no projeto. Isso garante que, –∞–æ
compartilhar o c√≥digo ou ao reproduzi-lo em outro ambiente, as mesmas vers√µes das depend√™ncias ser√£o usadas, promovendo
consist√™ncia.

## Facilita a Colabora√ß√£o:
O uso de m√≥dulos torna mais f√°cil para outros desenvolvedores colaborarem no seu projeto. Eles podem clonar o
reposit√≥rio e, ao executar _go get_, o Go baixar√° automaticamente as depend√™ncias corretas.

## Compatibilidade com Versionamento Sem√¢ntico:
O Go incentiva o uso de versionamento sem√¢ntico (SemVer) para m√≥dulos. Isso significa que voc√™ pode especificar regras
claras sobre como suas depend√™ncias podem ser atualizadas, evitando surpresas em atualiza√ß√µes autom√°ticas.

## Simplifica o Controle de Vers√£o com Git:
Quando voc√™ inicializa um m√≥dulo, o _go mod init_ tamb√©m cria automaticamente uma entrada no arquivo .gitignore para
ignorar o diret√≥rio vendor/ (onde as depend√™ncias s√£o armazenadas). Isso ajuda a manter o controle de vers√£o do seu
projeto mais limpo.

## Facilita a Migra√ß√£o para o Go Modules:
Para projetos mais antigos, a introdu√ß√£o de m√≥dulos pode ser uma tarefa incremental. Usar _go mod init_ √© um primeiro
passo essencial para migrar um projeto existente para o sistema de m√≥dulos.

## Iniciando o m√≥dulo:
Para iniciar um m√≥dulo no seu projeto, certifique-se de estar com o editor de c√≥digos aberto, se voc√™ for acostumado com
CLI, deixe ele na pasta de seu projeto. No seu editor de c√≥digos, abra a pasta onde iniciaremos o m√≥dulo. Ap√≥s isso, na
parte superior esquerda clique em Terminal, depois em _New Terminal_ para abrir o terminal. Abrindo o terminal, verifique
se est√° na pasta correta.

No desenvolvimento real, o caminho do m√≥dulo ser√° o local do reposit√≥rio onde o seu c√≥digo-fonnto ser√° mantido, por
exemplo: `go mod init github.com/meumodulo`

Como o objetivo n√£o √© passar um projeto real, utilizaremos apenas um exemplo.

Inicie o m√≥dulo utilizando o seguinte comandno: `go mod init hello/example`

Um novo arquivo chamado _go.mod_ ser√° criado na sua pasta.

# 5. Ol√°, Mundo!
Finalmente estaremos escrevendo os nossos primeiros c√≥digos em Go, e n√£o poderia ser diferente, n√©?, come√ßaremos com o
famoso "Ol√°, Mundo!"

Eu particularmente acho besta a lenda que existe no mundo da programa√ß√£o, mas vamos manter apenas para n√£o complicar a
explica√ß√£o.

Primeiramente, crie uma pasta chamada _helloworld_ dentro da pasta onde o arquivo _go.mod_ foi criado. Dentro da pasta
_helloworld_, crie um arquivo chamado _hello.go_ e, dentro do arquivo, digite os comandos necess√°rios para criar o seu
primeiro programa.

Segue o exemplo abaixo:

```go
// O pacote principal de um programa Go deve ser "main"
package main

// Importa√ß√£o de pacotes necess√°rios.
import "fmt"

// Fun√ß√£o principal. A execu√ß√£o do programa come√ßa aqui.
func main() {
    // Corpo da fun√ß√£o main.
    fmt.Println("Hello, World!")
}
```

Dentro da pasta _Golang_ temos o nosso arquivo _go.mod_, a nossa pasta _helloworld_ e, dentro dela, o arquivo
_hello.go_. Ao lado, temos o arquivo _hello.go_ aberto mostrando o c√≥digo utilizado para criar o nosso primeiro programa
que imprime o texto "Ol√°, Mundo!" na tela.

## Como executaremos o programa?

No terminnal, usaremos o comando `go run` para compilar e executar programas em Go em um √∫nico comando. Ele simplifica
o processo de desenvolvimento, permitindno que voc√™ teste e execute rapidamente seu c√≥digo sem a necessidade de criar
um arquivo execut√°vel separado, seguindo nosso exemplo: `go run hello.go`.

Uma resposta de "Ol√°, Mundo!" ser√° exibida na tela.

# 6. Coment√°rios
Coment√°rios em c√≥digo servem para fornecer informa√ß√µes adicionais que n√£o s√£o executadas pelo compilador ou
interpretador da linguagem, mas s√£o √∫teis para OS desenvolvedores que leem ou mant√™m o c√≥digo. Aqui est√£o algumas raz√µes
pelas quais os coment√°rios s√£o importantes:

## Explica√ß√£o do C√≥digo:
Coment√°rios ajudam a explicar o prop√≥sito, a l√≥gica e a funcionalidade do c√≥digo. Isso torna mais f√°cil para outros
desenvolvedores entenderem o que o c√≥digo est√° fazendo.

## Documenta√ß√£o do C√≥digo:
Coment√°rios podem servir como uma forma de documenta√ß√£o embutida, fornecendo informa√ß√µes sobre como usar fun√ß√µes,
classes ou m√≥dulos espec√≠ficos.

## Anota√ß√µes para Desenvolvedores Futuros:
Coment√°rios podem ser √∫teis para fornecer insights sobre decis√µes design, poss√≠veis melhorias ou considera√ß√µes para
desenvolvedores futuros que podem precisar modificar ou estender o c√≥digo. Lembre-se de que a pr√°tica de adicionar
coment√°rios deve ser equilibrada. C√≥digos autoexplicativos e bem organizados geralmente precisam de menos coment√°rios.
Coment√°rios em excesso ou coment√°rios que n√£o est√£o sincronizados com o c√≥digo real podem se tornar obsoletos e
prejudicar a manuten√ß√£o.

Em Go, os coment√°rios s√£o semelhantes a outras linguagens de programa√ß√£o e podem ser usados para fornecer informa√ß√µes
adicionais no c√≥digo fonte. Aqui est√£o alguns detalhes sobre os coment√°rios em Go:

## Coment√°rios de Linha √önica:
Coment√°rios de linha √∫nica s√£o iniciados com //. Tudo na linha ap√≥s // √© considerado um coment√°rio.

```go
// Isto √© um coment√°rio de linha √∫nica em Go.
```

## Coment√°rios de M√∫ltiplas Linhas:
Os coment√°rios de m√∫ltiplas linhas come√ßam com /* e terminam com */.

```go
/* Este √© um coment√°rio de m√∫ltiplas linhas em Go.
√â util para comentar muitas coisas
de uma s√≥ vez!
*/
```

Tamb√©m √© poss√≠vel comentar ao lado do seu c√≥digo, para isso, utilize // ao lado do c√≥digo que deseja escrever algo e
estar√° fazendo um coment√°rio.

# 7. Tipos, valores e vari√°veis
Vari√°veis em programa√ß√£o s√£o espa√ßos de armazenamento com um nome simb√≥lico (identificador) associado, que cont√™m dados
ou valores manipulados por um programa. Em outras palavras, uma vari√°vel √© um cont√™iner que armazena informa√ß√µes e pode
ser referenciado ou manipulado em um programa de computador.

Em Go, assim como em muitas outras linguagens de programa√ß√£o, h√° conceitos fundamentais relacionados a tipos, valores e
vari√°veis. Aqui est√£o explica√ß√µes sobre cada um desses conceitos em Go:

## Tipos:
Go √© uma linguagem de programa√ß√£o estaticamente tipada, o que significa que as vari√°veis t√™m tipos definidos em tempo de
compila√ß√£o. Os tipos em Go incluem tipos b√°sicos (inteiros, ponto flutuante, booleanos, etc.) e tipos compostos
(structs, slices, maps, arrays, etc.).

Exemplos de tipos b√°sicos:
```go
var idade int // Inteiro
var altura float64 // Ponto flutuante
var ativo bool // Booleano
var nome string // String
```

Exemplos de tipos compostos:
```go
var numeros [5]int // Array de inteiros com tamanho 5
var dados map[string]int // Mapa de string para int 3
var lista [] float64 // Slice de ponto flutuante
```

## Valores:
Os valores s√£o as inst√¢ncias espec√≠ficas de um tipo. Por exemplo, 42 √© um valor do tipo _int_, e "Ol√°" √© um valor do
tipo _string_.

Os valores em Go t√™m zero values, o que significa que, se voc√™ declara uma vari√°vel sem atribuir um valor, ela receber√°
um valor padr√£o dependendo do tipo. Veja um exemplo:

```go
var numero int // O valor de "numero" √© 0 (zero value para int)
var texto string // 0 valor de "texto" √© "" (zero value para string)
```

## Vari√°veis:
Vari√°veis em Go s√£o espa√ßos de armazenamento com um nome que armazenam valores de um tipo espec√≠fico.

Voc√™ declara vari√°veis usando a palavra-chave var, seguida pelo nome da vari√°vel e seu tipo, e pode inicializ√°-las com
um valor.

```go
var idade int = 25 // Idade da pessoa (inteiro).
var altura float64 = 175.5 // Altura da pessoa em cent√≠metros (ponto flutuante).
var ativo bool = true // Indica se a pessoa est√° ativa (booleano).
```

Em Go, tamb√©m existe a vari√°vel inferida, que refere-se √† capacidade do compilador de decidir automaticamente o tipo de
uma vari√°vel com base no valor que est√° sendo atribu√≠do a ela. A declara√ß√£o curta de vari√°veis ‚Äú:=‚Äù √© a principal
maneira de criar vari√°veis inferidas em Go.

Aqui est√° um exemplo simples:

```go
nome := "Jo√£o" // Nome da pessoa
idade := 30 // Idade da pessoa
altura := 175.5 // Altura da pessoa
```

Nesses casos, como mencionado anteriormente, o compilador ir√° definir automaticamente os tipos, sendo:
- **nome** √© inferido como **string**.
- **idade** √© inferido como **int**.
- **altura** √© inferido como **float64**.

**Importante**: n√£o √© poss√≠vel criar uma vari√°vel usando ":" sem atribuir um valor a ela

Essa abordagem torna a declara√ß√£o de vari√°veis mais concisa e ajuda a reduzir a redund√¢ncia no c√≥digo. No entanto, √©
importante observar que a infer√™ncia de tipo s√≥ √© permitida dentro de fun√ß√µes. Fora de fun√ß√µes, voc√™ deve usar a forma
tradicional de declara√ß√£o de vari√°veis com _var_.

## Regra de Nomea√ß√£o de Vari√°veis:
Assim como em outras linguagens, Go tem uma regra para a nomea√ß√£o de vari√°veis, veja:
- O nome de uma vari√°vel pode come√ßar com o caractere (‚Äú__‚Äù)
- O nome de uma vari√°vel n√£o pode come√ßar com n√∫mero (ex: 1); - O nome de uma vari√°vel n√£o pode conter espa√ßos;
- O nome de uma vari√°vel n√£o pode ser nenhuma palavra-chave Go (ex: _var_, _println_ etc.);
- O nome de uma vari√°vel s√≥ pode conter caracteres alfanum√©ricos e sublinhados (a-z, A-Z, 0-9 e "_");
- O nome de uma vari√°vel √© exatamente aquele que voc√™ colocou, ou seja, se voc√™ utilizar uma letra mai√∫scula quando
  declara a vari√°vel, deve colocar a mesma letra mai√∫scula quando chamar a vari√°vel (ex: nome, Nome e NOME s√£o vari√°veis
  diferentes);
- N√£o existe um limite para o comprimento do nome da vari√°vel;


Existem t√©cnicas que voc√™ pode utilizar para criar as suas vari√°veis, veja algumas:
```go
nome_da_minha_variavel := 12.5 // Estilo Snake Case
nomeDaMinhaVariavel := "Golang" // Estilo Camel Case
NomeDaMinhaVariavel := 150 // Estilo Pascal Case
```

Cada vari√°vel tem um estilo diferente, cada estilo tem o seu nome.

# 8. Constantes
Em Go, constantes s√£o valores fixos que n√£o variam durante a execu√ß√£o do programa. Elas oferecem uma maneira de nomear e
utilizar valores imut√°veis que s√£o conhecidos em tempo de compila√ß√£o. A declara√ß√£o de constantes √© realizada mediante o
uso da palavra-chave _const_, seguida pelo nome da constante e pelo valor que lhe √© atribu√≠do. Este mecanismo
proporciona clareza consist√™ncia ao c√≥digo, sendo especialmente √∫til para representar valores que n√£o devem ser
alterados ao longo da execu√ß√£o do programa, como constantes matem√°ticas, limites ou c√≥digos predefinidos.

Aqui est√£o alguns pontos importantes sobre constantes em Go:

## Declara√ß√£o de Constantes:
Para declarar uma constante, use a palavra-chave _const_ seguida pelo nome da constante e pelo valor.

```go
const pi = 3.1416
const idadeLimite = 18
```

## Tipos em Constantes:
Ao contr√°rio das vari√°veis, voc√™ n√£o precisa explicitamente o tipo da constante, pois o compilador infere o tipo com
base no contexto. Mas tamb√©m √© poss√≠vel declarar o tipo.
```go
const pi float64 = 3.1416
```

## Valores de Express√µes Constantes:
Os valores de express√µes constantes devem ser determinados em tempo de compila√ß√£o. Isso significa que voc√™ n√£o pode usar
fun√ß√µes ou resultados de tempo de execu√ß√£o para inicializar uma constante. Neste exemplo, a fun√ß√£o _math.Sqrt_ √© chamada
para calcular a raiz quadrada de 25. Como esse c√°lculo s√≥ pode ser feito em tempo de execu√ß√£o, n√£o √© permitido usar esse
valor para inicializar uma constante.

```go
// V√°lido
const soma = 10 + 20
// Inv√°lido, math.Sqrt √© uma fun√ß√£o em tempo de execu√ß√£o
const resultado = math.sqrt(25)
```

## Enumerando Constantes:
Voc√™ pode criar uma lista de constantes enumeradas usando a palavra-chave _iota_, que √© um identificador que representa
valores inteiros incrementados automaticamente.

```go
const (
// iota √© uma constante que inicia automaticamente com ‚óä e √© incrementada
    Segunda Feira = iota // 0
    TercaFeira          // iota incrementa automaticamente, ent√£o TercaFeira √© 1
    QuartaFeira         // 2
    QuintaFeira         // 3
    SextaFeira          // 4
    Sabado              // 5
    Domingo             // 6
)
```

## Constantes N√£o Tipadas:
As constantes em Go s√£o n√£o tipadas, o que significa que podem ser usadas em diferentes contextos sem a necessidade de
convers√£o expl√≠cita.

```go
const x = 42
var y int = x // Atribui√ß√£o sem convers√£o expl√≠cita
```

## Constantes Exportadas:
Constantes exportadas (iniciadas com letra mai√∫scula) s√£o vis√≠veis fora do pacote, enquanto constantes n√£o exportadas
(iniciadas com letra min√∫scula) s√£o vis√≠veis apenas dentro do pacote.

```go
const ValorExportado = 100 // Exportada 2 const
valorNaoExportado = 200 // N√£o exportada
```

# 9. Outputs
Em Go, a formata√ß√£o de sa√≠da √© comumente realizada utilizando o pacote "fmt". Este pacote fornece fun√ß√µes como _Print_,
_Println_ e _Printf_ para exibir informa√ß√µes no console ou em outros destinos de sa√≠da. Al√©m disso, o pacote "fmt"
tamb√©m oferece verbos de formata√ß√£o, que s√£o especificadores utilizados para formatar valores de acordo com seus tipos.

### fmt.Print() - Impress√£o Simples:
A fun√ß√£o _Print_ √© utilizada para imprimir valores no console sem adicionar uma nova linha ao final. Ela aceita uma
lista vari√°vel de argumentos e os imprime consecutivamente. Exemplo:

```go
nome = "Alice"
idade := 30

fmt.Print("Nome: ", nome, ", Idade: ", idade)
// Sa√≠da | Nome: Alice, Idade: 30
```

## fmt.Println() - Impress√£o com Nova Linha:
A fun√ß√£o _Println_ √© semelhante √† _Print_, mas adiciona automaticamente uma nova linha ao final da sa√≠da. Isso √© √∫til
para separar as linhas de sa√≠da. Exemplo:

```go
nome := "Bob"
idade := 25
fmt.Println("Nome:", nome, "Idade:", idade) // Sa√≠da | Nome: Bob Idade: 25
```

## fmt.Printf() - Impress√£o com Formata√ß√£o:
A fun√ß√£o _Printf_ permite formata√ß√£o de _string_ usando verbos espec√≠ficos, sendo semelhante √† fun√ß√£o _Printf_ em C. Ela
aceita uma _string_ de formato e uma lista vari√°vel de argumentos que ser√£o formatados e impressos. Exemplo:

```go
nome = "Charlie"
idade := 35

fmt.Printf("Nome: %s, Idade: %d\n", nome, idade) // Sa√≠da | Nome: Charlie, Idade: 35
```

Essas fun√ß√µes do pacote "fmt" s√£o fundamentais para exibir informa√ß√µes no console de maneira f√°cil e eficiente. A
escolha entre _Print_, _Println_, ou _Printf_ depende das necessidades espec√≠ficas de formata√ß√£o e da presen√ßa ou
aus√™ncia de nova linha ao final da sa√≠da.

# 10. Verbos de formata√ß√£o
Em Go, os verbos de formata√ß√£o s√£o especificadores que indicam como os valores devem ser formatados ao serem exibidos
usando a fun√ß√£o _Printf_ do pacote "fmt". Aqui est√£o alguns dos verbos de formata√ß√£o mais comuns em Go:

## %v (Verbo de Valor):
Utilizado para imprimir o valor de uma vari√°vel na sua forma natural, sem formata√ß√£o espec√≠fica.
```go
nome = "Alice"
idade := 25

fmt.Printf("Nome: %v, Idade: %v\n", nome, idade) // Sa√≠da: Nome: Alice, Idade: 25
```

## %d (Verbo Decimal):
Utilizado para formatar n√∫meros inteiros.
```go
numero := 42
fmt.Printf("N√∫mero: %d\n", numero)
// Sa√≠da: N√∫mero: 42
```

## %f (Verbo Ponto Flutuante):
Utilizado para formatar n√∫meros de ponto flutuante.

```go
altura := 175.5
fmt.Printf("Altura: %f\n", altura) // Sa√≠da: Altura: 175.500000
```

## %s (Verbo String):
Utilizado para formatar strings.

```go
mensagem := "Ol√°, mundo!"
fmt.Printf("Mensagem: %s\n", mensagem) // Sa√≠da: Mensagem: Ol√°, mundo!
```

## %t (Verbo Booleano):
Utilizado para formatar valores booleanos.
```go
ativo := true
fmt.Printf("Ativo: %t\n", ativo) // Sa√≠da: Ativo: true
```

## %b (Verbo Bin√°rio):
Utilizado para formatar n√∫meros em representa√ß√£o bin√°ria.

```go
numero := 10
fmt.Printf("N√∫mero em bin√°rio: %b\n", numero) // Sa√≠da: N√∫mero em bin√°rio: 1010
```

Esses s√£o apenas alguns dos verbos de formata√ß√£o dispon√≠veis em Go, existem diversos. A escolha do verbo depende do tipo
de valor que voc√™ est√° formatando e do resultado desejado na sa√≠da formatada.

# 11. Tipos de dados
Os tipos de dados em Go s√£o essenciais para definir como os valores s√£o armazenados na mem√≥ria, interpretados e
manipulados pelo programa. Cada vari√°vel em Go possui um tipo de dados associado, que determina as opera√ß√µes que podem
ser realizadas com ela, a quantidade de mem√≥ria que ela ocupa e a forma como ela √© representada internamente.

Go √© uma linguagem estaticamente tipada, ou seja, uma vez que for definido um tipo numa vari√°vel, ela s√≥ poder√°
armazenar dados desse tipo.

Esses s√£o os tr√™s tipos b√°sicos de dados em Go:
- **bool**: representa um valor booleano, que ser√° falso ou verdadeiro;
- **num√©rico**: representa tipos inteiros, valores de ponto flutuante e tipos complexos;
- **string**: representa uma sequ√™ncia de caracteres.

Aqui est√° um exemplo dos tipos de dados b√°sicos em Go:
```go
var verdadeiro bool = true // Valor booleano
var numero int = 5 // Inteiro
var flutuante float32 = 3.14 // Ponto flutuante
var caracteres string = "Hi!" // Conjunto de caracteres
```

## Boolean:
Em Go, o tipo de dado _bool_ representa valores booleanos, que podem ter apenas dois estados: verdadeiro (true) ou falso
(false). O tipo _bool_ √© frequentemente utilizado em express√µes condicionais, estruturas de controle de fluxo e
opera√ß√µes l√≥gicas.

Aqui est√£o alguns pontos importantes sobre o tipo _bool_ em Go:

## Declara√ß√£o de Vari√°veis:
Voc√™ pode declarar vari√°veis do tipo _bool_ da seguinte maneira:
```go
var isTrue bool // retorna true (verdadeiro)
var isFalse bool = false // retorna false (falso)
```

Ou, usando infer√™ncia de tipo:

```go
isTrue := true // retorna true (verdadeiro)
isFalse := false // retorna false (falso)
```

O tipo _bool_ √© simples, mas √© uma pe√ßa fundamental na programa√ß√£o, sendo essencial para tomada de decis√µes e controle
de fluxo em algoritmos e l√≥gica condicional.

## Integer:
Em Go, os tipos de dados inteiros s√£o usados para representar n√∫meros inteiros. Go fornece v√°rios tipos de inteiros, com
diferentes tamanhos e faixas, para atender necessidades de programa√ß√£o.

O tipo de dados inteiro possui duas categorias:

- **Inteiros assinados**: armazenam valores positivos e negativos;
- **Inteiros n√£o-assinados**: armazenam apenas n√£o negativos.

**Importante**: o tipo padr√£o para inteiro √© _int_. Se voc√™ n√£o especificar um tipo, o tipo ser√° _int_.

## Signed Integers (Inteiros Assinados):
Em Go, os inteiros assinados s√£o representados pelos tipos _int_ e outros tipos espec√≠ficos, como _int8_, _int16_,
_int32_ e _int64_. Esses tipos s√£o usados para armazenar n√∫meros inteiros que podem ser positivos, negativos ou zero, e
t√™m a capacidade de representar o sinal (positivo ou negativo) do n√∫mero.

Aqui est√£o alguns detalhes sobre inteiros assinados em Go:

### Tipo (int):
O tipo _int_ representa inteiros com sinal. O tamanho do _int_ √© dependente da arquitetura do sistema onde o c√≥digo est√°
sendo compilado, sendo um int32 em sistemas de 32 bits e um int64 em sistemas de 64 bits.

Exemplo:

```go
var numeroInteiro int = 667 // Armazena o valor 667
numeroInteiroNegativo := -999 // Armazena o valor -999
```

Existem cinco palavas-chave/tipos de inteiros assinados em Go, cada um com o seu tamanho e faixa:

**Tipo (int):**
  - Tamanho: depende da plataforma, sendo 32 bits em sistemas de 32 bits e 64 bits em sistemas de 64 bits.
  - Faixa: -2147483648 a 2147483647 em sistemas de 32 bits e- 9223372036854775808 a 9223372036854775807 em sistemas de
64 bits.

**Tipo (int8):**
  - Tamanho: 8 bits/1 byte.
  - Faixa: -128 a 127.

**Tipo (int16):**
  - Tamanho: 16 bits/2 bytes.
  - Faixa: -32768 a 32767.

**Tipo (int32):**
  - Tamanho: 32 bits/4 bytes.
  - Faixa: -2147483648 a 2147483647.

**Tipo (int64):**
  - Tamanho: 64 bits/8 bytes.
  - Faixa: -9223372036854775808 a 9223372036854775807.

Esses s√£o os tipos de dados inteiros em Go, cada um com seu tamanho e faixa espec√≠ficos. O tipo _int_ √© dependente da
plataforma, o que significa que em sistemas de 32 bits, ele ter√° 32 bits, e em sistemas de 64 bits, ter√° 64 bits. Os
tipos fixos, como _int8_, _int16_, _int32_ e _int64_, t√™m tamanhos fixos independentemente da plataforma. Cada tipo tem
um intervalo de valores que pode representar, sendo importante considerar esses limites ao escolher o tipo de dados
apropriado para a sua aplica√ß√£o.

### Signed Integers (Inteiros n√£o-assinados):
Em Go, os inteiros n√£o assinados s√£o representados pelos tipos _uint_ e outros tipos espec√≠ficos, como _uint8_,
_uint16_, _uint32_ e _uint64_. Diferentemente dos inteiros assinados, os inteiros n√£o assinados representam apenas
valores n√£o negativos (zero e positivos) e n√£o t√™m um bit de sinal. Aqui est√£o alguns detalhes sobre inteiros n√£o
assinados em Go:

**uint:** O tipo uint representa inteiros sem sinal. O tamanho do uint √© dependente da arquitetura do sistema onde o
c√≥digo est√° sendo compilado, sendo um _uint32_ em sistemas de 32 bits e um _uint64_ em sistemas de 64 bits. Exemplo:

```go
var numeroInteiro uint = 4545 // Armazena o valor 4545
var numeroNegativo uint = -11 // Erro: o tipo "uint" n√£o recebe valores negativos
```

Existem cinco palavas-chave/tipos de inteiros n√£o-assinados em Go, cada um com o seu tamanho e faixa:

**Tipo(uint):**
  - Tamanho: depende da plataforma, sendo 32 bits em sistemas de 32 bits e 64 bits em sistemas de 64 bits.
  - Faixa: 0 a 4294967295 em sistemas de 32 bits e 0 a 18446744073709551615 em sistemas de 64 bits.

**Tipo(uint8):**
  - Tamanho: 8 bits/1 byte.
  - Faixa: 0 a 255.

**Tipo(uint16):**
  - Tamanho: 16 bits/2 bytes.
  - Faixa: 0 a 65535.

**Tipo(uint32):**
  - Tamanho: 32 bits/4 bytes.
  - Faixa: 0 a 4294967295.

**Tipo(uint64):**
  - Tamanho: 64 bits/8 bytes.
  - Faixa: 0 a 18446744073709551615.

Esses s√£o os tipos de dados inteiros n√£o assinados em Go, cada um com seu tamanho e faixa espec√≠ficos. Os tipos _uint_ e
suas variantes representam valores que s√£o sempre n√£o negativos, incluindo zero e valores positivos, e s√£o
frequentemente usados quando voc√™ precisa representar quantidades que n√£o fazem sentido como valores negativos.

## Float:
O tipo de dados _float_ em programa√ß√£o, incluindo em Go, √© usado para armazenar valores num√©ricos que representam
n√∫meros de ponto flutuante, ou seja, n√∫meros reais. Esses n√∫meros podem ter parte inteira e parte fracion√°ria,
permitindo a representa√ß√£o de valores n√£o inteiros, como n√∫meros decimais.

O tipo de dados _float_ possui duas palavras-chave:

**Tipo(float32):**
  - Tamanho: 32 bits (4 bytes).
  - Precis√£o: aproximadamente 7 d√≠gitos decimais de precis√£o.
  - Faixa: aproximadamente de -3.4e+38 a 3.4e+38.
  - Significado: O tipo float32 em Go representa n√∫meros de ponto flutuante (n√∫meros reais) com 32 bits de precis√£o.
    Isso significa que pode representar n√∫meros decimais com at√© sete d√≠gitos significativos, e sua faixa de valores vai
    de aproximadamente -3.4 vezes 10 elevado a 38 at√© 3.4 vezes 10 elevado a 38.

Exemplo:

```go
var flutuante float32 = 11.11 // Recebe um valor flutuante
var Flutuante float32 = -3.2e+35 // Recebe um valor flutuante negativo
```

**Tipo(float64):**
  - Tamanho: 64 bits (8 bytes).
  - Precis√£o: aproximadamente 15 d√≠gitos decimais de precis√£o. - Faixa: aproximadamente de -1.7e+308 a +1.7e+308.
  - Significado: O tipo float64 em Go representa n√∫meros de ponto flutuante com maior precis√£o, usando 64 bits. Isso
    permite representar n√∫meros decimais com at√© 15 d√≠gitos significativos. A faixa de valores do float64 vai de
    aproximadamente -1.7 vezes 10 elevado a 308 at√© 1.7 vezes 10 elevado a 308.

Exemplo:
```go
var flutuante float64 = -1.3e+220 // Recebe um valor flutuante negativo
var Flutuante float64 = 111.111 // Recebe um valor flutuante
```

Em resumo, a principal diferen√ßa entre _float32_ e _float64_ est√° na precis√£o e na faixa de valores que podem ser
representados. O _float64_ oferece maior precis√£o, mas tamb√©m ocupa mais espa√ßo em mem√≥ria, sendo a escolha preferida
quando a precis√£o √© crucial, como em c√°lculos cient√≠ficos. O _float32_ √© usado quando se deseja economizar espa√ßo e a
precis√£o adicional n√£o √© necess√°ria.

## String:
O tipo de dados _string_ √© empregado para armazenar sequ√™ncias de caracteres, ou seja, texto. Os valores atribu√≠dos a
uma _string_ devem ser delimitados por aspas duplas. Essa representa√ß√£o √© fundamental para trabalhar com dados textuais
em Go, proporcionando uma maneira consistente e eficiente de lidar com informa√ß√µes como palavras, frases e outras formas
de texto.

Aqui est√£o algumas caracter√≠sticas importantes sobre strings em Go:

## Declara√ß√£o de Strings:
Voc√™ pode declarar uma string usando aspas duplas.
```go
mensagem := "Gopher Golang ^-^/!!!" // Essa √© uma String
```

**Imutabilidade:** _Strings_ em Go s√£o imut√°veis, o que significa que, uma vez criada, n√£o √© poss√≠vel modificar seus
caracteres individualmente. As opera√ß√µes que parecem modificar uma string, na verdade, criam uma nova _string_.

As _strings_ em Go s√£o projetadas para serem eficientes, e a codifica√ß√£o em UTF-8 permite a manipula√ß√£o eficaz de
caracteres em diferentes idiomas. A imutabilidade das _strings_ promove a seguran√ßa na manipula√ß√£o de dados e evita
comportamentos inesperados. O pacote _strings_ oferece funcionalidades adicionais para facilitar o trabalho com
_strings_ de maneira eficiente.

# 12. Arrays
Em Go, um _array_ √© um tipo de estrutura de dados que permite armazenar uma cole√ß√£o fixa de elementos do mesmo tipo, ou
seja, uma vari√°vel que armazena valores do mesmo tipo. Ao serem declarados, os arrays t√™m um tamanho predefinido que n√£o
pode ser alterado ap√≥s sua cria√ß√£o. Alguns pontos essenciais sobre arrays em Go incluem:

## Declara√ß√£o de Arrays:
Arrays s√£o declarados especificando o tipo dos elementos e seu tamanho. A sintaxe b√°sica √© utilizando "var" √©:
```go
var nomeArray = [tamanho]Tipo{valores} // Aqui o comprimento √© definido
var nomeArray = [...]Tipo{valores} // Aqui o comprimento √© inferido
```
Com o sinal ‚Äú:=‚Äù √© assim:

```go
nomeArray = [tamanho] Tipo{valores} // Aqui o comprimento √© definido
nomeArray = [...]Tipo{valores} // Aqui o comprimento √© inferido
```

**Importante**: A dimens√£o especifica a quantidade de elementos a serem armazenados no _array_. Em Go, os arrays possuem
uma dimens√£o fixa. Essa dimens√£o √© definida explicitamente por um n√∫mero ou inferida pelo compilador (o que significa
que o compilador decide a dimens√£o do _array_ com base no n√∫mero de valores fornecidos).

## Acesso a Elementos de um Array:
Voc√™ pode acessar um elemento espec√≠fico do array consultando seu n√∫mero de √≠ndice.

Em Go, os √≠ndices do array come√ßam em 0. Isso significa que [0] √© o primeiro elemento, [1] √© o segundo elemento, etc.

Exemplo:

```go
contando := [5]int{10, 20, 30, 40, 50}

fmt.Println(contando [0]) // Imprime o valor 10
fmt.Println(contando [4]) // Imprime o valor 50
```

## Alterar Elementos de um Array:
Voc√™ tamb√©m pode alterar o valor de um elemento espec√≠fico da matriz consultando o n√∫mero do √≠ndice.

Exemplo:

```go
contando := [5]int{10, 20, 30, 40, 50}

contando [4] = 10 // Alterando o valor do quarto elemento no array "contando"
fmt.Println(contando) // Imprimindo o valor do array contando ap√≥s a altera√ß√£o
```

## Inicializa√ß√£o de Arrays:
Se um array ou qualquer um de seus elementos n√£o for explicitamente inicializado no c√≥digo, ser√° atribu√≠do a eles o
valor padr√£o correspondente ao seu tipo. √â relevante notar que, para o tipo ‚Äúint", o valor padr√£o √© 0, enquanto para o
tipo "string", o valor padr√£o √© uma string vazia, representada por """. Essa caracter√≠stica garante consist√™ncia e
previsibilidade quando n√£o h√° uma inicializa√ß√£o expl√≠cita, proporcionando valores padr√£o coerentes com os tipos de dados
envolvidos.

Exemplo:
```go
array1 := [7]int{1,2,3,4,5,6,7} // Completamente inicializado
array2 := [7]int{1,2,3,4} // Parcialmente inicializado
array3 := [7]int{} // N√£o inicializado:

fmt.Println(array1) // Imprime todos os valores
fmt.Println(array2) // Imprime parte dos valores
fmt.Println(array3) // Imprime o valor padr√£o (0)
```

## Inicializa√ß√£o de Elementos Espec√≠ficos em Arrays:
√â poss√≠vel inicializar apenas elementos espec√≠ficos de um array. Exemplo:

```go
array := [7]int{0:10, 6:70} // Inicializando elementos espec√≠ficos

fmt.Println(array) // Imprimindo os elementos espec√≠ficos
```

Explicando o exemplo acima:

O _array_ possui 7 elementos ([7]), ao utilizar ‚Äú0:10", estou atribuindo o valor "10" ao √≠ndice 0 do _array_ (primeiro
elemento). O ‚Äú6:70" indica que estou atribuindo 70 ao √≠ndice 6 (s√©timo elemento).

## Comprimento de Arrays:
O tamanho de um array em Go √© fixo e determinado durante a declara√ß√£o. Para obter o tamanho, utiliza-se a fun√ß√£o "len".

Exemplo:

```go
array1 = [3]string{"Ma√ß√£", "Uva", "Jambo"}
array2 = [...]int{1,2,3,4,5,6,7}

fmt.Println(len(array1)) // Imprime o comprimento do primeiro Array (3)
fmt.Println(len(array2)) // Imprime o comprimento do segundo Array (7)
```

Os arrays em Go s√£o uma ferramenta fundamental quando se precisa de uma cole√ß√£o fixa de elementos do mesmo tipo,
proporcionando um controle r√≠gido sobre o tamanho da estrutura de dados. Entretanto, para situa√ß√µes mais din√¢micas, as
slices s√£o geralmente mais convenientes e amplamente utilizadas.

# 13. Slices
As slices s√£o estruturas semelhantes aos _arrays_, mas oferecem maior poder e flexibilidade. Assim como os _arrays_, as
_slices_ s√£o utilizadas para armazenar v√°rios valores do mesmo tipo em uma √∫nica vari√°vel. No entanto, ao contr√°rio dos
_arrays_, as _slices_ t√™m a capacidade de alterar dinamicamente seu comprimento, expandindo ou reduzindo conforme
necess√°rio. Essa caracter√≠stica confere √†s _slices_ uma adaptabilidade que as torna especialmente √∫teis em situa√ß√µes
onde a quantidade de dados pode variar ao longo do tempo.

Em Go, existem v√°rias formas de criar uma slice, veja:

- Usando o formato: []Tipo{valores};
- Criando uma slice de um array;
- Usando a fun√ß√£o **make()**.

## Criando uma Slice com o formato: []Tipo{valores}:
```go
// Sintaxe
minhaSlice := []Tipo{valores}

// Forma comum de declarar uma slice
minhaSlice := []int{}

// 0 c√≥digo acima declara uma slice vazia de comprimento e capacidade
// Para inicializar a slice durante a declara√ß√£o, √© feita dessa forma:

minhaSlice := []int{1,2,3}

// 0 c√≥digo acima declara uma slice de inteiros de comprimento 3 e capacidade de 3
```

Em Go, existem duas fun√ß√µes que podem ser usadas para retornar o comprimento e a capacidade de uma fatia:
- **Fun√ß√£o len()** - retorna o comprimento da slice (o n√∫mero de elementos na slice)
- **Fun√ß√£o cap()** - retorna a capacidade da slice (o n√∫mero de elementos para os quais a slice pode aumentar ou diminuir)

## len - Comprimento de uma Slice:
A fun√ß√£o "len" retorna o n√∫mero de elementos presentes em uma slice. Por exemplo:

```go
minhaSlice := []int{1, 2, 3, 4, 5}
comprimento := len(minhaSlice) // Retorna 5

fmt.Println(comprimento) // Imprime o valor da vari√°vel comprimento
```

## cap - Capacidade de uma Slice:
A fun√ß√£o cap retorna a capacidade total da _slice_, ou seja, o n√∫mero m√°ximo de elementos que a _slice_ pode conter
antes de precisar ser realocada para um espa√ßo maior na mem√≥ria.

```go
minhaSlice := make([]int, 3, 5)
capacidade := cap (minhaSlice) // Retorna 5

fmt.Println(capacidade) // Imprime o valor da vari√°vel capacidade
```

A capacidade √© especialmente √∫til quando se trabalha com slices que podem crescer dinamicamente, pois permite otimizar a
realoca√ß√£o de mem√≥ria quando necess√°rio.

Ambas as fun√ß√µes s√£o ferramentas valiosas ao manipular slices em Go, proporcionando informa√ß√µes essenciais sobre a
quantidade atual de elementos e a capacidade dispon√≠vel na estrutura de dados.

## Criando uma Slice de um Array:
Voc√™ pode criar uma slice fatiando um array. Exemplo:

```go
// Criando uma slice de um array existente
var minhaArray = [5]int{1, 2, 3, 4, 5} // Array
minhaSlice := minhaArray[1:4] // Cria uma slice contendo os elementos 2, 3, 4

fmt.Println(minhaSlice) // Imprime o valor "[2 3 4]" na tela
```

Veja outro exemplo:

```go
minhaArray := [7]int{20, 21, 22, 23, 24, 25, 26}
minhaSlice := minhaArray[2:4]

fmt.Printf("minhaSlice = %v\n", minhaSlice)
fmt.Printf("comprimento = %d\n", len(minhaSlice))
fmt.Printf("capacidade = %d\n", cap(minhaSlice))
```

No exemplo acima, _minhaSlice_ √© uma fatia com comprimento de 2. Ela √© feita a partir de _minhaArray_, que √© um array
com comprimento 7. A Slice come√ßa no terceiro elemento do array que tem o valor 22 (lembre-se que os √≠ndices do array
come√ßam em 0. Isso significa que "O" √© o primeiro elemento, 1 √© o segundo e etc.). A slice pode crescer at√© o final da
array, isso significa que a capacidade da slice √© 5.

## Criando uma Slice coma fun√ß√£o make():
A fun√ß√£o _make()_ tamb√©m pode ser utilizada para criar uma slice.

```go
// Sintaxe
nome_da_slice := make([]Tipo, comprimento, capacidade)
```

**Importante**: se o par√¢metro capacidade n√£o for definido, ser√° igual ao comprimento.

Este exemplo mostra como criar uma slice com a fun√ß√£o make():

```go
// Criando um slice de inteiros com make
// make([] tipo, tamanho)
minhaSlice := make([]int, 3) // make([]tipo, tamanho)

// Modificando valores no slice
minhaSlice[0] = 10
minhaSlice [1] = 20
minhaSlice [2] = 30

fmt.Println("Slice :", minhaSlice)
fmt.Println("Comprimento:", len(minhaSlice))
fmt.Println("Capacidade:", cap(minhaSlice))
```

Neste exemplo, _make([]int, 3)_ cria uma slice de inteiros com um comprimento inicial de 3. Em seguida, valores s√£o
atribu√≠dos aos elementos do slice.

## Acessando Elementos de uma Slice:
Em Go, voc√™ pode acessar os elementos de uma slice usando √≠ndices. O √≠ndice do primeiro elemento √© 0, o segundo √© 1, e
assim por diante. Aqui est√° um exemplo simples de como acessar elementos de uma slice:

```go
minhaSlice := []int{10,20,30,40,50}
fmt.Println(minhaSlice[0]) // Imprime o primeiro elemento (10)
fmt.Println(minhaSlice [4]) // Imprime o √∫ltimo elemento (50)
```

Neste exemplo, _minhaSlice_ √© uma slice de inteiros, com cinco elementos. Os elementos s√£o acessados usando "[]",
seguidos do √≠ndice desejado (ex: √≠ndice [0] retorna o valor 10).

## Alterando Elementos de uma Slice:
Voc√™ pode alterar os elementos de uma slice atribuindo um novo valor a um elemento espec√≠fico usando o √≠ndice
correspondente. Aqui est√° um exemplo mais detalhado de como fazer isso:

```go
minhaSlice := []int{10, 20, 30}

minhaSlice [2] = 8000 // Alterando o valor do √∫ltimo elemento (30)
fmt.Println(minhaSlice[0]) // Imprime o primeiro elemento (10)
fmt.Println(minhaSlice[2]) // Imprime o √∫ltimo elemento (8000)
```

Neste exemplo, _minhaSlice_ √© uma slice de inteiros inicializada com tr√™s elementos. O elemento de √≠ndice [2] (terceiro
elemento) sofreu uma modifica√ß√£o, saindo do valor 30 para 8000.

## Anexando Elementos numa Slice:
Voc√™ pode anexar elementos ao final de uma slice utilizando a fun√ß√£o "append()":

```go
// Sintaxe
nome_da_slice = append (nome_da_slice, elementol, elemento2, ...)
```

Veja um exemplo:

```go
minhaSlice := []int{10, 20, 30} // Criando uma slice de inteiros

fmt.Println("Slice antes da adi√ß√£o:", minhaSlice) // Exibindo a slice antes da adi√ß√£o

minhaSlice = append(minhaSlice, 40) // Adicionando um novo elemento (40) √† slice

minhaSlice = append(minhaSlice, 50, 60, 70) // Adicionando v√°rios elementos √† slice

fmt.Println("Slice ap√≥s a adi√ß√£o:", minhaSlice) // Exibindo a slice ap√≥s a adi√ß√£o
```

Neste exemplo, _minhaSlice_ √© uma slice de inteiros inicializada com tr√™s elementos. A fun√ß√£o append() √© usada para
adicionar novos elementos √† slice.

## Anexando uma Slice numa Slice:
Para anexar todos os elementos de uma slice a outra slice, use a fun√ß√£o _append()_.

```go
// Sintaxe
minhaSlice = append(minhaSlicel, minhaSlice2...)
```

**Importante**: O ap√≥s _minhaSlice2_ √© necess√°rio ao anexar os elementos de uma slice a outra.
Aqui est√° um exemplo de como anexar uma slice a outra:

```go
minhaSlice := []int{1,2,3} // Primeira slice
minhaSlice2 := []int{4,5,6} // Segunda Slice
minhaSlice3 := append(minhaSlice, minhaSlice2...) // Terceira slice

fmt.Printf("minhaSlice3 = %v\n", minhaSlice3) // Resultado da terceira slice
fmt.Printf("Comprimento= %d\n", len(minhaSlice3)) // Resultado do comprimento
fmt.Printf("Capacidade %d\n", cap(minhaSlice3)) // Resultado da capacidade
```
No exemplo acima, _minhaSlice3_ utiliza a fun√ß√£o _append()_ para anexar _minhaSlice_ e _minhaSlice2_. O resultado disso
ser√° a jun√ß√£o dos elementos de _minhaSlice_ e _minhaSlice2_.

## Efici√™ncia de Mem√≥ria:
Ao utilizar _slices_ em Go, todos os elementos do _array_ subjacente s√£o carregados na mem√≥ria. Caso o _array_ seja
extenso e voc√™ necessite apenas de alguns elementos, torna-se mais eficiente copiar exclusivamente esses elementos
utilizando a fun√ß√£o _copy()_.

A fun√ß√£o _copy()_ cria um novo array subjacente contendo apenas os elementos essenciais para a slice de destino. Essa
abordagem contribui para a redu√ß√£o do consumo de mem√≥ria do programa, evitando a carga de dados n√£o utilizados.

Portanto, ao empregar _copy()_, otimiza-se a aloca√ß√£o de mem√≥ria, assegurando que somente os dados relevantes sejam
copiados para a nova slice. Essa pr√°tica √© particularmente valiosa ao lidar com grandes conjuntos de dados, visando
minimizar o impacto nos recursos do sistema.

Este exemplo mostra como usar a fun√ß√£o _copy()_:

```go
// Origem
source := []int{1, 2, 3, 4, 5}

// Destino com capacidade inicial
destination := make([]int, 3)

// Usando copy para copiar elementos da origem para o destino
// 0 tamanho da c√≥pia √© o menor entre len(source) e len(destination) 9 := copied copy (destination, source)

fmt.Println("Elementos copiados:", copied)
fmt.Println("Destino ap√≥s a c√≥pia:", destination)
```

Neste exemplo, a fun√ß√£o _copy(destination, source)_ copia elementos da slice _source_ para a slice _destination_. A
capacidade inicial da _destination_ √© suficiente para armazenar tr√™s elementos, ent√£o apenas os tr√™s primeiros elementos
de _source_ ser√£o copiados.

# 14. Operadores
Operadores s√£o utilizados para executar opera√ß√µes em vari√°veis e valores. Por exemplo, o operador "+" √© usado para somar
dois valores. Veja o exemplo abaixo:

```go
var soma = 1900 + 45 // Somando dois valores
fmt.Println(soma) // Imprimindo valor da vari√°vel "soma"
```

O operador "+" √© comumente utilizado para adicionar dois valores, mas tamb√©m pode ser empregado para somar uma vari√°vel a um valor ou para somar duas vari√°veis.
Exemplo:

```go
var (
    soma = 1900 + 14 // Recebe o valor de 1900 + 14 (1914)
    soma2 = 1900 + 29 // Recebe o valor de 1900 + 29 (1929)
    soma3 = 1900 + 45 // Recebe o valor de 1900 + 45 (1945)
    soma4 = soma4 = soma + soma2 + soma3 // Recebe os valores de soma, soma2 e soma3
)

fmt.Println(soma4) // Imprimindo valor da vari√°vel "soma4"
```

Go divide os operadores nos seguintes grupos:
- **Aritm√©ticos**;
- **Atribui√ß√£o**;
- **Compara√ß√£o**;
- **L√≥gicos**;
- **Bit a Bit (Bitwise)**.

## Operadores aritm√©ticos:
Operadores aritm√©ticos s√£o usados para realizar opera√ß√µes matem√°ticas comuns. Veja a tabela com os operadores, nomes,
descri√ß√µes e exemplos:

| OPERADOR | NOME          | DESCRIC√ÉO                                      | EXEMPLO |
| -------- | ------------- | ---------------------------------------------- | ------- |
| +        | Soma          | Adiciona dois valores                          | x + y   |
| -        | Subtra√ß√£o     | Subtrai dois valores                           | x - y   |
| *        | Multiplica√ß√£o | Multiplica dois valores                        | x * y   |
| /        | Divis√£o       | Divide dois valores                            | x / y   |
| %        | Modulo        | Retorna o resto da divis√£o entre dois valores. | x % y   |
| **       | Pot√™ncia      | Eleva um valor a outro                         | x ** y  |
| ++       | Incremento    | Incrementa um valor                            | x++     |
| --       | Decremento    | Decrementa um valor                            | x--     |

Esta lista mostra exemplos e equival√™ncias dos operadores aritm√©ticos em Go, que simplificam a express√£o de opera√ß√µes frequentes.

## Operadores de atribui√ß√£o:
Operadores de atribui√ß√£o s√£o usados para atribuir valores a vari√°veis. No exemplo abaixo, o operador de atribui√ß√£o (=) √©
usado para atribuir o valor 15 a uma vari√°vel chamada valor:

```go
var soma = 15 // Vari√°vel "soma" recebe o valor "15"
2 fmt.Println(soma) // Imprimindo o valor da vari√°vel soma na tela
```

O operador de atribui√ß√£o de adi√ß√£o (+=) adiciona um valor a uma vari√°vel:

```go
var soma = 15 // Vari√°vel "soma" recebe o valor "15"
soma += 5 // Adicionando "+5" √† vari√°vel soma
fmt.Println(soma) // Imprimindo o valor da vari√°vel soma na tela
```

Uma lista de todos os operadores de atribui√ß√£o:

| OPERADOR | NOME                                | EXEMPLO |
| -------- | ----------------------------------- | ------- |
| =        | Atribui√ß√£o                          | x = 5   |
| +=       | Atribui√ß√£o de adi√ß√£o                | x += 3  |
| -=       | Atribui√ß√£o de subtra√ß√£o             | x -= 3  |
| *=       | Atribui√ß√£o de multiplica√ß√£o         | x *= 3  |
| /=       | Atribui√ß√£o de divis√£o               | x /= 3  |
| %=       | Atribui√ß√£o de modulo                | x %= 3  |
| &=       | Atribui√ß√£o de bitwise e             | x &= 3  |
| ^=       | Atribui√ß√£o de bitwise xor           | x ^= 3  |
| >>=      | Atribui√ß√£o de bitwise shift direito | x >>= 3 |

Esta lista mostra exemplos e equival√™ncias dos operadores de atribui√ß√£o compostos em Go, que simplificam a express√£o de opera√ß√µes frequentes.

## Operadores de compara√ß√£o:
Operadores de compara√ß√£o s√£o usados para comparar dois valores.

**Importante**: o valor de retorno de uma compara√ß√£o √© verdadeiro (1) ou falso (0).

No exemplo a seguir, o operador maior que (>) √© usado para descobrir se 10 √© maior que 5:

```go
var valor1 = 10
var valor2 = 5
fmt.Println(valor1 ‚Ä∫ valor2) // Retorna (verdadeiro) porque 10 √© maior que 5
```

Uma lista de todos os operadores de compara√ß√£o:

```go
/*
Operador: >
Nome: Maior que
Descri√ß√£o: Retorna verdadeiro se o primeiro valor for maior que o segundo
Exemplo: x > y

Operador: <
Nome: Menor que
Descri√ß√£o: Retorna verdadeiro se o primeiro valor for menor que o segundo
Exemplo: x < y

Operador: ==
Nome: Igual a
Descri√ß√£o: Retorna verdadeiro se os valores forem iguais
Exemplo: x == y

Operador: !=
Nome: Diferente de
Descri√ß√£o: Retorna verdadeiro se os valores forem diferentes
Exemplo: x != y

Operador: >=
Nome: Maior ou igual a
Descri√ß√£o: Retorna verdadeiro se o primeiro valor for maior ou igual ao segundo
Exemplo: x >= y

Operador: <=
Nome: Menor ou igual a
Descri√ß√£o: Retorna verdadeiro se o primeiro valor for menor ou igual ao segundo
Exemplo: x <= y
```

Essa tabela resume os operadores de compara√ß√£o, descrevendo seus nomes, exemplos de uso e a tradu√ß√£o correspondente.

**Importante**: voc√™ aprender√° mais sobre operadores de compara√ß√£o e como us√°-los no cap√≠tulo **Condi√ß√µes**.

## Operadores bit a bit:
Operadores bit a bit s√£o usados em n√∫meros (bin√°rios).

Essa √© a lista de todos os operadores bit a bit:

```go
/*
Operador: &
Nome: AND
Descri√ß√£o: Define cada bit como 1 se ambos os bits forem 1
Exemplo: x & y

Operador: ‚îÇ
Nome: OR
Descri√ß√£o: Define cada bit como 1 se um dos dois bits for 1
Exemplo: x | y

Operador: ^
Nome: XOR
Descri√ß√£o: Define cada bit como 1 se apenas um dos dois bits for 1
Exemplo: x ^ y

Operador: <<
Nome: Deslocamento √† esquerda com preenchimento zero
Descri√ß√£o: Desloca cada bit para a esquerda, inserindo zeros √† direita
Exemplo: x << 2

Operador: >>
Nome: Deslocamento √† direita com preenchimento zero
Descri√ß√£o: Desloca cada bit para a direita, inserindo zeros √† esquerda
Exemplo: x >> 2
```

# 15. Estruturas condicionais
Em Go, as estruturas condicionais, como "_if_", "_else if_', e "_else_", proporcionam o controle do fluxo de execu√ß√£o do
programa conforme determinadas condi√ß√µes. Essas constru√ß√µes permitem que voc√™ tome decis√µes l√≥gicas, adaptando o
comportamento do programa de acordo com os diferentes cen√°rios que podem surgir durante a execu√ß√£o.

Uma condi√ß√£o pode ser verdadeira ou falsa.

Go suporta os operadores de compara√ß√£o usuais da matem√°tica:

- **Menos que**: <
- **Menor ou igual**: <=
- **Maior que**: >
- **Maior ou igual**: >=
- **Igual a**: ==
- **Diferente de**: !=

Al√©m disso, Go oferece suporte aos operadores l√≥gicos usuais:

- **Operador l√≥gico "and"**: &&
- **Operador l√≥gico "or"**: ||
- **Operador l√≥gico "not"**: !

Voc√™ pode usar esses operadores ou suas combina√ß√µes para criar condi√ß√µes para diferentes decis√µes.

## Declarando if:
A declara√ß√£o _if_ √© usada para executar um bloco de c√≥digo condicionalmente, dependendo da avalia√ß√£o de uma express√£o
booleana. Veja a sintaxe b√°sica:

```go
if condi√ß√£o {
// Bloco de c√≥digo a ser executado se a condi√ß√£o for verdadeira
}
```

Aqui est√° um exemplo b√°sico de como declarar _if_ em Go:

```go
// Vari√°vel com tipo inferido recebendo o valor 18
idade := 18

// Verificando se "idade" √© maior que 17
if idade > 17 {
    fmt.Println("Voc√™ √© maior de idade.")
}
```

No exemplo acima, temos dois valores, sendo que, um deles, est√° armazenado numa vari√°vel (idade). Testamos os dois
valores para descobrir se o valor armazenado na vari√°vel √© maior que 17. Se a condi√ß√£o for verdadeira, um texto √©
imprimido.

## Declarando else:
A declara√ß√£o _else_ em Go √© usada em conjunto com a declara√ß√£o _if_ para especificar um bloco de c√≥digo a ser executado
quando a condi√ß√£o do _if_ for falsa. Veja a sintaxe:

```go
if condi√ß√£o {
    // C√≥digo a ser executado se a condi√ß√£o for verdadeira } else {
} else {
    // C√≥digo a ser executado se a condi√ß√£o for falsa
}
```

Aqui est√° um exemplo simples:

```go
// Vari√°vel com tipo inferido recebendo o valor 15
idade := 15

// Verificando se "idade" √© maior que 18
if idade > 18 {
    fmt.Println("Voc√™ √© maior de idade.")
} else {
    fmt.Println("Voc√™ √© menor de idade.")
}
```

No exemplo acima, se a condi√ß√£o idade > 18 for verdadeira, o bloco de c√≥digo dentro do _if_ ser√° executado. Caso
contr√°rio, o bloco de c√≥digo dentro do _else_ ser√° executado.

**Importante**: ao declarar _eles_, certifique-se de estar na linha certa, caso contr√°rio, um erro de sintaxe ser√° gerado. Veja um exemplo:

```go
if idade > 18 {
    fmt.Println("Voc√™ √© maior de idade.")
} // 0 else deve estar aqui, logo ap√≥s o fechamento de chaves do if else { // 0 else abaixo da chave do if causar√° erro
else {
fmt.Println("Voc√™ √© menor de idade.")
}
```

## Declarando else if:
A declara√ß√£o _else if_ em Go √© utilizada para avaliar m√∫ltiplas condi√ß√µes em sequ√™ncia, permitindo que voc√™ lide com
diferentes cen√°rios de maneira estruturada. D√™ uma olhada na sintaxe:

```go
if condi√ß√£o1 {
// C√≥digo a ser executado se condi√ß√£o1 for verdadeira
} else if condi√ß√£o2 {
// C√≥digo a ser executado se condi√ß√£o1 for falsa e condi√ß√£o2 for verdadeira }
else {
    // C√≥digo a ser executado se tanto condi√ß√£o1 quanto condi√ß√£o2 forem falsas
}
```

Aqui est√° um exemplo b√°sico:

```go
nota := 75

if nota >= 90 {
    fmt.Println("Excelente!")
} else if nota >= 70 {
    fmt.Println("Bom trabalho!")
} else {
    fmt.Println("√â necess√°rio melhorar.")
}
```

No exemplo acima, tr√™s blocos de c√≥digo s√£o associados a diferentes condi√ß√µes:

Se nota for maior ou igual a 90, o primeiro bloco dentro do if √© executado, imprimindo "Excelente!".

Se a primeira condi√ß√£o n√£o for atendida e nota for maior ou igual a 70, o segundo bloco dentro do _else if_ √© executado, imprimindo "Bom trabalho!".

Se nenhuma das condi√ß√µes anteriores for verdadeira, o bloco dentro do _else_ √© executado, imprimindo "√â necess√°rio melhorar.".

Essa estrutura permite que voc√™ lide com uma s√©rie de condi√ß√µes de forma organizada e fornece flexibilidade para expressar a l√≥gica condicional do seu programa.

## Declarando if aninhado:
√â poss√≠vel utilizar estruturas _if_ aninhadas para lidar com condi√ß√µes mais complexas ou para realizar verifica√ß√µes adicionais em um bloco condicional. Veja a sintaxe:

```go
if condi√ß√£o1 {
    // C√≥digo a ser executado se condi√ß√£ol for verdadeira
    if condi√ß√£o2 {
        // C√≥digo a ser executado se tanto condi√ß√£o1 quanto condi√ß√£o2 forem verdadeiras
    }
}
```

Aqui est√° um exemplo de como declarar _if_ aninhados:

```go
idade := 25
nome = "Alice"

if idade >= 18 {
    fmt.Println("Voc√™ √© maior de idade.")

    if nome == "Alice" {
        fmt.Println("Bem-vinda, Alice!")
    } else {
        fmt.Println("Ol√°, pessoa maior de idade!")
    } else {
        fmt.Println("Voc√™ √© menor de idade.")
    }
}
```
Neste exemplo, h√° um _if_ aninhado dentro do bloco de c√≥digo do primeiro _if_. O segundo _if_ verifica se o nome √©
"Alice" dentro do contexto de uma pessoa maior de idade. Dependendo das condi√ß√µes, diferentes mensagens ser√£o impressas.

Ao utilizar _if_ aninhados, √© essencial manter uma boa organiza√ß√£o no c√≥digo para facilitar a leitura e compreens√£o.
Essa t√©cnica √© √∫til quando voc√™ precisa verificar v√°rias condi√ß√µes em diferentes n√≠veis de hierarquia.

# 16. Switch

Em Go, a declara√ß√£o _switch_ √© uma maneira flex√≠vel e poderosa de expressar estruturas condicionais em que voc√™ compara uma express√£o com v√°rios valores poss√≠veis.

A instru√ß√£o _switch_ em Go √© semelhante √† de outras linguagens como C, C++, Java, JavaScript e PHP, mas com uma diferen√ßa fundamental: em Go, n√£o √© necess√°rio usar a instru√ß√£o break ap√≥s a execu√ß√£o de uma case. A sintaxe b√°sica √© a seguinte:

```go
switch expressao {
case valor1:
// C√≥digo a ser executado se a express√£o for igual a valor1
case valor2:
// c√≥digo a ser executado se a express√£o for igual a valor2
// ... outros cases
default:
// c√≥digo a ser executado se nenhum dos casos anteriores for correspondido
```

√â assim que funciona:
- A express√£o √© avaliada uma vez;
O valor da express√£o do _switch_ √© comparado com os valores de cada case;
- Se houver uma correspond√™ncia, o bloco de c√≥digo associado √© executado;
- A palavra-chave _default_ √© opcional. Ela especifica algum c√≥digo a ser executado se n√£o houver correspond√™ncia de case.

Aqui est√° um exemplo para ilustrar como o switch funciona:

```go
diaDaSemana := "quarta-feira"

switch diaDaSemana {
case "segunda-feira":
    fmt.Println("Primeiro dia √∫til da semana.")
case "quarta-feira":
    fmt.Println("Dia da metade da semana. ")
case "sexta-feira":
    fmt.Println("Chegou o fim de semana!")
default:
    fmt.Println("Outro dia da semana.")
}
```

Neste exemplo, a express√£o _diaDaSemana_ √© comparada com diferentes valores em cada _case_. O c√≥digo dentro do bloco
correspondente ao primeiro caso cuja express√£o √© igual ao valor de _diaDaSemana_ ser√° executado. Se nenhum dos casos
coincidir, o bloco dentro do default (se presente) ser√° executado.

O _switch_ em Go oferece uma alternativa concisa e eficaz √†s estruturas condicionais _if_ e √© especialmente √∫til quando
voc√™ precisa comparar uma vari√°vel com v√°rios valores poss√≠veis. Al√©m disso, diferentemente de algumas outras
linguagens, n√£o √© necess√°rio usar a instru√ß√£o break ap√≥s cada caso, pois o _switch_ em Go automaticamente sai da estrutura
ap√≥s a execu√ß√£o do bloco correspondente.

**Importante**: todos os valores de case devem ter o mesmo tipo que a express√£o _switch_. Caso contr√°rio, o compilador
gerar√° um erro.


## Switch multi-case:
voc√™ pode ter v√°rios valores correspondentes em um √∫nico caso do _switch_. Isso √© conhecido como "switch multi-case". A
ideia √© fornecer uma lista de valores que ser√£o tratados de maneira semelhante quando comparados com a express√£o do
_switch_. Veja a sintaxe:

```go
switch expressao {
case a, b:
// bloco de c√≥digo se a express√£o for avaliada como a ou b
case c, d:
// bloco de c√≥digo se a express√£o for avaliada como c ou d
case e:
// bloco de c√≥digo se a express√£o for avaliada como e
// ... outros cases, se necess√°rio
default:
// bloco de c√≥digo se a express√£o n√£o for encontrada em nenhum dos cases
}
```

Aqui est√° um exemplo de _switch multi-case_:

```go
dia := "s√°bado"

switch dia {
case "segunda-feira", "ter√ßa-feira", "quarta-feira", "quinta-feira", "sexta-feira":
    fmt.Println("Dia √∫til.")
case "s√°bado", "domingo":
    fmt.Println("Final de semana.")
default:
    fmt.Println("Esse dia n√£o existe!")
}
```

Neste exemplo, o primeiro _case_ inclui v√°rios dias √∫teis, e o segundo _case_ inclui dois dias de final de semana. Se a
express√£o dia corresponder a qualquer valor listado em um _case_, o bloco de c√≥digo correspondente ser√° executado.

Isso torna o c√≥digo mais conciso quando voc√™ precisa executar a mesma l√≥gica para v√°rios valores. O uso de m√∫ltiplos
valores em um √∫nico caso economiza repeti√ß√£o de c√≥digo e torna a estrutura do _switch_ mais clara.

# 17. Loops
A estrutura de repeti√ß√£o _for_ √© bastante flex√≠vel e pode ser usada de diferentes maneiras. Vamos explorar as formas
mais comuns do loop _for_ em Go.

## Forma Cl√°ssica (sintaxe):
```go
for inicializa√ß√£o; condi√ß√£o; p√≥s-execu√ß√£o {
// c√≥digo a ser repetido enquanto a condi√ß√£o for verdadeira
}
```

- **inicializa√ß√£o**: √â executado antes do primeiro loop. Pode ser uma declara√ß√£o de vari√°vel ou uma express√£o.
- **condi√ß√£o**: √â avaliada antes de cada itera√ß√£o. Se for verdadeira, o bloco de c√≥digo dentro do for √© executado; caso
  contr√°rio, o loop √© encerrado.
- **p√≥s-execu√ß√£o**: √â executado ap√≥s cada itera√ß√£o.

Veja um exemplo que imprimir√° os n√∫meros de 0 a 4:

```go
for i = 0; i < 5; i++ {
fmt.Println(i)
}

// Explicando o for:
// for i := 0: A vari√°vel i √© inicializada com o valor 0 no in√≠cio do loop
// i < 5: 0 loop continuar√° enquanto a condi√ß√£o i for menor que 5
// i++: Ap√≥s cada itera√ß√£o do loop, o valor de i √© incrementado em 1
```

## Forma Simplificada:

```go
for condi√ß√£o {
    // c√≥digo a ser repetido enquanto a condi√ß√£o for verdadeira
}
```

Veja o mesmo exemplo na forma simplificada:

```go
i := 0

for i < 5 {
    fmt.Println(i)
    i++
}
// i := 0: A vari√°vel i √© inicializada com o valor ‚óä antes do in√≠cio do loop.
// i < 5: 0 loop continuar√° enquanto a condi√ß√£o i for menor que 5.
// i++: Ap√≥s cada itera√ß√£o do loop, o valor de i √© incrementado em 1.
```

## Loop Infinito:

```go
i := 0
for {
    fmt.Println(i)
    i++
    if i : == 6 {
        break
    }
}

// i := 0: A vari√°vel i √© inicializada com o valor ‚óä antes do in√≠cio do loop
// for {}: Loop infinito, pois n√£o h√° condi√ß√£o de parada explicita
// fmt.Println(i):Imprime o valor atual de i
// i++: Ap√≥s cada itera√ß√£o do loop, o valor de i √© incrementado em 1
// if i == 6: Condi√ß√£o de parada se i for igual a 6
// break: A instru√ß√£o break encerra imediatamente o loop
```

A sintaxe √© parecida com a forma simplificada, por√©m, o que muda s√£o as instru√ß√µes que ser√£o passadas.

## Declara√ß√£o continue:
A instru√ß√£o _continue_ √© usada para pular uma ou mais itera√ß√µes no loop. Em seguida, continua com a pr√≥xima itera√ß√£o no
loop.

Veja um exemplo onde o valor 5 √© pulado:

```go
for i:= 0; i <= 10; i++ {
    if i == 5 {
        continue
    }
    fmt.Println(i)
}
```

O `if i == 5` verifica se o valor de `i` √© igual a `5`. Se essa condi√ß√£o for verdadeira, a instru√ß√£o _continue_ √©
executada. A instru√ß√£o _continue_ pula para a pr√≥xima itera√ß√£o do loop, ignorando o restante do c√≥digo dentro do loop
que vem ap√≥s a instru√ß√£o _continue_. Portanto, quando _i_ √© igual a _5_, o bloco _fmt.Println(i)_ √© ignorado, e o loop
continua com a pr√≥xima itera√ß√£o. Como resultado, quando voc√™ executa esse c√≥digo, o n√∫mero 5 n√£o ser√° impresso na sa√≠da
do programa, e os outros n√∫meros de 0 a 10 ser√£o impressos.

## Declara√ß√£o break:
A instru√ß√£o break √© usada para interromper/encerrar a execu√ß√£o do loop. Veja um exemplo onde o loop √© interrompido:

```go
for i := 0; i <= 10; i++ {
    if i == 5 {
        break
    }
fmt.Println(i)
}
```

O _if_ _i_ == 5 verifica se o valor de _i_ √© igual a _i_. Se essa condi√ß√£o for verdadeira, a instru√ß√£o _break_ √©
executada. A instru√ß√£o _break_ encerra imediatamente o loop em que est√° contida, ignorando o restante do c√≥digo dentro
do loop.

Portanto, quando i atinge o valor 5, a condi√ß√£o _if_ _i_ == 5 se torna verdadeira, e O _break_ √© executado, encerrando o
loop imediatamente. Isso significa que o bloco _fmt.Println(i)_ n√£o ser√° executado para _i_ igual a 5 e nenhum n√∫mero
maior que 5 ser√° impresso.

Ao executar esse c√≥digo, voc√™ ver√° a sa√≠da incluindo os n√∫meros de 0 a 4, mas n√£o o 5, porque o loop √© encerrado antes
de chegar a esse ponto.

**Importante**: continue e break geralmente s√£o usados com condi√ß√µes.

## Loops Aninhados:
Os loops aninhados em Go s√£o uma constru√ß√£o onde um ou mais loops est√£o contidos dentro de outro loop. Isso √© √∫til
quando voc√™ precisa iterar sobre elementos em m√∫ltiplas dimens√µes, como em matrizes bidimensionais ou em situa√ß√µes que
exigem itera√ß√µes encadeadas.

Aqui est√° um exemplo simples de loops aninhados em Go, que imprime um padr√£o de asteriscos em forma de ret√¢ngulo:

```go
// Definindo as dimens√µes do ret√¢ngulo
largura := 5
altura := 3

// Loop externo para controlar as linhas do ret√¢ngulo
for i := 0; i < altura; i++ {
// Loop interno para controlar os asteriscos em cada linha
    for j = 0; j < largura; j++ {
        fmt.Print("* ")
    }
    fmt.Println() // Adiciona uma quebra de linha ap√≥s cada linha
}
```

Este exemplo utiliza dois loops aninhados: o loop externo controla as linhas do ret√¢ngulo, e o loop interno controla os
asteriscos em cada linha.

Os loops aninhados s√£o frequentemente usados para lidar com matrizes bidimensionais, padr√µes complexos ou qualquer
situa√ß√£o em que seja necess√°rio iterar sobre m√∫ltiplos conjuntos de dados encadeados.

## Palavra-chave range:
A palavra-chave _range_ em Go √© usada dentro de loops for para iterar sobre elementos em uma variedade de tipos de
dados, como _slices_, _arrays_, _strings_, _maps_ e _canais_. Ela simplifica o processo de itera√ß√£o, fornecendo valores
do iter√°vel e, opcionalmente, seus √≠ndices.

Assim √© a sintaxe b√°sica:
```go
for indice, valor := array | slice | map {
// C√≥digo a ser executado para cada itera√ß√£o
}
```

Veja um exemplo simples utilizando _range_ em uma _slice_:

```go
// Criando um slice de n√∫meros
numeros := []int{1, 2, 3, 4, 5}

// Usando range para iterar sobre o slice
for indice, valor := range numeros {
    fmt.Printf("√çndice: %d, Valor: %d\n", indice, valor)
}
```

Neste exemplo, o _range_ √© utilizado para percorrer o _slice_ numeros. A cada itera√ß√£o do _loop_, indice recebe o √≠ndice
atual e valor recebe o valor correspondente no _slice_. O c√≥digo dentro do _loop_ imprime o √çndice e o valor.

O range √© flex√≠vel e pode ser adaptado para diferentes tipos de dados. Al√©m disso, se voc√™ n√£o precisar do √≠ndice, pode
omiti-lo. Por exemplo:

```go
// Criando um slice de n√∫meros
numeros := []int{1, 2, 3, 4, 5}

for valor := range numeros {
    fmt.Println(valor)
}
```

Neste caso, o "_" √© usado para ignorar o √≠ndice, focando apenas nos valores. O uso do range proporciona uma maneira
concisa de iterar sobre elementos de uma cole√ß√£o em Go.

# 18. Functions
Em Go, fun√ß√µes s√£o blocos de c√≥digo que realizam uma tarefa espec√≠fica. Elas s√£o fundamentais para organizar e
modularizar o c√≥digo em programas Go. Aqui est√£o alguns aspectos importantes sobre fun√ß√µes em Go:

## Sintaxe B√°sica:

```go
func nomeDaFun√ß√£o() {
// C√≥digo a ser executado
}
```

Para criar (geralmente chamada de declara√ß√£o) uma fun√ß√£o, fa√ßa o seguinte:
- Use a palavra-chave _func_;
- Especifique um nome para a fun√ß√£o, seguido de par√™ntesis ‚Äú()‚Äù;
- Adicione o c√≥digo que define o que a fun√ß√£o deve fazer, entre chaves ‚Äú{}‚Äù.

## Chamando fun√ß√µes:
Fun√ß√µes n√£o s√£o executadas imediatamente. Elas s√£o "salvas para uso posterior" e ser√£o executadas quando forem chamadas.

No exemplo abaixo, uma fun√ß√£o chamada "_saudacao()_". A chave de abertura ({) indica o in√≠cio do c√≥digo da fun√ß√£o, e a
chave de fechamento (}) indica o fim da fun√ß√£o. A fun√ß√£o produz a sa√≠da "Ol√°, Mundo!". Para chamar a fun√ß√£o, basta
escrever o seu nome seguido por dois par√™nteses "()" dentro da fun√ß√£o main:

```go
// Fun√ß√£o simples que imprime uma mensagem
func saudacao() {
    fmt.Println("Ol√°, Mundo!")
}

func main() {
    // Chamando a fun√ß√£o saudacao
    saudacao()
}
```

Tamb√©m √© poss√≠vel chamar m√∫ltiplicas fun√ß√µes, caso deseje:

```go
// Fun√ß√£o simples que impre uma mensagem
func saudacao() {
    fmt.Println("Ol√°, Mundo!")
}

func main() {
    saudacao() // Chamando a fun√ß√£o saudacao (primeira vez)
    saudacao() // Chamando a fun√ß√£o saudacao (segunda vez)
    saudacao() // Chamando a fun√ß√£o saudacao (terceira vez)
}
```

## Regras de Nomea√ß√£o para Fun√ß√µes:
- Um nome de fun√ß√£o deve come√ßar com uma letra.
- Um nome de fun√ß√£o pode conter apenas caracteres alfanum√©ricos e sublinhados (A-z, 0-9 e __ );
- Nomes de fun√ß√µes diferenciam mai√∫sculas de min√∫sculas;
- Um nome de fun√ß√£o n√£o pode conter espa√ßos;
- Se o nome da fun√ß√£o consistir em v√°rias palavras, podem ser utilizadas t√©cnicas introduzidas para a nomea√ß√£o de
  vari√°veis com v√°rias palavras.

**Dica**: D√™ √† fun√ß√£o um nome que reflita o que ela faz.

## Par√¢metros e Argumentos:
As informa√ß√µes podem ser passadas para fun√ß√µes como par√¢metro. Os par√¢metros atuam como vari√°veis dentro da fun√ß√£o. Os
par√¢metros e seus tipos s√£o especificados ap√≥s o nome da fun√ß√£o, entre par√™nteses. Voc√™ pode adicionar quantos
par√¢metros quiser, basta separ√°-los com v√≠rgula. Veja a sintaxe:

```go
func nomeDaFuncao (par√¢metro1 tipo, par√¢metro2 tipp, par√¢metro3 tipo) {
    // C√≥digo a ser executado
}
```

No exemplo a seguir, existe a fun√ß√£o _saudacao()_ com o par√¢metro (_nome_) do tipo string. Quando a fun√ß√£o _saudacao()_
√© chamada, tamb√©m passamos um nome (ex: Alice), e o nome √© usado dentro da fun√ß√£o, que gera v√°rios nomes diferentes com
a mesma mensagem ao lado:

```go
// Fun√ß√£o que recebe um par√¢metro e os imprime 2 func saudacao(nome string) {
func saudacao (nome string) {
    fmt.Println("Ol√°,", nome, "como voc√™ est√°?")
}

func main() {
    // Chamando a fun√ß√£o com dois argumentos
    saudacao("Kage")
    saudacao("Gwenhwyfar")
}
```

**Importante**: quando um par√¢metro √© passado para a fun√ß√£o, ele chamado de argumento. No exemplo acima, _nome_ √© um
par√¢metro, enquanto _Kage_ e _Gwenhwyfar_ s√£o argumentos.

## M√∫ltiplos Par√¢metros:
Em Go, voc√™ pode definir fun√ß√µes com m√∫ltiplos par√¢metros para receber diferentes valores durante a chamada da fun√ß√£o.
Aqui est√° um exemplo de uma fun√ß√£o com m√∫ltiplos par√¢metros:

```go
// Fun√ß√£o que recebe dois par√¢metros e os imprime
func saudacao (nome string, idade int) {
    fmt.Println("Ol√°,", nome+"!", "Vi que voc√™ tem", idade, "anos!")
}

func main() {
    // Chamando a fun√ß√£o com dois argumentos
    saudacao ("Kage", 15)
    saudacao ("Gwenhwyfar", 1000)
}
```

**func saudacao(nome string, idade int)**: Aqui, est√° sendo declarada uma fun√ß√£o chamada saudacao. Ela recebe dois
par√¢metros: nome (do tipo string) e idade (do tipo int). A fun√ß√£o imprime uma mensagem de sauda√ß√£o junto com o nome e a
idade.

**saudacao("Kage", 15)**: A primeira chamada da fun√ß√£o saudacao fornece os argumentos "Kage" e 15 para os par√¢metros
nome e idade, respectivamente. A mensagem de sauda√ß√£o ser√° impressa usando esses valores.

**saudacao("Gwenhwyfar", 1000)**: A segunda chamada da fun√ß√£o saudacao fornece os argumentos "Gwenhwyfar" e 1000 para os
par√¢metros nome e idade, respectivamente. Novamente, a mensagem ser√° impressa usando esses valores.

**Importante**: ao trabalhar com v√°rios par√¢metros, a chamada de fun√ß√£o deve ter o mesmo n√∫mero de argumentos que os
par√¢metros, e os argumentos devem ser passados na mesma ordem.

## Retorno de Valores:
Se quiser que a fun√ß√£o retorne um valor, voc√™ precisa definir o tipo de dados do valor de retorno (como int, string,
etc) e tamb√©m usar a palavra-chave return dentro da fun√ß√£o. Veja a sintaxe:

```go
func NomeDaFuncao(par√¢metrol tipo, par√¢metro2 tipo) tipoDeRetorno {
    // C√≥digo a ser executado
    return valorDeRetorno
}
```

Veja um exemplo de fun√ß√£o com retorno:

```go
// Fun√ß√£o que retorna a soma de dois inteiros
func soma (a, b int) int {
    return a + b
}

func main() {
    // Imprimindo o resultado
    fmt.Println("Resultado da soma:", soma (3, 4))
}
```

Neste exemplo, a fun√ß√£o _soma_ recebe dois par√¢metros (_a_ e _b_) e retorna a soma desses dois valores como um inteiro.
A palavra- chave _return_ √© usada para indicar que a fun√ß√£o est√° retornando o valor resultante da express√£o a + b.

Na fun√ß√£o _main_, a fun√ß√£o soma √© chamada dentro da fun√ß√£o _fmt.Println_ com dois argumentos (3 e 4), cujo a soma √©
impressa na tela.

## Retorno de Valores Nomeados:
Em Go, voc√™ tamb√©m pode nomear os valores de retorno de uma fun√ß√£o. Isso √© √∫til quando uma fun√ß√£o retorna m√∫ltiplos
valores e voc√™ deseja tornar o c√≥digo mais leg√≠vel. Aqui est√° um exemplo de valores de retorno nomeados:

```go
func minhaFuncao(a, b int) (resultado int) {
    resultado = a b
    return
}

func main() {
    fmt.Println(minhaFuncao(3, 4))
}
```

Neste exemplo, o valor de retorno foi nomeado como _resultado_ (do tipo int) e o valor √© retornado com um retorno
simples (significa que a instru√ß√£o _return_ foi usada sem especificar o nome da vari√°vel).

O exemplo acima tamb√©m pode ser escrito com a vari√°vel ao lado do return (ex: _return resultado_).

## Retorno de Valores armazenados numa Vari√°vel:
O retorno de valores em Go pode ser armazenado diretamente em vari√°veis nomeadas na declara√ß√£o da fun√ß√£o. Aqui est√° um
exemplo:

```go
func minhaFuncao(a, b int) (resultado int) {
    resultado = a + b
    return
}

func main() {
// Chamando a fun√ß√£o e armazenando o valor de retorno em uma vari√°vel nomeada
somaTotal := minhaFuncao(1, 4)

// Imprimindo o resultado
fmt.Println(somaTotal)
```

A fun√ß√£o _minhaFuncao_ recebe dois par√¢metros (a e b) e retorna a soma desses dois n√∫meros. O valor de retorno √© nomeado
como resultado.

Na fun√ß√£o _main_, a fun√ß√£o _minhaFuncao_ √© chamada com os argumentos (1 e 2), e o resultado √© armazenado na vari√°vel
nomeada _somaTotal_. Em seguida, o valor √© impresso na tela.

## M√∫ltiplos Valores de Retorno:
√â poss√≠vel retornar m√∫ltiplos valores em uma √∫nica fun√ß√£o. Isso √© √∫til em situa√ß√µes em que voc√™ precisa fornecer mais de
um resultado. Aqui est√° um exemplo simples:

```go
// Fun√ß√£o que retorna a soma e o produto de dois inteiros
func calcularSomaEProduto(a, b int) (soma, produto int) {
    soma = a + b
    produto = a * b
    return
}

func main() {
    // Chamando a fun√ß√£o e armazenando os valores de retorno em vari√°veis nomeadas
    resultadoSoma, resultadoProduto := calcularSomaEProduto(3, 4)

    // Imprimindo os resultados
    fmt.Println("Resultado da Soma:", resultadoSoma)
    fmt.Println("Resultado do Produto:", resultadoProduto)
}
```

O que acontece no exemplo acima:
- A fun√ß√£o _calcularSomaEProduto_ recebe dois par√¢metros (_a_ e _b_) e retorna dois valores: a soma e o produto desses dois n√∫meros.
- Na fun√ß√£o _main_, ao chamar a fun√ß√£o, os valores de retorno s√£o armazenados diretamente nas vari√°veis nomeadas
  _resultadoSoma_ e _resultadoProduto_.
- Os valores armazenados s√£o ent√£o impressos na tela.

Se, por algum motivo, n√£o quisermos utilizar alguns dos valores retornados de uma fun√ß√£o, podemos adicionar um
sublinhado ( _ ) para indicar que desejamos omitir esses valores. Essa pr√°tica √© √∫til quando estamos cientes dos valores
de retorno, mas n√£o temos a inten√ß√£o de utiliz√°-los na l√≥gica subsequente do programa.

Quando voc√™ usa o sublinhado ( _ ), est√° indicando ao compilador que voc√™ n√£o tem interesse em armazenar ou utilizar
esse valor de retorno espec√≠fico. Veja um exemplo:

```go
// Fun√ß√£o que retorna a soma e o produto de dois inteiros
func calcularSomaEProduto(a, b int) (soma, produto int) {
    soma = a + b
    produto = a * b
    return
}

func main() {
    // Chamando a fun√ß√£o e utilizando a omiss√£o de valor para ignorar o resultado do produto
    resultadoSoma, _ := calcularSomaEProduto(3, 4)
    // Imprimindo apenas o resultado da soma
    fmt.Println("Resultado da Soma:", resultadoSoma)
}
```

Neste exemplo, o valor de retorno do produto √© ignorado usando (_) no lado esquerdo da atribui√ß√£o. Isso √© √∫til quando voc√™ est√° ciente do valor de retorno, mas n√£o tem inten√ß√£o de us√°-lo na l√≥gica subsequente do programa.

## Fun√ß√µes Recursivas:
Em Go, √© poss√≠vel criar fun√ß√µes recursivas, ou seja, fun√ß√µes que chamam a si mesmas. Aqui est√° um exemplo simples de uma fun√ß√£o recursiva que calcula o fatorial de um n√∫mero:

```go
// Fun√ß√£o recursiva para imprimir n√∫meros de 1 a 5
func contagem(x int) {
    // Caso base: quando x atinge 6, a recurs√£o para
    if x == 6 {
        return
    }

    // Imprimindo o valor de x
    fmt.Println(x)

    // Chamada recursiva: incrementa x e continua a recurs√£o
    contagem(x + 1)
}

func main() {
    // Chamando a fun√ß√£o para iniciar a contagem de 1 a 5
    contagem(1)
}
```

No exemplo a seguir, _contagem()_ √© uma fun√ß√£o que se chama recursivamente (ou seja, chama a si mesma). Utilizamos a vari√°vel _x_ como os dados, os quais incrementam em 1 (_x_ + 1) a cada chamada recursiva. A recurs√£o √© encerrada quando a vari√°vel x √© igual a 6 (x == 6).

A recurs√£o √© um conceito comum em matem√°tica e programa√ß√£o. Isso oferece a vantagem de poder percorrer dados para atingir um resultado.

O desenvolvedor deve ter cuidado ao lidar com fun√ß√µes recursivas, pois √© relativamente f√°cil cair na armadilha de escrever uma fun√ß√£o que nunca termina ou que consome quantidades excessivas de mem√≥ria ou poder de processamento. No entanto, quando escrita corretamente, a recurs√£o pode ser uma abordagem muito eficiente e matematicamente elegante para programar.

Um exemplo de uma fun√ß√£o recursiva que calcula o fatorial:

```go
// Fun√ß√£o recursiva para calcular o fatorial de um n√∫mero
func fatorial(n int) int {
    // Caso base: fatorial de 0 √© 1
    if n == 0 {
        return 1
    }

    // Chamada recursiva: fatorial(n) = n * fatorial(n-1)
    return n * fatorial(n-1)
}

func main() {
    // Chamando a fun√ß√£o para calcular o fatorial de 5
    resultado := fatorial(5)

    // Imprimindo o resultado
    fmt.Println("O fatorial de 5 √©:", resultado)
}
```

A fun√ß√£o fatorial √© definida para calcular o fatorial de um n√∫mero n. A condi√ß√£o _if n == 0_ √© o caso base, que retorna 1 quando n √© igual
a zero.

A chamada recursiva _return n* fatorial(n-1)_ ocorre para valores diferentes de zero, calculando o fatorial de forma recursiva.

# 19. Structs
Em Go, uma _struct_ (estrutura) √© um tipo de dado composto que agrupa diferentes tipos de dados sob um √∫nico nome. Ela √© frequentemente utilizada para modelar conceitos mais complexos, representando uma cole√ß√£o de campos nomeados, onde cada campo pode ter um tipo de dado diferente. As _structs_ em Go s√£o uma forma de organizar e agrupar dados relacionados.

Enquanto _arrays_ s√£o usados para armazenar v√°rios valores do mesmo tipo de dados em uma √∫nica vari√°vel, _structs_ s√£o usadas para armazenar v√°rios valores de diferentes tipos de dados em uma √∫nica vari√°vel. Cada campo dentro de uma _struct_ pode ter um tipo de dado diferente, e os campos s√£o acessados por meio de seus nomes.

A sintaxe b√°sica de uma _struct_ em Go √© a seguinte:

```go
type NomeDaStruct struct {
    Campol Tipol
    Campo2 Tipo2
    // ... Outros campos e tipos (depende da necessidade)
    CampoN TipoN
}
```

_NomeDaStruct_: √â o nome da _struct_.
_Campo1_, _Campo2_, ..., _CampoN_: S√£o os nomes dos campos na _struct_.
_Tipo1_, _Tipo2_, ..., _TipoN_: S√£o os tipos de dados dos respectivos campos.

Aqui est√° um exemplo b√°sico de uma _struct_ em Go:

```go
// Definindo uma struct chamada Pessoa
type Pessoa struct {
    Nome string
    Idade int
    Altura float64
}

func main() {
    // Criando uma inst√¢ncia da struct Pessoa
        pessoa1 := Pessoa{
            Nome: "Gwenhwyfar",
            Idade: 1000,
            Altura: 1.65,
        }
    // Acessando os campos da struct
    fmt.Println("Nome:", pessoal. Nome)
    fmt.Println("Idade:", pessoal. Idade)
    fmt.Println("Altura:", pessoal. Altura)
}
```

Neste exemplo:
_Pessoa_ √© uma _struct_ que possui tr√™s campos: _Nome (string)_, _Idade (int)_, e _Altura (float64)_.

Uma inst√¢ncia da _struct_ √© criada com valores espec√≠ficos para cada campo.

Os campos da _struct_ s√£o acessados usando a nota√ß√£o de ponto (pessoa1.Nome, pessoal.Idade, pessoa1.Altura).

## Passando Struct como Argumento de Fun√ß√£o:
Em Go, voc√™ pode passar uma struct como argumento para uma fun√ß√£o da mesma maneira que faria com qualquer outro tipo de
dado. Aqui est√° um exemplo simples:

```go
// Definindo uma struct chamada Pessoa
type Pessoa struct {
    Nome string
    Idade int
    Altura float64
}

// Fun√ß√£o que recebe uma struct como argumento ]
func imprimirPessoa(p Pessoa) {
    fmt.Println("Nome:", p. Nome)
    fmt.Println("Idade:", p.Idade)
    fmt.Println("Altura:", p. Altura)
}

func main() {
// Criando uma inst√¢ncia da struct Pessoa
    pessoa1 := Pessoa{
        Nome: "Gwenhwyfar",
        Idade: 1000,
        Altura: 1.65,
    }

    // Chamando a fun√ß√£o e passando a struct como argumento
    imprimirPessoa(pessoa1)
}
```

Neste exemplo, a fun√ß√£o _imprimirPessoa_ recebe uma _struct_ do tipo _Pessoa_ como argumento e imprime os valores dos
campos dessa _struct_. Ao chamar a fun√ß√£o, voc√™ passa uma inst√¢ncia da _struct_ como argumento, neste caso, _pessoa1_.

# 20. Maps
Um _map_ em Go √© uma estrutura de dados que facilita a associa√ß√£o de valores a chaves, proporcionando uma implementa√ß√£o
eficiente de tabelas de hash ou dicion√°rios comuns em outras linguagens de programa√ß√£o. Essa estrutura consiste em uma
cole√ß√£o din√¢mica de pares chave-valor, onde cada chave √© √∫nica dentro do _map_ e est√° vinculada a um valor espec√≠fico.

Os maps em Go s√£o din√¢micos, permitindo a adi√ß√£o, remo√ß√£o e atualiza√ß√£o de pares chave-valor durante a execu√ß√£o do
programa. Al√©m disso, os tipos de dados das chaves e dos valores podem variar, proporcionando flexibilidade na
manipula√ß√£o de diferentes tipos de informa√ß√µes.

O acesso aos valores associados a uma chave √© efetuado de forma r√°pida e direta, proporcionando um acesso eficiente aos
dados armazenados. Al√©m disso, √© poss√≠vel verificar a exist√™ncia de uma chave no _map_ utilizando a atribui√ß√£o m√∫ltipla,
como em valor, _chaveExiste := meuMapa["chave"]_.

Em resumo, os maps s√£o uma ferramenta poderosa em Go, oferecendo uma maneira flex√≠vel e eficiente de organizar e
manipular dados associados, sendo particularmente √∫teis em situa√ß√µes onde √© necess√°rio indexar e recuperar valores com
base em chaves √∫nicas.

Veja a sintaxe b√°sica para criar um map, tanto com _var_ quanto com 0 ":=":


```go
// Utilizando a palavra-chave 'var' para declarar e inicializar um map
var a = map[TipoDaChave] TipoDoValor{chavel: value1, chave2: valor2,...}
// Utilizando a declara√ß√£o curta ':=' para declarar e inicializar um map
b := map[TipoDaChave]TipoDoValor{chavel:valor1, chave2:valor2,...}
```

Este exemplo mostra como criar mapas em Go:
```go
func main() {
    var a = map[string]string{"marca": "Fiat", "modelo": "Uno", "ano": "2007"}
    b := map[string]int{"Bahia": 1, "S√£o Paulo": 2, "Amap√°": 3, "Santa Catarina": 4}

    fmt.Printf("a\t%v\n", a)
    fmt.Printf("b\t%v\n", b)
}
```

No _map a_, as chaves s√£o strings representando informa√ß√µes sobre um carro (marca, modelo e ano), e os valores
associados a essas chaves s√£o tamb√©m strings.

No _map b_, as chaves s√£o strings representando estados brasileiros, e os valores associados a essas chaves s√£o inteiros
representando algum tipo de identificador.

As linhas _fmt.Printf_ s√£o utilizadas para imprimir os maps formatados. _%v_ √© um indicador de formato que exibe os
valores de uma forma padr√£o. No contexto do c√≥digo, isso imprimir√° os maps _a_ e _b_ na sa√≠da padr√£o. O uso de tabs (\t)
na _string_ de formato ajuda a alinhar a sa√≠da para melhor legibilidade.

**Importante**: A ordem dos elementos do mapa definidos no c√≥digo √© diferente da forma como s√£o armazenados. Os dados
s√£o armazenados de forma que haja uma recupera√ß√£o eficiente dos dados do mapa.

## Criando Mapas usando a Fun√ß√£o make():
√â poss√≠vel criar mapas com a fun√ß√£o _make()_. Veja a sintaxe:

```go
var a = make (map [TipoDaChave] TipoDoValor)
b := make(map[TipoDaChave] TipoDoValor)
```

Agora, veja um exemplo de um mapa usando a fun√ß√£o _make()_:

```go
func main() {
    // Criando um map vazio de strings para strings
    make (map[string]string) // 0 mapa est√° vazio agora

    // Adicionando valores ao map 'a'
    a["marca"] = "Fiat"
    a["modelo"] = "Uno"
    a["ano"] = "2007"
    // Agora, 'a' n√£o est√° mais vazio

    // Criando um map vazio de strings para inteiros
    b := make(map[string]int)
    b["Bahia"] = 1
    b["S√£o Paulo"] = 2
    b["Amap√°"] = 3
    b["Santa Catarina"] = 4

    // Imprimindo os maps formatados
    fmt.Printf("a\t%v\n", a)
    fmt.Printf("b\t%v\n", b)
}
```

## Criando um Mapa Vazio:
Existem duas maneiras de criar um mapa vazio. Uma √© usando a fun√ß√£o _make()_ e a outra √© usando a seguinte sintaxe:

```go
var a map [KeyType] ValueType
```

**Importante**: A fun√ß√£o _make()_ √© a maneira correta de criar um mapa vazio. Se voc√™ criar um mapa vazio de uma maneira
diferente e escrever nele, isso causar√° p√¢nico no tempo de execu√ß√£o.

Este exemplo mostra a diferen√ßa entre declarar um mapa vazio usando com a fun√ß√£o _make()_ e sem ela:

```go
var a = make(map[string]string)
var b map[string] string

fmt.Println(a == nil) // Retorna false (falso)
fmt.Println(b == nil) // Retorna true (verdadeiro)
```

A palavra-chave _nil_ em Go √© utilizada para representar a aus√™ncia de valor ou a falta de inicializa√ß√£o de um ponteiro,
_slice_, _map_, _channel_, ou _interface_. Neste caso, _nil_ est√° relacionada √† verifica√ß√£o de inicializa√ß√£o dos mapas.
Entenda:

_var a = make(map[string]string)_: o mapa (a) foi criado usando a fun√ß√£o _make_. Mesmo que o mapa esteja vazio, ele √©
inicializado internamente, apontando para uma estrutura de dados adequada. Portanto, a n√£o √© _nil_.

_var b map[string]string_: Neste caso, uma vari√°vel (_b_) do tipo mapa est√° sendo declarada, mas n√£o est√° inicializando.
Isso significa que _b_ √© _nil_ por padr√£o, pois n√£o foi atribu√≠do nenhum valor.

**Tipos de chave permitidos:**
A chave do mapa pode ser de qualquer tipo de dados para o qual o operador de igualdade (==) esteja definido. Esses incluem:
- **Booleanos**;
- **N√∫meros**;
- **Strings**;
- **Arrays**;
- **Ponteiros**;
- **Structs**;
- **Interfaces** (desde que o tipo din√¢mico suporte igualdade).

Os tipos de chave inv√°lidos s√£o:
- **Slices**;
- **Maps**;
- **Functions**.

Esses tipos s√£o inv√°lidos porque o operador de igualdade (==) n√£o est√° definido para eles.

**Importante**: os valores dos mapas podem ser de qualquer tipo.

## Acessar Elementos do Mapa:
Para acessar elementos de um mapa em Go, voc√™ utiliza a chave correspondente ao elemento desejado dentro de colchetes ‚Äú[ ]‚Äù. Veja um exemplo:

```go
func main() {
    var a = make(map[string] string)
    a["marca"] = "Fiat"
    a["modelo"] = "Uno"
    a["ano"] = "2007"

    fmt.Printf(a["marca"]) // Ser√° exibido apenas o nome da marca
}
```

## Atualizar e Adicionar Elementos a um Mapa:
√â poss√≠vel atualizar e adicionar elementos num mapa, veja:

```go
func main() {
    var a = make(map[string] string)
    a["marca"] = "Fiat"
    a["modelo"] = "Uno"
    a["ano"] = "2007"

    fmt.Println(a) // Aqui, o valor de "ano" ser√° mostrado

    a["ano"] = "2013" // Atualizando um elemento
    a["cor"] = "cinza" // Adicionando um elemento

    fmt.Println(a) // Aqui, o valor novo de "ano" ser√° mostrado, e voc√™ pode ver a nova cor que foi adicionada
}
```

## Remover Elementos de um Mapa:
A remo√ß√£o de elementos de um mapa √© feita usando a fun√ß√£o _delete()_. Veja como √© a sintaxe:
```go
delete (nomeDoMapa, chave)
```

Exemplo:

```go
func main() {
    var a = make(map[string] string)
    a["marca"] = "Fiat"
    a["modelo"] = "Uno"
    a["ano"] = "2007"

    fmt.Println(a) // Aqui, o valor antigo de "ano" ser√° mostrado

    delete(a, "modelo") // Removendo um elemento

    fmt.Println(a) // Aqui, o valor novo do "ano" e da "marca" ser√° mostrado
}
```

## Verificando Elementos Espec√≠ficos em um Mapa:
Voc√™ pode verificar se uma determinada chave existe em um mapa usando:
```go
val, val, ok :=NomeDoMapa [ chave]
```

Se voc√™ deseja apenas verificar a exist√™ncia de uma determinada chave, pode usar o identificador em branco (_) no lugar
de val. Veja o exemplo:

```go
func main() {
    var a = map[string]string{"marca": "Fiat", "modelo": "Uno", "ano": "2007", "dia":""}

    vall, ok1 := a["marca"] // Verificando a chave existente e seu valor
    val2, ok2 := a["cor"] // Verificando chave inexistente e seu valor
    val3, ok3 := a["dia"] // Verificando a chave existente e seu valor
    _, ok4 := a["modelo"] // Verificando apenas a chave existente e n√£o o seu valor

    fmt.Println(vall, ok1)
    fmt.Println(val2, ok2)
    fmt.Println(val3, ok3)
    fmt.Println(ok4)
}
```

Neste exemplo, verificamos a exist√™ncia de diferentes chaves no mapa.

A chave "cor" n√£o existe no mapa. Portanto, o valor √© uma _string_ vazia (‚Äú‚Äù).

A vari√°vel _ok2_ √© usada para descobrir se a chave existe ou n√£o. Porque ter√≠amos obtido o mesmo valor se o valor da
chave "_color_" estivesse vazio. Este √© o caso de _val3_.

# Conclus√£o e Agradecimento
Embora essa introdu√ß√£o tenha fornecido uma base s√≥lida para entender o b√°sico da linguagem Go, √© importante destacar que
o universo dessa linguagem √© √© vasto e cheio de recursos interessantes. Esta breve explora√ß√£o √© apenas o ponto de
partida. Incentivo a todos a continuarem aprofundando seus conhecimentos, explorando temas mais avan√ßados e buscando por
mais recursos dispon√≠veis. A jornada no aprendizado de Go √© uma oportunidade para se aprimorar continuamente. H√° sempre
mais para descobrir e aprender, ent√£o n√£o se limitem a este conte√∫do. Explorem, pratiquem e expandam suas habilidades em
Go!

Vale lembrar que n√£o sou o dono da verdade, o conte√∫do aqui pode estar desatualizado, ter maneiras melhores de serem
abordadas e at√© mesmo, possuem metodologias mais s√≥lidas, isso dependente do tempo em que est√° lendo isso. Mas obrigado
pelo apoio e at√© a pr√≥xima!
]]></description>
            <link>https://yagasaki.vercel.app//articles/primeiros-passos-na-linguagem-go</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/primeiros-passos-na-linguagem-go</guid>
            <pubDate>Fri, 16 Aug 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Entenda Programa√ß√£o Orientada a Objetos de Maneira Simplificada (POO)]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/3233/sample_dd8ac0057c4f68ecd35569215ec138566e3f6905.jpg?3360979)

A Programa√ß√£o Orientada a Objetos (POO) √©, na verdade, mais simples do que parece. Se voc√™ ainda n√£o a compreende, √©
poss√≠vel que a explica√ß√£o que voc√™ recebeu tenha sido inadequada.

# Programa√ß√£o Funcional

Vamos come√ßar entendendo o que pode tornar o c√≥digo complexo ao longo do tempo. Imagine que criamos um arquivo
TypeScript contendo uma fun√ß√£o que realiza diversas tarefas.

```typescript
function deveresDeCasa() {
    if (acordar) {
        arrumarCama();
        escovarOsDentes();
        tomarCafeDaManha();
    }

    if (acordado && comido) {
        tomarBanho();
        seArrumar();
        sairParaTrabalhar();
    }
}
```

Esse c√≥digo funciona? Sim. Mas √© o mais recomend√°vel? N√£o. O problema √© que toda a funcionalidade est√° dentro de um
√∫nico escopo. Embora seja relativamente f√°cil de entender inicialmente, com o tempo, o c√≥digo se torna complexo e
dif√≠cil de manter.

Ent√£o, qual seria uma solu√ß√£o para esse problema? A primeira abordagem seria dividir o c√≥digo em fun√ß√µes separadas. Em
vez de usar condi√ß√µes como `if (acordar) {}`, poder√≠amos transformar em fun√ß√µes como `function Acordar() {}`. Dessa
forma, toda a funcionalidade relacionada a acordar, como arrumar a cama, escovar os dentes e tomar caf√© da manh√£,
ficaria contida dentro de `Acordar()`. Isso facilita a manuten√ß√£o do c√≥digo, garantindo que essas a√ß√µes sejam realizadas
apenas no contexto adequado.

No entanto, isso ainda n√£o resolve completamente o problema. Se tivermos uma fun√ß√£o chamada `Rotina`, ela poderia
facilmente se encher de dezenas de outras fun√ß√µes, o que nos levaria de volta ao problema inicial de excesso de
condi√ß√µes e complexidade.

```typescript
// acordar.ts

class Acordar {
    public arrumarCama() {}
    public escovarOsDentes() {}
    public tomarCafeDaManha() {}
}
```

A vantagem dessa abordagem √© que o c√≥digo fica organizado, separado em arquivos distintos, e com o uso restrito a uma
classe espec√≠fica. Isso evita que fun√ß√µes sejam chamadas fora de ordem ou em contextos inadequados.

Podemos ent√£o criar uma inst√¢ncia dessa classe para utilizar as funcionalidades encapsuladas:

```typescript
// index.ts

const periodoDaManha = new Acordar();

periodoDaManha.arrumarCama;
```

Mas ser√° que POO √© s√≥ isso? E quanto a conceitos como heran√ßa, polimorfismo e encapsulamento? Vamos explorar esses
conceitos para ver como eles nos ajudam a escrever um c√≥digo mais limpo e eficiente.

## Heran√ßa
Heran√ßa √© um dos pilares da POO e nos permite estender funcionalidades de uma classe para outra. Por exemplo,
`escovarOsDentes()` n√£o √© algo que fazemos apenas ao acordar; podemos fazer isso ap√≥s o almo√ßo, antes de dormir, etc.

Para evitar repeti√ß√£o de c√≥digo (princ√≠pio **DRY - Don't Repeat Yourself**), podemos criar uma classe gen√©rica para escovar
os dentes e utiliz√°-la em v√°rias outras classes.

```typescript
// common.ts
export class EscovarOsDentes {
    public escovar() {
        console.log('Escovando os dentes');
    }
}
```

No arquivo `acordar.ts`, podemos estender essa funcionalidade:


```typescript
// acordar.ts

import { EscovarOsDentes } from './common';

class Acordar extends EscovarOsDentes {
    public arrumarCama() {}
    public tomarCaf√©DaManha() {}
}
```

Se tivermos uma fun√ß√£o similar para a rotina noturna, poder√≠amos estender a classe `EscovarOsDentes` da mesma forma,
garantindo que o c√≥digo seja reutilizado de maneira eficiente.

```typescript
// index.ts

const periodoDaManha = new Acordar();
const periodoDaNoite = new Dormir();

periodoDaManha.escovar();
periodoDaNoite.escovar();
```

## Polimorfismo e Encapsulamento
Polimorfismo e encapsulamento s√£o conceitos que permitem maior flexibilidade e seguran√ßa no c√≥digo.

O polimorfismo nos permite tratar objetos de diferentes classes de forma unificada, nunca sabemos como um ato de
`fazerSom()` pode vir de maneiras diferentes dependendo do animal.

Enquanto o encapsulamento protege o estado interno dos objetos, expondo apenas o necess√°rio - usando `private` ao inv√©s
da `public` e ficando reservada apenas dentro da classe.

### Polimorfismo
O polimorfismo √© a capacidade de uma fun√ß√£o ou m√©todo agir de forma diferente com base na classe do objeto que a invoca.
Por exemplo, podemos ter diferentes classes derivadas de uma classe base, onde cada uma delas implementa um m√©todo de
forma diferente, mas todas compartilham a mesma interface.

```typescript
class Animal {
    public fazerSom() {
        // M√©todo gen√©rico que ser√° sobrescrito
    }
}

class Cachorro extends Animal {
    public fazerSom() {
        console.log('Latido');
    }
}

class Gato extends Animal {
    public fazerSom() {
        console.log('Miau');
    }
}

const animais: Animal[] = [new Cachorro(), new Gato()];

animais.forEach(animal => animal.fazerSom());
```

No exemplo acima, `fazerSom()` √© polim√≥rfico, pois se comporta de maneira diferente dependendo do tipo do objeto.

Dessa maneira, posso usuar a mesma classe, com resultados diferentes em situa√ß√µes diferentes.

### Encapsulamento
O encapsulamento, por sua vez, envolve esconder a implementa√ß√£o interna de uma classe e expor apenas o necess√°rio para o
uso externo. Isso permite que o c√≥digo seja mais modular e que mudan√ßas internas na classe n√£o afetem o restante do
c√≥digo.

```typescript
class ContaBancaria {
    private saldo: number;

    constructor(saldoInicial: number) {
        this.saldo = saldoInicial;
    }

    public depositar(valor: number) {
        this.saldo += valor;
    }

    public sacar(valor: number) {
        if (valor <= this.saldo) {
            this.saldo -= valor;
        } else {
            console.log('Saldo insuficiente');
        }
    }

    public consultarSaldo() {
        return this.saldo;
    }
}
```

Aqui, `saldo` √© um atributo privado, acess√≠vel apenas dentro da classe `ContaBancaria`. As opera√ß√µes de dep√≥sito e saque
s√£o controladas atrav√©s de m√©todos p√∫blicos, garantindo que o saldo n√£o seja manipulado diretamente de fora da classe.

# Inst√¢ncia na Programa√ß√£o Orientada a Objetos
Uma inst√¢ncia em Programa√ß√£o Orientada a Objetos (POO) refere-se a um objeto espec√≠fico criado a partir de uma classe.
Quando criamos uma classe, estamos definindo um molde ou um modelo para objetos, mas esse molde, por si s√≥, n√£o
representa algo concreto at√© que uma inst√¢ncia seja criada.

Pense em uma classe como o plano de uma casa. Ela descreve como a casa deve ser constru√≠da, quais s√£o os c√¥modos,
quantas janelas tem, etc. Mas o plano, por si s√≥, n√£o √© uma casa real. Para que isso aconte√ßa, precisamos construir uma
casa baseada nesse plano. Essa casa constru√≠da, que √© uma manifesta√ß√£o f√≠sica do plano, √© a inst√¢ncia da classe.

Quando criamos uma inst√¢ncia de uma classe, estamos essencialmente construindo um objeto que segue o modelo daquela
classe, com suas pr√≥prias propriedades e m√©todos. Isso permite que v√°rias inst√¢ncias de uma mesma classe coexistam, cada
uma com suas caracter√≠sticas espec√≠ficas.

Por exemplo, considerando a classe `Acordar` que discutimos anteriormente:

```typescript
// acordar.ts

class Acordar {
    public arrumarCama() {}
    public escovarOsDentes() {}
    public tomarCafeDaManha() {}
}

// index.ts
const PeriodoDaManha = new Acordar();
```

Aqui, `PeriodoDaManha` √© uma inst√¢ncia da classe `Acordar`. Isso significa que podemos chamar os m√©todos dessa
inst√¢ncia, como `PeriodoDaManha.arrumarCama`, e essa chamada ir√° executar o comportamento definido na classe `Acordar`.

# Por que usar Inst√¢ncias?
- **Isolamento de Estado**: Cada inst√¢ncia tem seu pr√≥prio estado. Isso significa que, se alterarmos o estado de uma
  inst√¢ncia, as outras n√£o ser√£o afetadas. Isso √© particularmente √∫til em cen√°rios onde precisamos de m√∫ltiplos objetos
  funcionando de maneira independente, mas baseados na mesma estrutura.

- **Reutiliza√ß√£o de C√≥digo**: Podemos criar v√°rias inst√¢ncias de uma mesma classe sem precisar reescrever o c√≥digo da
  classe. Isso torna o c√≥digo mais modular e reutiliz√°vel.

- **Polimorfismo**: Atrav√©s do polimorfismo, podemos criar inst√¢ncias de diferentes classes que compartilham m√©todos
  comuns, mas que implementam esses m√©todos de maneira diferente. Isso nos permite escrever c√≥digo mais flex√≠vel e
  gen√©rico.

Em resumo, instanciar uma classe √© a maneira como criamos objetos espec√≠ficos baseados em um modelo gen√©rico, permitindo
que nosso c√≥digo seja mais estruturado, modular e flex√≠vel.

Ficou complicado? Vamos simplificar.

Vamos explorar o conceito de inst√¢ncia em Programa√ß√£o Orientada a Objetos usando algumas analogias para tornar o
entendimento mais claro.

# A Classe como uma Receita, a Inst√¢ncia como o Bolo
Imagine que uma classe √© como uma receita de bolo. A receita descreve todos os passos necess√°rios para fazer o bolo: os
ingredientes, as quantidades, o modo de preparo, etc. No entanto, a receita em si n√£o √© um bolo; √© apenas um guia de
como fazer um.

Agora, quando voc√™ segue a receita e realmente faz o bolo, voc√™ tem algo concreto que pode comer. Esse bolo √© a
inst√¢ncia da receita. Voc√™ pode fazer v√°rios bolos usando a mesma receita, e cada bolo ser√° uma inst√¢ncia separada da
mesma classe.

- **Classe**: Receita de Bolo.
- **Inst√¢ncia**: Um bolo espec√≠fico que voc√™ fez seguindo a receita.

Voc√™ precisa aplicar todos os tr√™s? Heran√ßa, Polimorfismo e Encapsulamento? N√£o. Voc√™ s√≥ precisa lhe dar com isso,
quando realmente precisa lhe dar com isso.

Os tr√™s s√£o metodologias que vai se adaptando a sua necessidade, voc√™ pode simplesmente ter uma classe composta apenas
de heran√ßa, assim, como, voc√™ precisa deixar reservado um certo item na classe? Pode-se usar um encapsulamento e assim
vai, ent√£o n√£o se prenda a quando criar uma classe, exigir que se use as tr√™s regras, sendo que uma s√≥ basta. Tudo
depende exclusivamente da sua necessidade.

> Tudo bem Anderson, mas voc√™ n√£o explicou o uso do `constructor` dentro da `ContaBancaria`, fiquei um pouco perdido
> nisso.

Vamos usar a analogia do projeto da casa para entender o conceito de um **constructor** em Programa√ß√£o Orientada a
Objetos, seguido de um exemplo em TypeScript.

## A Classe como Projeto de Casa com Personaliza√ß√£o
Imagine que, al√©m de um projeto b√°sico de casa, voc√™ possa adicionar personaliza√ß√µes, como a cor das paredes e o tipo de
piso. O constructor √© como uma se√ß√£o no projeto onde voc√™ define essas personaliza√ß√µes. Quando voc√™ decide construir uma
casa (criar uma inst√¢ncia), voc√™ pode passar essas prefer√™ncias, e a casa constru√≠da ter√° essas caracter√≠sticas
espec√≠ficas.

- **Classe**: Projeto de uma casa.
- **Constructor**: A parte do projeto onde voc√™ especifica as personaliza√ß√µes (como cor e tipo de piso).
- **Inst√¢ncia**: A casa constru√≠da com as personaliza√ß√µes definidas.

Vamos ver como isso funciona em c√≥digo:

```typescript
// Definindo a classe Casa
class Casa {
    // Propriedades da classe
    cor: string;
    tipoDePiso: string;

    // Constructor para inicializar as propriedades ao criar uma inst√¢ncia
    constructor(cor: string, tipoDePiso: string) {
        this.cor = cor;
        this.tipoDePiso = tipoDePiso;
    }

    // M√©todo para descrever a casa
    descricao() {
        console.log(`Esta casa tem paredes na cor ${this.cor} e piso de ${this.tipoDePiso}.`);
    }
}

// Criando uma inst√¢ncia da classe Casa
const minhaCasa = new Casa('azul', 'madeira');

// Usando o m√©todo para descrever a inst√¢ncia criada
minhaCasa.descricao();
```

### Explica√ß√£o do Exemplo
- **Classe `Casa`**: Define um modelo de casa com duas propriedades: `cor` e `tipoDePiso`.

- **Constructor**: Quando criamos uma nova inst√¢ncia de `Casa` usando `new Casa('azul', 'madeira')`, o constructor √©
chamado. Ele pega os valores passados ('azul' e 'madeira') e os atribui √†s propriedades `cor` e `tipoDePiso` da
inst√¢ncia.

- **Inst√¢ncia `minhaCasa`**: Esta √© a casa espec√≠fica constru√≠da a partir do projeto `Casa`, com paredes azuis e piso de
  madeira.

**M√©todo `descricao`**: Este m√©todo imprime uma descri√ß√£o da casa usando as propriedades da inst√¢ncia. Quando chamamos
minhaCasa.descricao(), a sa√≠da ser√°:

`Esta casa tem paredes na cor azul e piso de madeira.`

O **constructor** em uma classe √© o m√©todo especial que define como uma inst√¢ncia da classe deve ser inicializada. Ele
permite que voc√™ passe valores espec√≠ficos ao criar uma inst√¢ncia, personalizando-a de acordo com suas necessidades,
como escolher a cor das paredes e o tipo de piso na constru√ß√£o de uma casa.

√â isso, espero que tenham gostado. Salve esse artigo para revis√µes futuras, pois eu sei que voc√™ vai precisar voltar
aqui mais tarde (:
]]></description>
            <link>https://yagasaki.vercel.app//articles/entenda-programacao-orientada-a-objetos-de-maneira-simplificada</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/entenda-programacao-orientada-a-objetos-de-maneira-simplificada</guid>
            <pubDate>Tue, 13 Aug 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Uma Coisa Que Nunca Te Explicaram Sobre TypeScript]]></title>
            <description><![CDATA[
![](https://github.com/cat-milk/Anime-Girls-Holding-Programming-Books/blob/master/Typescript/Chito_Saving_Burning_Mastering_Typescript.png?raw=true)

Tenho usado [TypeScript](https://www.typescriptlang.org/) h√° mais de tr√™s anos e, no geral, tem sido uma √≥tima experi√™ncia. Com o tempo, o atrito no uso foi diminuindo at√© chegar a zero, tornando-me muito mais produtivo ao escrever tipos ou mesmo ao abordar problemas com uma perspectiva orientada a tipos. Embora eu esteja longe de ser um verdadeiro mago dos tipos, ouso me considerar proficiente na linguagem, tendo passado por diversas gin√°sticas de tipos, tipos condicionais, gen√©ricos aninhados e contemplando a sagrada diferen√ßa entre `type` e `interface`. Sinceramente, pensei que entendia a linguagem muito bem.

At√© que percebi que n√£o. Veja, h√° uma coisa em particular sobre TypeScript que eu entendi completamente errado, e acredito que voc√™ tamb√©m. E n√£o √© algum caso extremo que voc√™ nunca ouviu falar e provavelmente nunca usar√°. Muito pelo contr√°rio. √â algo com o qual voc√™, e qualquer outro desenvolvedor TypeScript, interagiu diretamente centenas de vezes, algo que esteve bem debaixo do nosso nariz o tempo todo.

**Estou falando sobre o `tsconfig.json`.**

E n√£o, isso n√£o √© sobre como ele pode se tornar complexo (confesso que n√£o consigo explicar `target` e `module` sem pensar um pouco). Em vez disso, √© algo bastante simples. √â sobre o que o `tsconfig.json` _realmente faz_.

"_Bem, √© um arquivo de configura√ß√£o, ele configura o TypeScript, duh._" Certo! Ele faz isso, mas n√£o da maneira que voc√™ esperaria. Deixe-me mostrar para voc√™.

## Bibliotecas, testes e a verdade

H√° um grande exemplo por tr√°s de cada grande descoberta. Vou fazer o meu melhor para que este seja ambos.

Vamos escrever uma aplica√ß√£o frontend simples. E quero dizer realmente simples, sem frameworks, sem depend√™ncias. `Simples`.

```typescript
// src/app.ts
const greetingText = document.createElement('p')
greetingText.innerText = 'Hello, John!'

document.body.appendChild(greetingText)
```

Crie um elemento de par√°grafo e cumprimente o John. Simples. At√© agora, tudo bem.

Mas de onde vem o `document`? Voc√™ pode dizer que √© uma vari√°vel global em JavaScript e, por todos os meios, voc√™ estaria certo. S√≥ tem uma coisa. N√≥s n√£o estamos em JavaScript. Ainda n√£o, de fato. Estamos olhando para algum c√≥digo TypeScript no nosso IDE. Ele teria que ser compilado para se tornar JavaScript, ir para o navegador, e para o navegador expor o `document` globalmente. Ent√£o, como o TypeScript conhece o `document`, sua presen√ßa e seus m√©todos?

O TypeScript faz isso carregando uma biblioteca de _defini√ß√£o padr√£o_ chamada `lib.dom`. Pense nela como um arquivo `.d.ts` contendo v√°rios tipos para descrever os globais do JavaScript, porque √© exatamente isso que ela √©. Voc√™ pode ver isso por si mesmo segurando Ctrl (CMD no Mac) e clicando no objeto `document`. Mist√©rio resolvido.

Como nossa aplica√ß√£o √©, naturalmente, a melhor coisa desde o p√£o fatiado, vamos adicionar alguns testes automatizados para ela. Para este passo, vamos trair nossa no√ß√£o de simplicidade e instalar um framework de testes chamado **Vitest**. Em seguida, escrevemos o pr√≥prio teste:

```typescript
// src/app.test.ts
it('greets John', async () => {
  await import('./app')
  const greetingText = document.querySelector('p')
  expect(greetingText).toHaveText('Hello, John!')
})
```

Quando tentarmos executar este teste, o TypeScript interferiria com um erro:

```typescript
Cannot find name 'it'. Do you need to install type definitions for a test runner?
```

D√≥i admitir, mas o compilador tem raz√£o. De onde `it` viria? N√£o √© um global como `document`, tem que vir de algum lugar. Bem, na verdade, √© bastante comum para os frameworks de teste estenderem o objeto global e exporem fun√ß√µes como `it` e `expect` globalmente para que voc√™ possa acess√°-las em cada teste sem precisar import√°-las explicitamente.

Seguimos uma se√ß√£o convenientemente presente na documenta√ß√£o do nosso framework de testes e habilitamos o `it` global modificando o `tsconfig.json`:

```typescript
// tsconfig.json
{
  "compilerOptions": {
    "types": ["vitest/globals"]
  },
  "include": ["src"]
}
```

Usando `compilerOptions.types`, estamos pedindo ao TypeScript para _carregar tipos adicionais_, neste caso de `vitest/globals`, que declaram a fun√ß√£o global `it`. O compilador sorri para nossos esfor√ßos e deixa o teste passar, fazendo-nos sentir particularmente bem sobre n√≥s mesmos e toda essa quest√£o das linguagens estritamente tipadas.

Mas n√£o. T√£o. R√°pido.

## O Problema

Vamos dar um pequeno passo ao lado, mas prometo que tudo far√° sentido no final.

Deixe-me perguntar: O que acontece se voc√™ referenciar um c√≥digo inexistente no TypeScript? Isso mesmo, uma linha vermelha ondulada e o erro `Cannot find name`, √© o que acontece. Acabamos de ver isso ao tentar chamar `it()` em um teste.

Volte para o m√≥dulo `app.ts` e adicione uma refer√™ncia a uma vari√°vel global inexistente chamada `test`:

```typescript
// src/app.ts
// ...application code.

test
```

N√£o definimos `test`. N√£o √© um global do navegador e certamente n√£o existe em nenhuma das bibliotecas padr√£o do TypeScript. √â um erro, um bug, deveria ficar vermelho.

S√≥ que n√£o fica. Como a linha vermelha ondulada n√£o aparece sob o c√≥digo, um poder percorre voc√™. ~Autoridade~. _Confus√£o_. Para piorar as coisas, n√£o s√≥ o TypeScript n√£o produz um erro aqui, mas ele realmente tenta ser √∫til, sugerindo que voc√™ tipifique `test`, mostrando sua assinatura de chamada e dizendo que vem de algum namespace `TestApi`. Mas isso √© um tipo do **Vitest**, como isso √© poss√≠vel...

Este c√≥digo compilaria? Claro. Funcionaria no navegador? N√£o. Ele lan√ßaria um erro como um arremessador experiente em seu dia mais brilhante. Como pode? N√£o √© o prop√≥sito inteiro de usar TypeScript evitar erros como este?

O `test` aqui √© o que eu chamo de uma _defini√ß√£o fantasma_. √â uma defini√ß√£o de tipo v√°lida que descreve algo que simplesmente n√£o existe. _Mais uma travessura do TypeScript_, voc√™ diria. _N√£o se apresse em culpar a ferramenta_, eu digo. Aqui est√° o que est√° acontecendo.

## (Mais de) uma configura√ß√£o para governar todas
Mova o m√≥dulo de teste `app.test.ts` do diret√≥rio `src` para um novo diret√≥rio chamado `test`. Abra-o. Espere, isso √© um erro de tipo em `it` de novo? N√≥s n√£o consertamos isso j√° adicionando `vitest/globals` ao nosso `tsconfig.json`?

A quest√£o √© que o TypeScript n√£o sabe o que fazer com o diret√≥rio `test`. Na verdade, o TypeScript nem sabe que ele existe, j√° que tudo o que apontamos em `tsconfig.json` √© `src`:

```typescript
// tsconfig.json
{
  "compilerOptions": {
    "types": ["vitest/globals"]
  },
  "include": ["src"]
}
```

Como mencionei antes, a forma como a configura√ß√£o do TypeScript funciona n√£o √© totalmente √≥bvia (pelo menos para mim). Por muito tempo eu pensei que a op√ß√£o `include` representava quais m√≥dulos incluir na compila√ß√£o, e `exclude`, respectivamente, controla quais m√≥dulos excluir. Se consultarmos a [documenta√ß√£o do TypeScript](https://www.typescriptlang.org/tsconfig#include) sobre o assunto, leremos isso:

_`include`, especifica um array de nomes de arquivos ou padr√µes para incluir no programa._

A forma como passei a entender o que `include` faz √© ligeiramente diferente e mais espec√≠fica do que o que est√° declarado na documenta√ß√£o.

> # A op√ß√£o _include_ controla a quais m√≥dulos aplicar esta configura√ß√£o do TypeScript.

Voc√™ leu certo. Se um m√≥dulo TypeScript est√° localizado fora dos diret√≥rios listados na op√ß√£o `include`, aquele `tsconfig.json` _n√£o ter√° efeito nenhum sobre aquele m√≥dulo_. Respectivamente, a op√ß√£o exclude permite filtrar quais padr√µes de arquivo n√£o devem ser afetados pela configura√ß√£o atual.

Ok, ent√£o adicionamos `test` ao `include` e seguimos com nosso dia, qual √© o grande problema?

```typescript
// tsconfig.json
{
  "compilerOptions": {
    "types": ["vitest/globals"]
  },
  "include": ["src", "test"]
}
```

**Onde a maioria dos desenvolvedores erram**. Adicionar novos diret√≥rios ao `include` expande essa configura√ß√£o para afetar _todos eles_. Embora essa mudan√ßa resolva os tipos do framework de teste em `test`, ela vazar√° para todos os m√≥dulos `src`! 

Voc√™ acabou de transformar todo o seu c√≥digo-fonte em uma mans√£o assombrada, liberando centenas de tipos fantasmag√≥ricos. Coisas que n√£o existem ser√£o tipificadas, coisas tipificadas podem entrar em conflito com outras defini√ß√µes, e a experi√™ncia geral com TypeScript se degradar√° drasticamente, especialmente √† medida que sua aplica√ß√£o crescer ao longo do tempo.

Ent√£o, qual √© a solu√ß√£o? Devemos criar v√°rios `tsconfig.json` para cada diret√≥rio? 

Na verdade, sim, voc√™ deve. Mas n√£o para _cada_ diret√≥rio, e sim para cada _ambiente_ onde seu c√≥digo deve ser executado.

## Runtimes e preocupa√ß√µes
Por tr√°s dos bastidores de uma aplica√ß√£o web moderna h√° uma mistura de m√≥dulos. O c√≥digo-fonte imediato da sua aplica√ß√£o deve ser compilado, minificado, dividido em c√≥digos, agrupado e enviado para seus usu√°rios. Existem tamb√©m arquivos de teste, que s√£o m√≥dulos TypeScript tamb√©m, nunca para serem compilados ou enviados para ningu√©m. Pode haver tamb√©m hist√≥rias do Storybook, testes do Playwright, talvez um script customizado `*.ts` ou dois para automatizar coisas‚Äîtodos √∫teis, todos com _inten√ß√µes diferentes_ e destinados a rodar em _ambientes diferentes_.

Mas para que escrevemos nossos m√≥dulos importa. Isso tamb√©m importa para o TypeScript. Por que voc√™ acha que ele fornece o tipo _Document_ por padr√£o? Porque ele sabe que voc√™ provavelmente est√° desenvolvendo uma aplica√ß√£o web. Desenvolvendo um servidor Node.js? Seja gentil e declare essa inten√ß√£o instalando `@types/node`. O compilador n√£o pode adivinhar por voc√™, voc√™ precisa _dizer a ele o que deseja_.

E voc√™ comunica essa inten√ß√£o atrav√©s do `tsconfig.json`. Mas n√£o apenas o de n√≠vel raiz. O TypeScript pode lidar muito bem com configura√ß√µes aninhadas. Porque ele foi projetado para isso. Tudo o que voc√™ precisa fazer √© ser expl√≠cito sobre suas inten√ß√µes.

```typescript
# The root-level configuration to apply TypeScript
# across the entire project. This mostly contains only references.
- tsconfig.json

# The base configuration that all the other configurations
# extend upon. Describe the shared options here.
- tsconfig.base.json

# The source files configuration.
- tsconfig.src.json

# The build configuration.
- tsconfig.build.json

# Configuratin for integration tests.
- tsconfig.test.json

# Configuration for end-to-end tests.
- tsconfig.e2e.test.json
```

Woah, isso √© muita configura√ß√£o! Bem, isso tamb√©m s√£o muitas inten√ß√µes: desde os arquivos-fonte at√© v√°rios n√≠veis de testes at√© a build de produ√ß√£o. Tudo destinado a ser seguro em termos de tipo. E voc√™ os torna seguros usando a propriedade [`references`](https://www.typescriptlang.org/docs/handbook/project-references.html) da configura√ß√£o do TypeScript!

A m√°gica come√ßa no `tsconfig.json` de n√≠vel raiz. Fique tranquilo, _esta √© a √∫nica configura√ß√£o que o TypeScript ir√° captar_. Todas as outras configura√ß√µes se tornam refer√™ncias da configura√ß√£o de n√≠vel raiz, aplicando-se apenas aos arquivos que correspondem ao seu `include`.

Isso √© como um tsconfig.json de n√≠vel raiz se parece:

```typescript
// tsconfig.json
{
  "references": [
    // Source files (e.g. everything under "./src").
    { "path": "./tsconfig.src.json" },
    // Integration tests (e.g. everything under "./tests").
    { "path": "./tsconfig.test.json" },
    // E2E tests (e.g. everything under "./e2e").
    { "path": "./tsconfig.e2e.test.json" }
  ]
}
```

Como voc√™ est√° usando o campo `references`, todas as configura√ß√µes referenciadas devem definir `compilerOptions.composite` como `true`. Aqui est√° um exemplo de `tsconfig.src.json` para os arquivos-fonte:

```typescript
// tsconfig.src.json
{
  // Inherit the reused options.
  "extends": "./tsconfig.json",
  // Apply this configuration only to the files
  // under the "./src" directory.
  "include": ["./src"],
  "compilerOptions": {
    "composite": true,
    "target": "es2015",
    "module": "esnext",
    // Support JSX for React applications.
    "jsx": "react"
  }
}
```

> **Voc√™ usa uma configura√ß√£o separada para os arquivos-fonte e para a build porque configura√ß√µes com `compilerOptions.composite` n√£o podem ser executadas diretamente. Voc√™ aponta o `tsc` para o espec√≠fico `-p tsconfig.build.json` para builds.**

Fica um pouco mais complicado para configura√ß√µes que se cruzam, como aquela para testes de integra√ß√£o, que deve se aplicar apenas aos arquivos em `./tests` enquanto ainda permite importar o c√≥digo-fonte testado. E para isso voc√™ utiliza mais uma vez a propriedade de `references`!

```typescript
// tsconfig.test.json
{
  "extends": "./tsconfig.json",
  "include": ["./tests"],
  "references": [{ "path": "./tsconfig.src.json" }],
  "compilerOptions": {
    "composite": true,
    "target": "esnext",
    "module": "esnext",
    // Include test-specific types.
    "types": ["@types/node", "vitest/globals"]
  }
}
```

### A propriedade references diz ao TypeScript para incluir a configura√ß√£o dada na verifica√ß√£o de tipo, sem permitir que a configura√ß√£o atual afete os arquivos inclu√≠dos.

## include vs references
Ambas as propriedades `include` e `references` envolvem os arquivos "vis√≠veis" para o TypeScript, mas o fazem de maneiras diferentes. Vamos recapitular essa diferen√ßa:

- `include` controla quais arquivos s√£o _afetados_ por esta configura√ß√£o.
- `references` controla quais arquivos s√£o _vis√≠veis_ para esta configura√ß√£o, mas n√£o s√£o afetados por ela.

A configura√ß√£o de teste de integra√ß√£o (`tsconfig.test.json`) ilustra essa diferen√ßa perfeitamente. Voc√™ deseja que essa configura√ß√£o se aplique apenas aos arquivos de teste no diret√≥rio `./tests`, ent√£o √© isso que voc√™ fornece em `include`. Mas voc√™ tamb√©m quer ser capaz de importar o c√≥digo-fonte testado nesses arquivos, o que significa que o TypeScript precisa conhecer esse c√≥digo. Voc√™ _referencia_ a configura√ß√£o dos arquivos-fonte (`tsconfig.src.json`) em `references`, o que expande transitivamente a vis√£o do TypeScript para os arquivos inclu√≠dos l√°, sem afet√°-los pela configura√ß√£o dos testes de integra√ß√£o.

## A parte pr√°tica
Para melhor ou pior, estamos nos movendo para uma era onde as ferramentas de desenvolvimento s√£o abstra√≠das de n√≥s. √â justo esperar que seu framework de escolha lide com essa selva de configura√ß√µes para voc√™. Na verdade, alguns frameworks j√° fazem isso. Tome o [Vite](https://github.com/vitejs/vite/tree/1c031723a821d654e9aed44e43a0a5fa47c240da/packages/create-vite/template-react-ts) como exemplo. Estou bastante confiante de que voc√™ pode encontrar uma configura√ß√£o multi-configura√ß√£o para TypeScript em praticamente qualquer outro projeto.

Mas eu quero que voc√™ entenda que o TypeScript ainda √© sua ferramenta, abstra√≠da ou n√£o, e voc√™ faria bem em aprender mais sobre ela, entend√™-la melhor e us√°-la corretamente.]]></description>
            <link>https://yagasaki.vercel.app//articles/uma-coisa-que-nunca-te-explicaram-sobre-typescript</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/uma-coisa-que-nunca-te-explicaram-sobre-typescript</guid>
            <pubDate>Tue, 06 Aug 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como usar o Redis para contar acessos em p√°ginas est√°ticas]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/4619/sample_50a876f6c9a277321d808b921c060b94862be53d.jpg?4921012)

Recentemente me deparei com o seguinte cen√°rio no [Onigiri Hardcore](https://onigirihardcore.com.br/). Como posso mostrar para patrocinadores
ou at√© mesmo para gest√£o de evento que o portal de not√≠cias √© um poss√≠vel sucesso e que posso me cadastrar
como imprensa ou algo do tipo? Sem depender de Analytics, sem depender de servi√ßos prontos.

Para quem n√£o sabe, o **Onigiri Hardcore** √© um portal de not√≠cias e j√° participou de diversos eventos em Campinas como
imprensa, fazendo cobertura sobre o evento e tudo mais. S√≥ que evolu√≠mos de l√° para c√° e come√ßamos a nos tornar independentes.

E como a gente faz essa m√©trica?

Existem diversas solu√ß√µes para fazermos isso, como o **Onigiri Hardcore** utiliza de markdown - assim como esse blog - 
para criar as not√≠cias, n√£o temos um banco de dados. Ent√£o n√£o faria sentido criar um banco s√≥ para isso. Mas,
caso tivesse, era s√≥ criar uma collection ou referenciar e fazer o mesmo esquema, mas ao inv√©s de ser uma
publica√ß√£o, s√≥ adicionaria +1 no banco utilizando um campo de visualiza√ß√µes ou algo do tipo.

Podemos utilizar do Github API para fazermos altera√ß√µes no README, sempre que algu√©m acessar a p√°gina.

Podemos utilizar de outras APIs ou at√© mesmo APIs pr√≥prias para isso.

E uma das alternativas que me chegou √©, utilize o Redis.

Eu j√° trabalhei com ele anteriormente em um projeto da Rocketseat, assim como j√° vi v√°rios exemplos
utilizando ele para fazer estilo de contador sem ficar sobrecarregando banco de dados e coisas do tipo, e eu
pensei. Porque n√£o?

## Como usar o Redis para contar acessos em p√°ginas est√°ticas

Inicialmente, se voc√™ n√£o tiver um projeto em Next.js, crie um novo.

```bash
npx create-next-app@latest visit-counter
cd visit-counter
```

Por exemplo. 

Instale o Redis nele e instale tamb√©m - de forma global - a CLI do Redis - no caso, estou usando Ubuntu,
ent√£o verifique a [documenta√ß√£o oficial](https://redis.io/docs/latest/get-started/) para entender como funciona a instala√ß√£o no seu dispositivo.

```bash
npm install redis
```

```bash
sudo apt update
sudo apt install redis-server
sudo systemctl enable redis-server.service
sudo systemctl start redis-server.service
```

CLI instalada, Next configurado, vamos come√ßar. Antes, de tudo, voc√™ tamb√©m pode utilizar o [Redis Insight](https://redis.io/insight/)
para conseguir visualizar atrav√©s de uma interface gr√°fica, o seu banco de dados.

Caso voc√™ n√£o queira, voc√™ pode utilizar o Redis CLI, e executar o seguinte comando:

```bash
redis-cli
```

E em seguida para visualizar as informa√ß√µes em nosso cen√°rio

```bash
get totalVisits
hgetall monthlyVisits
```

Vamos criar a conex√£o com o Redis em `src/lib/redis.js`

```javascript
import { createClient } from 'redis';

const client = createClient({
  url: process.env.REDIS_URL || 'redis://localhost:6379'
});

client.on('error', (err) => {
  console.error('Redis client not connected to the server:', err);
});

client.on('connect', () => {
  console.log('Redis client connected to the server');
});

client.connect();

export default client;
```

Depois, vamos criar uma Rota de API para registrar as visitas em `pages/api/visit.js`

```javascript
import client from '../../src/lib/redis';

export default async function handler(req, res) {
    if (req.method === 'POST') {
        try {
            // Garantir que o cliente est√° conectado
            if (!client.isOpen) {
                await client.connect();
            }

            const now = new Date();
            const yearMonth = `${now.getFullYear()}-${now.getMonth() + 1}`;

            await client.incr('totalVisits');
            await client.hIncrBy('monthlyVisits', yearMonth, 1);

            console.log('Visit recorded');
            res.status(200).json({ message: 'Visit recorded' });
        } catch (error) {
            console.error('Error recording visit', error);
            res.status(500).json({ message: 'Internal Server Error' });
        }
    } else {
        res.setHeader('Allow', ['POST']);
        res.status(405).end(`Method ${req.method} Not Allowed`);
    }
}

```

E em seguida, vamos criar a rota para obter as contagens de visitas em `pages/api/visits.js`

```javascript
import redisClient from '../../src/lib/redis';

export default async function handler(req, res) {
    if (req.method === 'GET') {
        const totalVisits = await redisClient.get('totalVisits');
        const monthlyVisits = await redisClient.hGetAll('monthlyVisits');

        res.status(200).json({ totalVisits, monthlyVisits });
    } else {
        res.setHeader('Allow', ['GET']);
        res.status(405).end(`Method ${req.method} Not Allowed`);
    }
}

```

E ap√≥s isso, registrar as visitas em `pages/_app.js` para isso rodar independente da p√°gina
que for acessada.

```javascript
import React, { useEffect } from 'react';
import '../styles/globals.css'

// eslint-disable-next-line react/prop-types
function MyApp({ Component, pageProps }) {

    useEffect(() => {
        fetch('/api/visit', {
            method: 'POST',
        });
    }, []);

    return (
        <>
            <Component {...pageProps} />
        </>
    )
}

export default MyApp
```

Bacana, n√£o √© mesmo? Dessa maneira, conseguimos ter as seguintes informa√ß√µes, por enquanto.

- Total de visitas realizadas naquele m√™s
- Total de visitas realizadas separadas por m√™s.

Claro que existe alguns problemas ainda e otimiza√ß√µes a serem feitas, mas essa √© apenas a ponta
do iceberg para voc√™ ter no√ß√£o do que √© o Redis e sua funncionalidade.

Que tipos de situa√ß√µes temos que adicionar ainda? Por exemplo, a cada F5, a atualiza√ß√£o sobe
e eu n√£o gostaria que isso acontecesse, pois o usu√°rio pode simplesmente ficar
apertando F5 v√°rias e v√°rias vezes para ganhar visualiza√ß√£o e isso n√£o √© o ideal.

Assim como tamb√©m queremos filtrar qual √© a p√°gina em que o usu√°rio est√° acessando, seria bacana, n√£o √© mesmo?
Saber que em determinada p√°gina tem X acessos e na outra Y e assim por diante. S√£o algumas costumiza√ß√µes
a serem feitas.

## E como fa√ßo para rodar esse projeto?

Inicialmente, suba o projeto na [Vercel](https://vercel.com/) com a sua conta cadastrada e configure
seu ambiente de desenvolvimento para receber as vari√°veis de ambiente como:

```bash
REDIS_URL=redis://your_redis_cloud_url
```

Em seguida, crie uma conta no [Redis Cloud](https://app.redislabs.com/#/) e configura sua nova inst√¢ncia gratuita para conseguir ter
acesso e registro no banco em que cadastramos. Pegue a `URL` da inst√¢ncia e grave no seu `.env.local` dentro do `REDIS_URL`.

Essas adapta√ß√µes ainda ir√£o ser alterada para o cen√°rio do **Onigiri Hardcore**, aonde voc√™ pode estar acompanhando atrav√©s
do [reposit√≥rio oficial do Github](https://github.com/Yagasaki7K/website-onigirihardcore). Caso queira ajudar, fique √† vontade para criar uma pull request e mandar
sua altera√ß√£o/sugest√£o.

Se tiver com alguma d√∫vida ou dificuldade, n√£o hesite em me chamar no [X/Twitter](https://twitter.com/yagasaki7k).

Obrigado por ler at√© aqui!]]></description>
            <link>https://yagasaki.vercel.app//articles/como-usar-redis-para-contar-acessos</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/como-usar-redis-para-contar-acessos</guid>
            <pubDate>Wed, 29 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Aprenda a instalar e usar o Obsidian no WSL]]></title>
            <description><![CDATA[
![](https://github.com/Yagasaki7K/website-onigirihardcore/assets/23272064/3e27e6ac-55bf-4d31-8f49-1d2f7e84b64b)

Esse artigo pode at√© ser bem semelhante ao Docker, pois realmente, tive dificuldade com o Obsidian no WSL.

Vamos entender realmente qual √© a utilidade e o problema que enfrentamos.

Imagine que voc√™ apenas codifica no WSL, certo? O Git, o Node, os seus arquivos est√£o todos l√°. Toda a core, de
seu desenvolvimento est√° no WSL, mas como voc√™ faria para usar o Obsidian?

Inicialmente, quando voc√™ tenta usar a vers√£o do Windows e tenta acessar os arquivos do WSL, mesmo que seja em
markdown, ele d√° problema de compatibilidade. Na √©poca, uns cinco meses atr√°s ap√≥s esse artigo ser escrito,
eu tentei de outra maneira, instalar o Obsidian como se fosse uma vers√£o do Ubuntu e tentar acessar mesmo assim,
o problema? Tinha que deixar o terminal aberto e a interface estava muito ruim de se usar.

Eis que surge a solu√ß√£o no forum oficial da Obsidian.

Deixo aqui os mesmos cr√©ditos que o autor do forum informou. Agradecimento ao [Maztuto do Discord](https://discord.com/channels/686053708261228577/694233507500916796/1154197889506082826).
E com isso, o WSL2 agora permite utilizar o Linux GUI Apps de forma nativa usando o X11 e Wayland - 
esse era o real problema na √©poca que havia mencionado. A incompatibilidade era tenta, que abandonei e fiquei usando
o estilo do Obsidian no pr√≥prio VS Code.

Mas vamos ao que interessa.

## Como instalar o Obsidian no WSL?

Primeiramente voc√™ tem que estar com a vers√£o do Ubuntu instalada no WSL, de prefer√™ncia a Ubuntu 22.04.3 LTS.

Instale o pacote do `obsidian.deb` atrav√©s desse comando:

```bash
# Remember to update the URL for the latest version on https://obsidian.md/download.
wget https://github.com/obsidianmd/obsidian-releases/releases/download/v1.4.13/obsidian_1.4.13_amd64.deb
sudo apt-get install -y ./obsidian_1.4.13_amd64.deb
```

Ap√≥s instalado, confirme que ele realmente existe. Ele estar√° no seguinte diret√≥rio:
`C:\Users\<USERNAME>\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Ubuntu`, voc√™ pode simplesmente
abrir ele atrav√©s desse icone e usar ele como bem entender - no meu caso, j√° deixei at√© na barra de tarefas.

Existem alguns problemas que podem surgir, no meu caso n√£o aconteceu, mas vai que ...

Caso aconte√ßa algum problema, inicialmente reinicie o WSL para entrar as atualiza√ß√µes dando `wsl --shutdown`

Se ainda tiver algum problema com o Obsidian de n√£o conseguir carregar adequadamente, voc√™ pode rodar
o comando abaixo para rodar algumas depend√™ncias restantes.

```bash
sudo apt-get update
sudo apt-get install -y libgbm1 libasound2
```

E pronto!

## Maneiras de rodar o Obsidian

Como mencionei anteriormente, voc√™ pode acessar a pasta do Ubuntu aonde est√° o icone, criar um atalho dele e sair
usando aonde bem entender - ou at√© mesmo pedir para aquele atalho estar na barra de tarefas ou menu iniciar.

Ou, voc√™ pode simplesmente abrir seu WSL e diretamente pelo Terminal, voc√™ pode rodar `obsidian` ou `/opt/Obsidian/obsidian`
que ele ir√° executar o Obsidian para voc√™. O √∫nico problema de voc√™ utilizar esse m√©todo direto pelo terminal, √© que
voc√™ precisa reservar uma aba s√≥ para essa execu√ß√£o. Se voc√™ fechar a aba, o aplicativo fechar√° junto.

Diferente da vers√£o direta do Windows que n√£o depende de um terminal rodando para executar a aplica√ß√£o.

E a√≠? Gostou? Se tiver d√∫vidas, n√£o hesite em me chamar l√° no [X/Twitter](https://twitter.com/Yagasaki7K), e caso 
tenha alguma dificuldade em outro aplicativo ou quer algum outro artigo tamb√©m ensinando algo, pode me chamar 
que a gente conversa a respeito!]]></description>
            <link>https://yagasaki.vercel.app//articles/instalando-obsidian-no-wsl</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/instalando-obsidian-no-wsl</guid>
            <pubDate>Thu, 23 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Aprenda a instalar e usar o Docker no WSL de uma vez]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/4180/sample_1748929975d7bd94cf16fc9c29c9bfb8adcc2fc9.jpg?4366213)

Algum tempo atr√°s estava com dificuldade para realmente entender como instalar o Docker pelo WSL. Ser√°
que era instalando o pacote de depend√™ncias? Ser√° que era fazendo o download do aplicativo e usando
apenas no lado do Windows? 

Eis que surge a solu√ß√£o.

Este guia passo a passo ajudar√° voc√™ a come√ßar a desenvolver com cont√™ineres remotos configurando o Docker Desktop para
Windows com o WSL 2 (Subsistema do Windows para Linux, vers√£o 2).

O Docker √© uma ferramenta usada para criar, implantar e executar aplicativos usando cont√™ineres. Os cont√™ineres permitem
que os desenvolvedores empacotem um aplicativo com todas as partes necess√°rias (bibliotecas, estruturas, depend√™ncias
etc.) e enviem tudo isso como um pacote. O uso de um cont√™iner garante que o aplicativo seja executado da mesma forma,
independentemente de configura√ß√µes personalizadas ou das bibliotecas instaladas anteriormente no computador que o
executa, que poderiam ser diferentes do computador usado para escrever e testar o c√≥digo do aplicativo. Isso permite que
os desenvolvedores se concentrem em escrever c√≥digo sem se preocupar com o sistema no qual o c√≥digo ser√° executado.

## Instalando o Docker Desktop

O primeiro passo que temos que seguir √©, instalar o Docker Desktop no lado do Windows, j√° que ele ser√° respons√°vel por
fazer ser o core dos projetos, o motivo de n√£o conseguirmos isso do lado do WSL diretamente, como era uma das
primeiras abordagens que eu tentei, √© que o WSL √© restrito de muitas coisas por baixo dos panos e inviabiliza
o acesso do Docker como bem entende.

Ent√£o, baixe o [Docker Desktop](https://docs.docker.com/docker-for-windows/wsl/#download) e siga as instru√ß√µes de
instala√ß√£o. Lembre-se de que voc√™ deve ter o Windows Subsystem Linux (WSL) instalado, antes de come√ßar a fazer essa
configura√ß√£o.

Depois de instalado, inicie o Docker Desktop no menu Iniciar do Windows e selecione o √≠cone do Docker no menu √≠cones ocultos da barra de tarefas. Clique com o bot√£o direito do mouse no √≠cone para exibir o menu de comandos do Docker e selecione ‚ÄúConfigura√ß√µes‚Äù.

![](https://learn.microsoft.com/pt-br/windows/wsl/media/docker-starting.png)

Verifique se ‚ÄúUsar o mecanismo baseado em WSL 2‚Äù est√° marcado em **Configura√ß√µes > Gerais**.

![](https://learn.microsoft.com/pt-br/windows/wsl/media/docker-running.png)

Selecione entre as distribui√ß√µes do WSL 2 instaladas nas quais voc√™ deseja habilitar a integra√ß√£o do Docker acessando: **Configura√ß√µes > Recursos > Integra√ß√£o do WSL**.

![](https://learn.microsoft.com/pt-br/windows/wsl/media/docker-dashboard.png)

Para confirmar se o Docker foi instalado, abra uma distribui√ß√£o do WSL, seja pelo Terminal do Windows ou at√© mesmo pelo
Terminal do Visual Studio, escolhemos, por exemplo o Ubuntu, e exiba a vers√£o e o n√∫mero do build inserindo: `docker --version`

Teste se a instala√ß√£o funciona corretamente executando uma imagem interna simples do Docker usando: `docker run hello-world`

E vo√≠l√†! Se estiver funcionando, ent√£o estamos no passo que queriamos e conseguimos instalar o Docker no WSL.

Qualquer d√∫vida que tiver, pesquise pelo erro que aparecer e tente entender o que est√° acontecendo, qualquer coisa,
use como base a [documenta√ß√£o original](https://learn.microsoft.com/pt-br/windows/wsl/tutorials/wsl-containers) para
entender qual etapa voc√™ pode ter errado e como entender outras abstra√ß√µes.

Qualquer d√∫vida tamb√©m, n√£o hesite em me chamar no [Twitter/X](https://twitter.com/Yagasaki7K).

Obrigado por ler at√© aqui!]]></description>
            <link>https://yagasaki.vercel.app//articles/instalando-docker-no-wsl</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/instalando-docker-no-wsl</guid>
            <pubDate>Wed, 22 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[NextJS vs React ‚Äì Uma compara√ß√£o para o Frontend]]></title>
            <description><![CDATA[
![image](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/f31cb781-4722-4597-91e7-da8db6bf9f40)

No cen√°rio em r√°pida evolu√ß√£o do desenvolvimento Frontend, escolher a tecnologia certa √© crucial para construir
aplica√ß√µes web robustas e eficientes. Dois frameworks populares que ganharam muita tra√ß√£o nos √∫ltimos anos s√£o Next.js e
React. Ambos os frameworks s√£o desenvolvidos e mantidos pelo Facebook, com o React sendo a biblioteca fundamental para
construir interfaces de usu√°rio e o Next.js como um framework constru√≠do sobre o React, oferecendo recursos adicionais
para renderiza√ß√£o do lado do servidor, roteamento, e mais.

## Introdu√ß√£o: Revelando a Batalha dos Tit√£s

Neste post do blog, mergulhamos profundamente nos reinos do Next.js e React, explorando suas for√ßas, fraquezas e casos
de uso para ajud√°-lo a tomar uma decis√£o informada sobre qual escolher para seus projetos de desenvolvimento Frontend em
2024. Vamos embarcar nesta jornada de descoberta e desvendar os mist√©rios por tr√°s desses poderosos frameworks.

## Se√ß√£o 1: A Ascens√£o do Next.js ‚Äì Empoderando o Desenvolvimento Web Moderno

**T√≠tulo: Next.js: A Solu√ß√£o Completa para o Desenvolvimento frontend**

O Next.js emergiu como uma escolha popular entre os desenvolvedores por sua facilidade de uso, otimiza√ß√£o de desempenho
e integra√ß√£o perfeita com o React. Com recursos como renderiza√ß√£o do lado do servidor, gera√ß√£o de sites est√°ticos e
rotas de API, o Next.js oferece uma solu√ß√£o abrangente para construir aplica√ß√µes web modernas que s√£o r√°pidas,
escal√°veis e amig√°veis para SEO. Vamos explorar alguns exemplos de como o Next.js simplifica o desenvolvimento frontend:

- **Renderiza√ß√£o do Lado do Servidor:** Ao pr√©-renderizar p√°ginas no servidor, o Next.js permite carregamentos de p√°gina
  mais r√°pidos e melhor desempenho de SEO. Por exemplo, um site de e-commerce constru√≠do com Next.js pode se beneficiar
  da renderiza√ß√£o do lado do servidor para exibir listagens de produtos e detalhes de forma eficiente.
- **Gera√ß√£o de Sites Est√°ticos:** O Next.js permite que os desenvolvedores gerem arquivos HTML est√°ticos para melhor
  desempenho e cacheamento. Por exemplo, um site de blog constru√≠do com Next.js pode utilizar a gera√ß√£o de sites
  est√°ticos para servir conte√∫do pr√©-renderizado aos usu√°rios, melhorando a experi√™ncia geral de navega√ß√£o.
- **Rotas de API:** Com o Next.js, os desenvolvedores podem criar endpoints de API personalizados para buscar e
  atualizar dados, simplificando a integra√ß√£o com o backend. Por exemplo, uma plataforma de m√≠dia social constru√≠da com
  Next.js pode usar rotas de API para gerenciar autentica√ß√£o de usu√°rios, cria√ß√£o de posts e outros recursos
  interativos.

## Se√ß√£o 2: O Legado do React ‚Äì Pioneirismo no Desenvolvimento Frontend

**T√≠tulo: React: A Base do Desenvolvimento de UI Moderno**

O React tem sido um divisor de √°guas no mundo do desenvolvimento Frontend, revolucionando a maneira como os
desenvolvedores constroem interfaces de usu√°rio interativas com sua arquitetura baseada em componentes e renderiza√ß√£o do
DOM virtual. Como a biblioteca principal que alimenta o Next.js, o React continua sendo uma escolha popular para
construir aplica√ß√µes web din√¢micas e responsivas. Vamos explorar alguns exemplos da versatilidade e poder do React:

- **Arquitetura Baseada em Componentes:** A abordagem baseada em componentes do React permite que os desenvolvedores
  criem elementos de UI reutiliz√°veis que podem ser facilmente compostos para construir interfaces complexas. Por
  exemplo, uma aplica√ß√£o de dashboard constru√≠da com React pode ter componentes modulares para exibir gr√°ficos, tabelas
  e widgets.
- **Renderiza√ß√£o do DOM Virtual:** O DOM virtual do React atualiza e re-renderiza componentes de forma eficiente com
  base em mudan√ßas de dados, garantindo desempenho e responsividade √≥timos. Por exemplo, uma plataforma de e-learning
  constru√≠da com React pode renderizar dinamicamente materiais de curso e quizzes sem recarregar toda a p√°gina.
- **Gerenciamento de Estado:** O React fornece ferramentas como Context API e Redux para gerenciar o estado da aplica√ß√£o
  e o fluxo de dados, permitindo que os desenvolvedores construam aplica√ß√µes escal√°veis e f√°ceis de manter. Por exemplo,
  um aplicativo de produtividade constru√≠do com React pode usar Redux para gerenciar prefer√™ncias do usu√°rio, tarefas e
  notifica√ß√µes.

## Se√ß√£o 3: Fazendo a Escolha Certa ‚Äì Next.js vs React em 2024

**T√≠tulo: Escolhendo a Ferramenta Certa para o Trabalho**

√Ä medida que navegamos no cen√°rio em constante mudan√ßa do desenvolvimento frontend em 2024, a decis√£o entre Next.js e
React se resume aos requisitos e objetivos espec√≠ficos do seu projeto. Enquanto o Next.js oferece uma solu√ß√£o abrangente
para construir aplica√ß√µes full-stack com capacidades de renderiza√ß√£o do lado do servidor e roteamento, o React continua
sendo uma escolha poderosa para construir interfaces de usu√°rio interativas com sua arquitetura baseada em componentes e
ferramentas de gerenciamento de estado.

Em conclus√£o, a escolha entre Next.js e React depende de fatores como a complexidade do projeto, requisitos de
desempenho e expertise do desenvolvedor. Ao entender as for√ßas e fraquezas de cada framework, voc√™ pode tomar uma
decis√£o informada que esteja alinhada com os objetivos do seu projeto e vis√£o para o desenvolvimento frontend em 2024.

## Conclus√£o: Navegando pela Fronteira do frontend com Next.js e React

No din√¢mico mundo do desenvolvimento Frontend, Next.js e React se destacam como ferramentas formid√°veis para construir
aplica√ß√µes web modernas que s√£o r√°pidas, escal√°veis e amig√°veis ao usu√°rio. Ao aproveitar o poder do Next.js para
renderiza√ß√£o do lado do servidor e roteamento ou utilizar a arquitetura baseada em componentes e capacidades de
gerenciamento de estado do React, os desenvolvedores podem criar experi√™ncias de usu√°rio imersivas e envolventes que
ressoam com as audi√™ncias em 2024 e al√©m.

√Ä medida que continuamos a expandir os limites da inova√ß√£o e criatividade no desenvolvimento frontend, a escolha entre
Next.js e React permanece uma decis√£o pivotal que molda o futuro do desenvolvimento web. Ao se manter informado,
explorar novas possibilidades e abra√ßar as for√ßas de cada framework, os desenvolvedores podem tra√ßar um caminho rumo ao
sucesso e excel√™ncia no cen√°rio em constante evolu√ß√£o da tecnologia frontend.

## Refer√™ncias:
- [Documenta√ß√£o do Next.js](https://nextjs.org/docs)
- [Documenta√ß√£o do React](https://reactjs.org/docs)]]></description>
            <link>https://yagasaki.vercel.app//articles/next-vs-react-uma-comparacao-para-o-frontend</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/next-vs-react-uma-comparacao-para-o-frontend</guid>
            <pubDate>Tue, 21 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como atualizar seu README do Github com as √∫ltimas publica√ß√µes de Blog ou Dev.to]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/3476/sample_194dcdd9525a9333cf8fee32ef0d96540f99ff51.jpg?3615216)

Essa era uma quest√£o muito engra√ßada que eu tinha nesse blog. Imagina que toda vez que eu fazia um
artigo novo, eu era obrigado, a publicar manualmente no Twitter, Linkedin, e ainda atualizar
no README pessoal do Github, chega at√© dar canseira n√©?

Mas as coisas foram evoluindo. O motivo? Encontrei um projeto em que transforma um README em
um [tabuleiro de xadrez], mas o que √© de t√£o divertido nele? A gente cita comandos no
tabuleiro nas issues do projeto, o Github Actions entende isso, e atualiza e depois gira
a mesa para que o outro lado jogue.

Bacana, n√£o √©? Gra√ßas a isso. Porque n√£o atualizar o meu README pessoal, toda vez
que tiver uma publica√ß√£o nova, n√£o faz mais sentido? Ai, eu s√≥ fico focado em
atualizar no Twitter/X e no Linkedin, certo?

√â ai que surgiu essa proposta maravilhosa, claro que eu vim correndo dar a not√≠cia
para voc√™s e tem muita coisa ainda que precisa melhorar.

# Transforme seus artigos em RSS.

Se voc√™ estiver usando um blog que voc√™ mesmo criou, seja next com template de blog usando
markdown, seja Docusaurus ou qualquer outro m√©todo que n√£o seja um CDN (Dev.to ou Medium),
pegue todo o seus artigos e transforme em RSS.

Nesse caso, se voc√™ estiver usando Dev.To ou Medium, v√° para o [pr√≥ximo t√≥pico](#github-actions)

**Como vamos fazer isso?**

Vou utilizar do exemplo que estamos utilizando Next, ent√£o tente ver a melhor maneira de voc√™
abordar isso com a tecnologia em que voc√™ est√° usando - tenha brio.

Vamos explicar o c√≥digo que eu fiz, passo a passo.

Primeiro eu fiz as importa√ß√µes necess√°rias, e estou utilizando Typescript.
Lembrando que estou usando a gera√ß√£o de API do Next, que fica dentro de `api/hello.ts`, por exemplo.

```ts
import { Feed } from "feed";
import fs from 'fs';
import path from 'path';
import matter from 'gray-matter';
import calculateReadingTime from "@/utils/calculateReadingTime";
import { Frontmatter, PostProps } from "..";
```

Vamos l√°, o que √© o mais importante aqui? √â o `feed`, j√° que ele √© o respons√°vel por transformar os nossos artigos em `.xml`.
O comando `fs` e `path` √© do bun/node para pegar os arquivos `.mdx`, `matter` √© uma ferramenta para markdown, `calculateReadingTime`
√© uma fun√ß√£o que eu escrevi para calcular quanto tempo de leitura tem um artigo e `Frontmatter` e `PostProps` s√£o types do
Typescript.

Depois disso, precisamos setar a configura√ß√£o do cabe√ßalho, qual ser√° o t√≠tulo desse XML, por exemplo:

```ts
const feed = new Feed({
    title: "yagasaki.dev/Blog",
    description: "I enjoy turning solutions into code. I'm a tech enthusiast and love staying up to date with all the latest cutting-edge features.",
    id: "http://yagasaki.dev/",
    link: "http://yagasaki.dev/",
    language: "pt-br",
    image: "https://github.com/Yagasaki7K.png",
    favicon: "https://github.com/Yagasaki7K.png",
    copyright: "¬© 2014 - 2024 Anderson \"Yagasaki\" Marlon",
    updated: new Date(), // optional, default = today
    generator: "Feed", // optional, default = 'Feed for Node.js'
    feedLinks: {
        json: "https://yagasaki.dev/api/rss",
    },
    author: {
        name: "Anderson Marlon",
        email: "anderson18.marlon@gmail.com",
        link: "https://yagasaki.dev"
    }
});
```

Criamos feed, escolhemos nosso t√≠tulo, informamos a descri√ß√£o, o id, o link para o site original, a linguagem dos artigos, a imagem
de apresenta√ß√£o do XML se necess√°rio junto com o favicon, o copyright, quando que aquilo vai ser atualizado, ent√£o ele sempre vai
pegar a data de hoje, o tipo de gerador, o link e o autor. Correto?

Agora vamos gerar o m√©todo para que ao acessar o site e o endere√ßo que estamos procurando, que no caso de nosso arquivo, ser√°
algo como `localhost:3000/api/rss`.

```ts

export default async function handler(req: any, res: any){
    if (req.method === 'GET') {
        const posts = getPosts();
        const rss = await generateRSS(posts);
        res.setHeader('Content-Type', 'text/xml');
        res.status(200).send(rss);
    } else {
        res.setHeader('Allow', ['GET']);
        res.status(405).end(`Method ${req.method} Not Allowed`);
        res.status(500).send('Internal Server Error');
    }
}
```
Informamos o handler de `req` e `res` como `any`, por pregui√ßa mesmo, mas como √© muita coisa inclusa, voc√™
pode estar pesquisando a melhor maneira de fazer isso, j√° que estamos passando duas props que s√£o de requisi√ß√£o e resposta
do servidor.

Perguntamos que se for um m√©todo get, ele vai pegar as publica√ß√µes, todas elas, e vai passar para o RSS, essas fun√ß√µes estar√£o logo abaixo.
N√£o se preocupe agora, depois disso, ele vai devolver um `text/xml` e retornar `200`. Certo?

Se estiver errado, ele vai pegar qual erro que √© e vai mandar a mensagem.

# Como pegamos todos os artigos?

No caso do meu site, n√£o vou explicar muito, mas deixarei o c√≥digo ai para voc√™ tentar entender, j√°
que cada um tem uma maneira de fazer. No caso, estou indo na pasta `articles`, pegando os arquivos e
configurando eles por ordem de data e depois setando todo mundo como deve ser.

```ts

function getPosts(): PostProps[] {
    const files = fs.readdirSync(path.join('article'));

    return files.map((filename) => {
        let slug = filename.replace('.mdx', '');

        const markdownWithMeta = fs.readFileSync(
            path.join('article', filename),
            'utf-8'
        )

        const { data: frontmatter, content: markdownContent } = matter(markdownWithMeta)
        const readingTime = calculateReadingTime(markdownContent);

        // Ensure frontmatter object includes all required properties
        const formattedFrontmatter: Frontmatter = {
            slug, // Ensure slug is included
            title: frontmatter.title || '', // Include title
            image: frontmatter.image || '', // Include image
            authors: frontmatter.authors || [], // Include authors
            tags: frontmatter.tags || [], // Include tags
            date: frontmatter.date || '', // Include date
            excerpt: frontmatter.excerpt || '', // Include excerpt
        };

        return {
            slug,
            frontmatter: formattedFrontmatter,
            readingTime,
            date: frontmatter.date, // Include the date property
            content: markdownContent, // Include the content property
        };
    });
}

```

Agora chegamos a um ponto importante. Porque lembra que configuramos o cabe√ßalho do nosso XML? Agora √© necess√°rio
passar a configura√ß√£o de todas as publica√ß√µes para dentro deles, ou seja, dentro do cabe√ßalho, teremos v√°rios itens
e √© esses itens que ser√£o as publica√ß√µes, ent√£o fiz da seguinte maneira.

```ts

async function generateRSS(posts: PostProps[]): Promise<string> {
    const rssItems: PostProps[] = [];

    posts.forEach((post) => {
        feed.addItem({
            title: post.frontmatter.title,
            id: post.slug,
            link: `https://yagasaki.dev/article/${post.slug}`,
            description: post.frontmatter.excerpt,
            date: new Date(post.frontmatter.date),
            author: [
                {
                    name: 'Anderson "Yagasaki" Marlon',
                },
            ],
            contributor: [
                {
                    name: 'Anderson "Yagasaki" Marlon',
                },
            ],
        });

        // Assuming PostProps has similar structure to what is being added to the feed
        rssItems.push({
            slug: post.slug,
            frontmatter: post.frontmatter,
            readingTime: post.readingTime,
            date: post.frontmatter.date,
            content: '', // or whatever content field should be
        });
    });

    return feed.rss2();
}
```

E pronto. O que acontece √© que ao acessar `localhost:3000/api/rss`, ele ir√° me dar um text/xml em tela com todas
as informa√ß√µes corretinhas. S√≥ que atualmente, usando esse c√≥digo, s√≥ consigo ver em modo de desenvolvimento essa tela,
n√£o sei o que anda pegando - como estou fazendo esse artigo na correria - ainda estou analisando o porqu√™ da Vercel,
n√£o conseguir encontrar os artigos em `articles`.

Ent√£o, o que estou fazendo atualmente? Estou gerando manualmente um arquivo chamado `article.xml` na raiz do projeto,
usando as configura√ß√µes que s√£o mostradas no `/api/rss` e informando no Github Actions.

# Github Actions

Agora a parte interessante, a automatiza√ß√£o de tudo.

A primeira coisa que voc√™ deve fazer no seu README.md √© colocar a seguinte coisa.

```md
### üìï Latest Blog Posts
<!-- BLOG-POST-LIST:START -->
<!-- BLOG-POST-LIST:END -->
```

A vari√°vel `BLOG-POST-LIST:START` ser√° respons√°vel por come√ßar a lista, enquanto a vari√°vel `BLOG-POST-LIST:END`,
ser√° respons√°vel por finalizar essa listagem, usando como base, o RSS que a gente criou.

Beleza, entendido? Pode salvar seu README.md e vamos ao que interessa.

Crie uma pasta nesse projeto que est√° o README.md que se chamar√° `.github/workflows` e dentro dele, teremos o arquivo
`update-blog-posts.yaml`, esse ser√° o c√≥digo respons√°vel para fazer a automa√ß√£o.

Vamos lembrar do seguinte. Se voc√™ estiver usando dev.to, informe o seu perfil que o dev.to ir√° gerar o RSS automaticamente
para voc√™, enquanto, se voc√™ for de blog pessoal, voc√™ deve informar o local em que est√° o arquivo `xml` que a gente gerou.

Como no caso, ainda estou na gambiarra - prometo que vou arrumar isso -, estou apontando diretamente o arquivo no meu projeto do Github.

Caso queira saber depois como arrumei, √© s√≥ acompanhar os updates no [yagasaki7k/website-yagasaki](https://github.com/Yagasaki7K/website-yagasaki)

```yaml
name: Latest blog post workflow
on:
  schedule: # Run workflow automatically
    - cron: '0 * * * *' # Runs every hour, on the hour
  workflow_dispatch: # Run workflow manually (without waiting for the cron to be called), through the GitHub Actions Workflow page directly
permissions:
  contents: write # To write the generated contents to the readme

jobs:
  update-readme-with-blog:
    name: Update this repo's README with latest blog posts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Pull in dev.to posts
        uses: gautamkrishnar/blog-post-workflow@v1
        with:
          feed_list: "https://dev.to/feed/yagasaki7k" ## Change here to URL xml or your feed of dev.to
```

Voc√™ s√≥ precisa alterar o `feed_list` e nada mais. A n√£o ser que queira que ele fique verificando em mais tempo,
√© s√≥ mudar a regra do `cron` e ser feliz.

Ap√≥s colocado isso, e salvo, voc√™ dever√° liberar as configura√ß√µes necess√°rias do Action no projeto, localizada em `Settings/Actions`.

![image](https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fnv472sk8a660ba0vvpy8.png)

Depois disso, se voc√™ quiser que o `cron` fa√ßa o trabalho, √© s√≥ aguardar. Sen√£o, voc√™ pode pedir para gerar o `workflow` manualmente,
ao clicar em `Latest blog post workflow` e `Run workflow`

![image](https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F1d925sm78467m19e7hrj.png)

E voil√†, seu README estar√° sempre atualizado com base nas suas publica√ß√µes, seja no seu site pessoal ou seja em seu dev.to.

Curtiu? Compartilhe esse artigo com seus amigos e qualquer d√∫vida ou dificuldade, voc√™ pode estar me chamando l√° no [Twitter/X](https://twitter.com/Yagasaki7K) e eu estarei a disposi√ß√£o para te ajudar!]]></description>
            <link>https://yagasaki.vercel.app//articles/atualizando-readme-com-ultimos-posts</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/atualizando-readme-com-ultimos-posts</guid>
            <pubDate>Thu, 16 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Fazendo deploy da sua aplica√ß√£o Web na Vercel]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/4619/sample_b16ccc4de990c18b34f3463d4ecdc9d2beb54fed.jpg?4914251)

Implementar ou fazer deploy de  uma aplica√ß√£o web na Vercel √© bastante simples, ainda mais se tratando de frameworks
como o React, ou Next.js, j√° que ali na pr√≥pria Vercel, ele consegue identificar qual √© o framework da sua aplica√ß√£o
e seguir a risca seu `package.json` para subir a aplica√ß√£o para voc√™. Aqui est√° um guia sobre como fazer isso:

## Passo 1: Fa√ßa Login na sua Conta Vercel
Visite o site da [Vercel](https://vercel.com) e fa√ßa login na sua conta usando suas credenciais.

![image](https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fuj3u4eu2ut0shynbimns.png)

## Passo 2: Crie um Novo Projeto
Assim que estiver conectado, voc√™ ser√° direcionado para o painel da Vercel. Clique no bot√£o "Adicionar Novo" localizado no canto superior direito do painel.

![image](https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fnml3xnk36c7hog3btn5t.png)

## Passo 3: Escolha seu Projeto
Clique no "Projeto" para ser direcionado a Importar Reposit√≥rio do seu GitHub. Lembre-se de que o projeto deve estar conclu√≠do para a Vercel poder
identificar e fazer as configura√ß√µes corretas. Caso n√£o esteja, suba um commit no seu reposit√≥rio com a aplica√ß√£o funcionando.

![image](https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F3edtoo7by0n2csmkr46k.png)

## Passo 4: Escolha seu Projeto
Clique no bot√£o "Importar" para Configurar seu projeto.

![image](https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fz9ml2ysde7uc6gkg58ib.png)

## Passo 5: Configure as Configura√ß√µes do seu Projeto
Depois de selecionar seu reposit√≥rio, voc√™ precisar√° configurar as configura√ß√µes do seu projeto. Isso inclui selecionar o branch que deseja implantar, especificar o comando de build (se necess√°rio) e fornecer quaisquer vari√°veis de ambiente necess√°rias para sua aplica√ß√£o - se estiver dispon√≠vel, caso
ao contr√°rio, pode deixar em branco que ele far√° a configura√ß√£o padronizada.

![image](https://media.dev.to/cdn-cgi/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fmhzzfx379q9cjumrc6eo.png)

## Passo 6: Implante/Deploy seu Projeto
Ap√≥s configurar as configura√ß√µes do seu projeto, clique no bot√£o "Deploy". A Vercel come√ßar√° a implantar sua aplica√ß√£o web.

## Passo 7: Monitore o Progresso do Deploy
Voc√™ ser√° redirecionado para o painel de implanta√ß√£o, onde pode monitorar o progresso da sua implanta√ß√£o. A Vercel ir√° automaticamente construir e implantar sua aplica√ß√£o. Fique atento a qualquer erro, porque atrav√©s desse log que veremos se algo deu errado, se voc√™ tem dificuldade com o ingl√™s, voc√™ pode simplesmente, copiar o erro e pedir para o ChatGPT traduzir para voc√™ ou o Google Tradutor.

Uma boa pr√°tica de projeto, √© dar um `npm run build` ou `yarn build` antes de subir qualquer commit, assim, voc√™ consegue verificar o erro de build antes
de a Vercel precisar identificar isso. 

## Passo 8: Acesse sua Aplica√ß√£o Web Implantada
Assim que a implanta√ß√£o/deploy estiver completo, a Vercel fornecer√° a voc√™ um URL √∫nico onde sua aplica√ß√£o web est√° hospedada. Voc√™ pode acessar seu aplicativo implantado clicando neste URL.

Voc√™ pode configurar outros nomes dispon√≠veis dentro da hospedagem de `vercel.app` ou simplesmente configurar um DNS para que os usu√°rios acessem
`seuprojeto.com.br`, por exemplo.

E um lance muito interessante quando se usa um DNS personalizado - caso voc√™ queira entender mais sobre, acesse [registro.br](https://registro.br/)
e adquira seu dominio - √© que voc√™ pode simplesmente configurar para que quando o usu√°rio acessar seu dominio vercel, ele possa ser redirecionado
automaticamente para o .com.br ou vice-versa.

A vantagem de se ter um dominio pr√≥prio √© ter subdominios, como `blog.seuprojeto.com.br` ou at√© mesmo `forum.seuprojeto.com.br` e ainda assim,
cada projeto desse ser separado por reposit√≥rios diferentes, como foi o caso em que fiz com o [stream.yagasaki.dev](https://stream.yagasaki.dev) e
[yagasaki.dev](https://yagasaki.dev). Que s√£o duas aplica√ß√µes totalmente diferentes uma da outra, sendo yagasaki.dev desenvolvido em Next, enquanto
stream.yagasaki.dev ser desenvolvido usando Vite/React.

Gostou do artigo? Compartilhe com outros colegas e caso precise de alguma ajuda ou tiver alguma sugest√£o, voc√™ pode me
chamar na [Kalify Community](https://discord.gg/jhSepmE7nN) ou atrav√©s do [Twitter/X](https://twitter.com/Yagasaki7K).]]></description>
            <link>https://yagasaki.vercel.app//articles/fazendo-deploy-na-vercel</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/fazendo-deploy-na-vercel</guid>
            <pubDate>Tue, 14 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[An√°lise do Arc Browser, meu substituto do Chrome]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/4619/sample_d3e96e81f2591af055bb8f9c5312d2d0d1d5c991.jpg?4859150)

Lan√ßado dia 30 de Abril, Arc √© um dos navegadores mais esperados da atualidade, desenvolvido na base do Chromium, modelo
open source do Chrome da Google, o Arc traz um design minimalista, um navegador mais leve, com muitas funcionalidades
que o Chrome possui, como hibernar aba, extens√µes do Chrome - j√° que √© o mesmo modelo, e algumas outras features, vale a
pena conferir.

## Mas qual √© a vantagem de migrar do Chrome para o Arc?

Consto que isso √© uma opini√£o e muita gente pode discordar, achar que √© minimalista demais, n√£o soluciona os problemas
que est√° acostumado, enfim, gosto √© gosto. Ent√£o deixo os meus pontos principais para voc√™ mudar imediatamente de
navegador, e experimentar o Arc. Vale lembrar que est√° apenas dispon√≠vel para MacOS e Windows 11.

## Sem distra√ß√µes
Ele possui um design realmente interessante, al√©m de ter uma barra vertical para utilizar da navega√ß√£o de abas, assim
como o Vivaldi possui, ele atrai um design bem simples e nada poluente, al√©m de contar tamb√©m com um sistema de hover,
ao passar o mouse no canto - caso a Toggle Sidebar esteja ativa - ele simplesmente ir√° mostrar as abas abertas, sem voc√™
ter que deixar aquilo preso em sua tela, o que realmente √© algo muito bom de se utilizar, menos distra√ß√µes, mais foco na
navega√ß√£o.

![image](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/bfed0d22-cce6-4901-ad5a-5879dbc36d3d)

## Spaces
Imagine que voc√™ tem uma configura√ß√£o especifica para seu navegador da empresa, outro para jogos e outro para o pessoal,
o Arc deixa voc√™ unificar as Spaces na mesma janela, diferente do Chrome que simula uma outra sess√£o, jogando voc√™ para
uma janela separada, o Arc deixa voc√™ organizar de modo individual, como o Chrome faz, ou simplesmente, unificar todas
as abas por categorias na mesma janela, √© simplesmente incr√≠vel.

![image](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/6121879f-be22-4a49-9776-f06f79636c84)

## Aba Arquivada
√â poss√≠vel configurar que a aba fique arquivada depois de um determinado per√≠odo de tempo, assim, voc√™ n√£o perde ela
depois que se esquecer, e ela vai ficar guardadinha para voc√™ revisar depois. A vantagem disso, √© que voc√™ n√£o perde
tempo tentando organizar trezentas abas em seu navegador, ainda mais que voc√™ n√£o se recorda quando abriu, qual.

Claro, lembramos tamb√©m que o Arc possui um sistema de hibernar a aba depois de um per√≠odo, e assim como o Chrome, a aba
s√≥ √© restaurada ap√≥s voc√™ tentar acessar ela novamente. O que gera uma grande econ√¥mia do uso de mem√≥ria.

## Picture-in-Picture nativo
Imagine que voc√™ est√° no Youtube, Twitter ou at√© mesmo assistindo sua s√©rie favorita e algu√©m te chama no Whatsapp ou
at√© mesmo voc√™ se distra√≠ por um momento e quer ver aquele produto na Shopee em outra aba que acabou de lembrar, o
interessante do Arc √© que ao estar vendo um v√≠deo, seja no Youtube, ou qualquer outra aba e ele estiver ATIVO. Ao trocar
de tela, ele j√° joga em Picture-in-Picture para voc√™ n√£o perder nenhum momento.

![image](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/76bd01b3-b569-48ae-bf7e-b6b0b6ad80ce)

Ah, mas n√£o sei o que significa PinP - sei l√° se esse termo existe - ele simplesmente ir√° abrir uma janelinha - n√£o
chega a ser outra aba do navegador - para voc√™, do conte√∫do que voc√™ est√° assistindo e assim, voc√™ n√£o perde nenhum
momento.

No exemplo da imagem acima, estamos vendo o v√≠deo no Youtube (janela da direita) - enquanto estamos navegando no
Twitter, isso √© Picture in Picture.

Ah, mas isso j√° existe no Firefox e em outros navegadores. Sim, mas considerei a praticidade, a leveza nessa feature da
maneira que foi incrementada que √© surpreendente aos meus olhos, voc√™ n√£o sente delay, voc√™ n√£o sente travamento algum,
pode redimensionar da maneira que quiser, pode clicar no centro para voltar para aba e o v√≠deo n√£o √© pausado, voc√™ pode
optar por pausar ali mesmo e focar na sua tarefa, s√£o alguns dos fatores que eu vi referente aos outros navegadores.
Posso estar errado? Pode ser, mas, vou de Arc.

## Split View
Imagine que voc√™ √© um desenvolvedor, assim como eu, voc√™ precisa ver o resultado da sua aplica√ß√£o enquanto est√° codando
e ao mesmo tempo tem que ver a documenta√ß√£o, √© realmente complicado e como consciliar tudo tendo apenas um, dois
monitores? O ideal seria como? Ter tr√™s nesse caso e acompanhar tudo rapidamente. Mas eis que surge o Split View.
Acredito que essa fun√ß√£o nem exista no Chrome - o que √© poss√≠vel √© voc√™ fazer Split View pelo Windows com janelas
diferentes e n√£o com abas.

![image](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/aea53c4f-972b-40a1-9edd-4e1a6b36db26)

Assim, voc√™ consegue ver o resultado do seu projeto, acompanhar a documenta√ß√£o e ter o foco em absolutamente em tudo,
sem distra√ß√µes, sem perda de tempo. No m√°ximo ali, um alt+tab para ir para o seu editor de c√≥digo. Vale a pena aderir.

Mas ... O que aconteceria se eu precisasse clicar em outro link da documenta√ß√£o e eu n√£o quisesse sair da aba que eu
estava?

Claro, se tratando de documenta√ß√£o, n√£o queremos perder nada e √†s vezes √© apenas uma revis√£o de conte√∫do ou algo do
tipo, certo? E BOOOOM! Preview mode - n√£o sei se √© realmente esse o nome da feature - mas voc√™ √© capaz de abrir um
artigo, um novo link do navegador, sem sair dali, voc√™ pode revisar tudo por cima e simplesmente fechar e seguir em
frente.

![image](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/0bccc76b-f90d-4bf4-8e9c-fe7ce19c1434)

Sem distra√ß√µes, sem perda de tempo. 

Putz, essa aba √© importante para n√≥s? S√≥ deixar ela em tela cheia e ela se torna uma aba. D√° para acreditar? Preciso
dela no Split View? √â s√≥ clicar no terceiro bot√£o - com o icone do Split View - e bom, ele se torna uma terceira janela
para n√≥s.

## Promessa de Privacidade
Segundo o Arc: "Arc is built from the ground up to be private and secure. We don‚Äôt know what sites you visit or what you
search for."

O que quer dizer? O Arc foi constru√≠do desde o in√≠cio para ser privado e seguro. N√£o sabemos quais sites voc√™ visita ou
o que voc√™ pesquisa.

E quais os coment√°rios da comunidade referente a isso?

![image](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/d45144ca-155d-4841-b2ef-54c7e2bf2b23)

Est√£o literalmente deixando Chrome de lado e indo para o Arc.

Olha, √© realmente incr√≠vel o poder de foco, poucas configura√ß√µes, sincroniza√ß√£o em tudo, f√°cil importa√ß√£o de outros
navegadores, √© incr√≠vel, tanto poder, t√£o r√°pido e com qualidade. Acho que isso √© o que eu gosto de fazer, √© isso que eu
gosto de sentir e esse navegador realmente me deixou estasiado e fazia muito tempo que eu n√£o sentia isso.

Recomendo muito trocar para o Arc e experimentar tudo antes de sair jogando pedra ou falando que √© apenas mais um
navegador qualquer, acredito que muitas novidades est√£o por vir, eles n√£o v√£o apenas parar por ai, e claro, esse
navegador vai deixar muita gente no chinelo.

Quer um comparativo legal? Foram mais de 192.884 pessoas usando o Arc como Beta. E segundo oo @joshm, CEO do Arc. Ele
disse que ap√≥s o lan√ßamento do Windows 11, o Arc teve mais contas criadas no Windows 11 do que quando saiu para MacOS.

T√° esperando o que? [Vem de Arc!](https://arc.net/)

Quer conversar sobre isso comigo? Me procura l√° no [Twitter](https://twitter.com/Yagasaki7K), faz um tweet, me chama,
vamos trocar experi√™ncias, novidades e ideias em cima desse navegador que est√° retomando meu brilho nos olhos.]]></description>
            <link>https://yagasaki.vercel.app//articles/analisando-arc-browser</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/analisando-arc-browser</guid>
            <pubDate>Thu, 09 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[TypeScript - Types vs. Interfaces e qual usar escolher no pr√≥ximo projeto?]]></title>
            <description><![CDATA[
![](https://github.com/cat-milk/Anime-Girls-Holding-Programming-Books/blob/master/Typescript/Chito_Saving_Burning_Mastering_Typescript.png?raw=true "Nye Evans")

O TypeScript √© uma linguagem de programa√ß√£o popular que adiciona anota√ß√µes de tipo ao JavaScript. Ele fornece recursos como interfaces e tipos que ajudam os desenvolvedores a escrever c√≥digo mais robusto e f√°cil de manter. No TypeScript, tanto os types quanto as interfaces s√£o usados para definir a estrutura dos dados. Embora sejam semelhantes em funcionalidade, eles t√™m algumas diferen√ßas que os desenvolvedores devem estar cientes ao escolher qual usar.

## O que √© um Type no TypeScript?
Um type no TypeScript √© uma maneira de definir a forma dos dados. Ele √© usado para descrever os tipos de vari√°veis, par√¢metros de fun√ß√£o e valores de retorno de fun√ß√£o. Os tipos s√£o declarados usando a palavra-chave `type` seguida por um nome e uma defini√ß√£o. Aqui est√° um exemplo:

```typescript
type Pessoa = {
  name: string;
  age: number;
  address: string;
};
```

Neste exemplo, definimos um tipo `Pessoa` que tem tr√™s propriedades: `name`, `age` e `address`. A propriedade nome √© uma `string`, a propriedade `age` √© um `n√∫mero` e a propriedade `address` √© uma string.

## O que √© uma Interface no TypeScript?
Uma interface no TypeScript √© outra maneira de definir a forma dos dados. Ela √© usada para descrever os tipos de objetos, classes e fun√ß√µes. As interfaces s√£o declaradas usando a palavra-chave `interface` seguida por um nome e uma defini√ß√£o. Aqui est√° um exemplo:

```typescript
interface IPessoa {
  name: string;
  age: number;
  address: string;
}
```

Neste exemplo, definimos uma interface `IPessoa` que tem as mesmas tr√™s propriedades que o tipo `Pessoa`. A sintaxe √© um pouco diferente, mas a funcionalidade √© a mesma.

## Diferen√ßas entre Types e Interfaces
A principal diferen√ßa entre tipos e interfaces √© como elas s√£o usadas. Os tipos s√£o usados para criar novos nomes para tipos existentes, enquanto as interfaces s√£o usadas para definir a estrutura de objetos, classes e fun√ß√µes. Aqui est√£o algumas outras diferen√ßas:

- Os alias de type podem ser usados para criar tipos de uni√£o ou tipos de interse√ß√£o, enquanto as interfaces n√£o podem.
- Os types podem ser usados para definir tuplas, enquanto as interfaces n√£o podem.
- Os types podem ser usados para definir tipos de fun√ß√£o, enquanto as interfaces n√£o podem.
- As interfaces podem estender outras interfaces, enquanto os types n√£o podem.

## Qual Deve Ser Usado?
Em geral, os types s√£o mais √∫teis para definir tipos de dados simples como strings, n√∫meros e booleans. As interfaces s√£o mais √∫teis para definir tipos de dados complexos como objetos, classes e fun√ß√µes. No entanto, a escolha entre tipos e interfaces depende do seu caso de uso espec√≠fico e prefer√™ncia pessoal.

## Conclus√£o
Types e interfaces s√£o recursos importantes no TypeScript. Eles fornecem aos desenvolvedores a capacidade de definir a estrutura de dados em seus programas. Embora sejam semelhantes em funcionalidade, eles t√™m algumas diferen√ßas que devem ser consideradas ao escolher qual usar. Em geral, os types s√£o melhores para tipos de dados simples, enquanto as interfaces s√£o melhores para tipos de dados complexos.]]></description>
            <link>https://yagasaki.vercel.app//articles/typescript-types-e-interfaces-e-qual-usar</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/typescript-types-e-interfaces-e-qual-usar</guid>
            <pubDate>Tue, 07 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[O que √© Lazy Loading e para que serve?]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/4460/sample_2d86143e93b6368902f88bb4ea80cd69a8f67906.jpg?4651402)

Lazy loading √© uma t√©cnica de otimiza√ß√£o de desempenho usada para adiar o carregamento de recursos n√£o essenciais, como imagens e conte√∫do, at√© que sejam necess√°rios. Isso pode ajudar a melhorar significativamente os tempos de carregamento da p√°gina e a experi√™ncia do usu√°rio, especialmente em sites com muito conte√∫do visual.

Sabe quem usa? Twitter, Instagram, Facebook utilizam do lazy loading para dar aquele sentimento de que o feeding ou imagem est√° carregando. Dessa maneira,
al√©m de deixar o browser carregar as imagens por √∫ltimo, ele tamb√©m te deixa com a sensa√ß√£o de que algo est√° acontecendo e ele est√° trabalhando, 
ao inv√©s de simplesmente esperar aparecer tudo na sua tela de uma vez.

## Por que usar Lazy Loading?
Ao adiar o carregamento de imagens e outros recursos at√© que sejam necess√°rios, podemos reduzir a quantidade de dados que o navegador precisa baixar inicialmente. Isso √© particularmente √∫til em sites com muitas imagens ou conte√∫do abaixo da dobra, onde o usu√°rio pode n√£o rolar imediatamente para ver todo o conte√∫do.

## Implementa√ß√£o com JavaScript Puro
Em JavaScript puro, podemos implementar lazy loading de imagens monitorando a posi√ß√£o do elemento na janela de visualiza√ß√£o (viewport) e carregando a imagem apenas quando ela estiver pr√≥xima o suficiente para ser vis√≠vel.

```javascript
document.addEventListener("DOMContentLoaded", function() {
  const lazyImages = document.querySelectorAll("img.lazy");

  const lazyLoad = function() {
    lazyImages.forEach(image => {
      if (image.getBoundingClientRect().top < window.innerHeight && !image.src) {
        image.src = image.dataset.src;
      }
    });
  };

  document.addEventListener("scroll", lazyLoad);
  window.addEventListener("resize", lazyLoad);
  window.addEventListener("orientationchange", lazyLoad);

  lazyLoad();
});
```

## Implementa√ß√£o com Next.js
Em aplica√ß√µes Next.js, o lazy loading de imagens e conte√∫do √© suportado de forma nativa por meio do componente `Image` fornecido pela biblioteca `next/image`. Ele otimiza automaticamente o carregamento de imagens, fornecendo carregamento sob demanda, redimensionamento e otimiza√ß√£o de formato de imagem.

```javascript
import Image from 'next/image';

function MyComponent() {
  return (
    <div>
      {/* Imagem carregada sob demanda */}
      <Image
        src="/path/to/image.jpg"
        alt="Descri√ß√£o da imagem"
        width={400}
        height={300}
      />
    </div>
  );
}

export default MyComponent;
```

## Conclus√£o
Lazy loading de imagens e conte√∫do √© uma pr√°tica essencial para otimizar o desempenho das p√°ginas da web, reduzindo o tempo de carregamento inicial e melhorando a experi√™ncia do usu√°rio. Com JavaScript puro, podemos implementar lazy loading manualmente monitorando a posi√ß√£o dos elementos na viewport. Em frameworks modernos como Next.js, essa funcionalidade √© fornecida nativamente, facilitando a implementa√ß√£o e melhorando ainda mais o desempenho da aplica√ß√£o.]]></description>
            <link>https://yagasaki.vercel.app//articles/o-que-e-lazy-loading</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/o-que-e-lazy-loading</guid>
            <pubDate>Sat, 04 May 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Playbook do Desenvolvimento Profissional Internacional]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/3759/sample_1648090fe01da9a9ae581c862a966595dddeb548.jpg?3926859)

Esse √© um artigo que foi retirado do Notion original do Alekson Fortes, como o intuito √© ajudar o pr√≥ximo - assim como ele - estou compartilhando,
o mesmo artigo - ao inv√©s do Notion pelo meu blog - N√£o sou o autor do playbook e todos os direitos s√£o reservados ao Alekson Fortes, como o 
conte√∫do √© gratuito e n√£o possuo cunho financeiro, estarei disponibilizando o conte√∫do.

Caso voc√™ queira ver o conte√∫do original pelo Notion e conte√∫do original, [acesse esse link](https://alekson.notion.site/Playbook-do-Desenvolvimento-Profissional-Internacional-0c4dbbcb3f154b02ae8db3c3c5630b16).

Introdu√ß√£o de Alekson Fortes
Nunca tive as coisas de m√£o beijada. Estou prestes a me tornar canadense por m√©rito pr√≥prio, sem passaporte da fam√≠lia ou benef√≠cio de casamento, e tamb√©m n√£o cheguei ao Canad√° por sorte. Pelo contr√°rio, enfrentei muitos desafios para chegar aonde estou hoje. Acredito que seguindo o que estou compartilhando contigo no Notion, voc√™ vai conseguir evitar a maioria dos problemas pelos quais passei.

Tive dificuldades de comunica√ß√£o, falta de confian√ßa e uma vida onde vivia de castigos por ir mal na escola. Criado por pais separados, sofri bullying e era completamente infeliz. Eu me considerava um fracasso, mas hoje a situa√ß√£o √© bem diferente.

Comecei minha carreira em 2009, ganhando apenas o vale transporte e R$100 por m√™s durante um est√°gio na cria√ß√£o de websites. Atualmente, recebo um sal√°rio de seis d√≠gitos em d√≥lares canadenses no Canad√°, mas para chegar at√© aqui, foi necess√°rio investir muito no meu desenvolvimento pessoal e profissional.

Espero que voc√™ d√™ o devido valor ao que est√° resumido no Notion. Confie no caminho que resumi para voc√™, pois foi esse caminho que me trouxe para o Canad√°. Sou a maior prova de que o meu produto funciona, pois pratico o que ensino, ao contr√°rio de muitos que vendem produtos sem terem percorrido o caminho que est√£o tentando vender.

Minha inten√ß√£o principal √© ajudar o pr√≥ximo. Portanto, leve a s√©rio tudo que est√° aqui.

# Vamos come√ßar!

## Playbook do Desenvolvimento Profissional Internacional

O Seu Guia Pr√°tico para ter Sucesso na Carreira Internacional!

<aside>
¬©Ô∏è Conte√∫do criado por Alekson Fortes¬Æ.
Utilize-o apenas para seu pr√≥prio benef√≠cio e evite seu uso para fins lucrativos.
Infratores sujeitos a medidas legais cab√≠veis.

</aside>

## Comece por aqui

<aside>
üöÄ Este playbook √© o seu melhor amigo para uma carreira internacional de sucesso. 
Dividido em duas sess√µes, te√≥rica e pr√°tica, ele se baseia em experi√™ncias validadas, proporcionando insights para evitar os erros comuns cometidos por muitos.

A **sess√£o te√≥rica** oferece o conhecimento necess√°rio para saber o que fazer, e tamb√©m vai lhe ajudar a crescer como profissional e ser humano.

A **sess√£o pr√°tica** √© o caminho para transformar seus sonhos e objetivos em realidade. √â crucial seguir tanto a teoria quanto a pr√°tica para alcan√ßar os melhores resultados! Prepare-se para a jornada rumo a uma carreira de sucesso no cen√°rio internacional. üë®‚Äçüíªüåé

</aside>

## 1. Sess√£o Te√≥rica

## 1.1. O que o mercado internacional exige?

<aside>
üåé Esta √© uma das perguntas mais comuns sobre trabalhar em outro pa√≠s, e surpreendentemente, a maioria das pessoas desconhece a resposta. Ao compreender o que √© necess√°rio, voc√™ j√° se destaca frente √† concorr√™ncia.

Os pa√≠ses desenvolvidos est√£o competindo entre si para atrair os melhores talentos globais. Basicamente, o que voc√™ precisa √© de conhecimento qualificado para se tornar atraente em qualquer lugar que deseje imigrar. **Nesse guia, vou lhe ensinar como!**

Como eles avaliam esse conhecimento? Atrav√©s de anos de experi√™ncia, forma√ß√£o acad√™mica, cursos e, claro, entrevistas.

Tomando o Canad√° como exemplo: eles buscam profissionais com forma√ß√£o acad√™mica, especializa√ß√£o em uma √°rea espec√≠fica e anos de experi√™ncia. Se n√£o tiver forma√ß√£o acad√™mica, eles exigem um pouco mais de experi√™ncia profissional para compensar. Al√©m disso, √© essencial ter conhecimento em idiomas para ter sucesso nesse processo e estar apto a participar do processo seletivo.

No meu caso, fui aprovado pela empresa canadense somente pelo meu conhecimento t√©cnico e a capacidade de fazer a entrevista em Ingl√™s. Com isso, fui encaminhado pelo RH da empresa para um setor de imigra√ß√£o que me ajudou a comprovar para o governo minha forma√ß√£o acad√™mica atrav√©s do meu diploma em tecn√≥logo de gest√£o da tecnologia, 7 anos de experi√™ncia, e que eu era um profissional em falta para a economia local do pa√≠s, ocupando o cargo de analista de qualidade de software.

Ao completar o seguinte checklist, voc√™ estar√° apto/a a **conseguir um emprego com visto de trabalho tempor√°rio** em praticamente qualquer lugar do mundo, incluindo os Estados Unidos e pa√≠ses europeus:

- [ ]  **Forma√ß√£o Acad√™mica Completa:**
    - Tecn√≥logo pode ser suficiente na grande maioria dos casos.
- [ ]  **Experi√™ncia Profissional:**
    - 3-5 anos ou mais de experi√™ncia na √°rea em que est√° buscando trabalho.
- [ ]  **Comunica√ß√£o no Idioma Local:**
    - Capacidade de se comunicar no idioma local da vaga, geralmente em ingl√™s. Em alguns lugares, como Quebec, o franc√™s pode ser necess√°rio.
- [ ]  **Grau de Mestrado (Opcional):**
    - Alguns pa√≠ses podem considerar um mestrado como um diferencial (nice to have), mas n√£o √© uma exig√™ncia. Por exemplo, nos EUA, pode ser relevante para certos programas de green card, mas mesmo assim n√£o √© uma exig√™ncia.
    

A seguir, voc√™ encontrar√° mais informa√ß√µes sobre como voc√™ pode obter diretamente uma resid√™ncia permanente atrav√©s da forma√ß√£o acad√™mica.

</aside>

<aside>
üö® *Este checklist √© apenas o in√≠cio do guia completo e pr√°tico.*

*Continue estudando a teoria e colocando em pr√°tica tudo o que aprender para aumentar suas chances cada vez mais. Conhe√ßo diversas pessoas com perfis superiores aos itens do checklist, mas que falham em desenvolver as habilidades fundamentais reunidas neste guia, e por isso n√£o conseguem ter sucesso ao buscar um trabalho no exterior. Tenho certeza de que, se voc√™ seguir a teoria e a pr√°tica delineadas aqui, alcan√ßar√° resultados extraordin√°rios em sua carreira, assim como eu alcancei na minha.*

</aside>

## 1.2. Forma√ß√£o Acad√™mica

<aside>
üéì Como mencionei anteriormente, um tecn√≥logo pode ser suficiente na grande maioria dos casos, assim como foi para mim.

Geralmente, existem dois tipos de programas de imigra√ß√£o para trabalhadores qualificados: um que leva diretamente √† resid√™ncia permanente e outro que leva a um visto de trabalhador qualificado tempor√°rio que precisa ser renovado.

Quando cheguei ao Canad√°, obtive o status de trabalhador qualificado com um visto tempor√°rio de 2 anos, vinculado √† empresa que me patrocinou. Isso significa que, para trocar de emprego, eu precisaria de outra empresa para patrocinar meu novo visto. Perdi meu emprego durante a pandemia, o que exigiu que eu encontrasse uma nova empresa para patrocinar meu visto, ou teria que deixar o pa√≠s, como muitos tiveram que fazer.

O outro caminho de imigra√ß√£o √© aquele que leva diretamente √† resid√™ncia permanente, e √© aqui que a parte acad√™mica se torna bastante importante.

Esse padr√£o se repete na maioria dos pa√≠ses do mundo, e vou falar um pouco sobre os EUA para entender melhor a parte acad√™mica e a resid√™ncia permanente.

Nos EUA, existe um programa chamado **EB2-NIW**. Esse programa concede um Green Card. Muitas pessoas precisam desembolsar milh√µes para obter esse status de resid√™ncia nos EUA, mas o EB2-NIW √© um programa focado em profissionais com habilidades excepcionais em tecnologia, neg√≥cios, ci√™ncia, cultura, sa√∫de, ou educa√ß√£o, e o custo para entrar nesse caminho pode variar de 10 mil a 30 mil d√≥lares, dependendo da credibilidade da ag√™ncia de imigra√ß√£o que voc√™ contrata.

Se voc√™ possui BACHAREL + MESTRADO, a exig√™ncia de experi√™ncia √© de 5 anos na √°rea de atua√ß√£o. Se tiver doutorado, suas chances aumentam ainda mais. √â importante destacar que o doutorado n√£o √© um requisito, apenas um diferencial.

Agora, se voc√™ tem um tecn√≥logo e n√£o possui mestrado, que √© o meu caso e de muitos que obtiveram o Green Card por meio desse programa, √© necess√°rio comprovar 10 anos de experi√™ncia na √°rea.

Em resumo:

- 10 anos de experi√™ncia para quem tem tecn√≥logo.
- 5 anos de experi√™ncia para quem tem bacharel e mestrado.
- Obs: existem alguns casos que bacharel sem mestrado se qualifica com 5 anos de experi√™ncia, mas pra isso recomendo se informar com uma ag√™ncia de imigra√ß√£o.

Com essas informa√ß√µes, voc√™ pode ter uma ideia do que √© melhor para sua vida. Muitos me perguntam: tecn√≥logo ou bacharel? Eu escolhi tecn√≥logo por ser mais r√°pido e mais barato, mas se eu tivesse a inten√ß√£o de ir para os EUA naquele momento, teria feito um bacharel e um mestrado enquanto acumulava meus 5 anos de experi√™ncia para participar do EB2-NIW. Compreende onde quero chegar?

Apresentei um exemplo dos EUA, que √© o pa√≠s mais disputado hoje, mas se voc√™ quiser vir para o **Canad√°**, eles t√™m um programa semelhante chamado **Express Entry**. Quanto mais estudos voc√™ tiver, mais pontos ganhar√°, inclusive para mestrado e doutorado. A ideia √© semelhante ao programa EB2-NIW. Todos os pa√≠ses do mundo t√™m programas bastante similares, mudando apenas alguns detalhes.

Recomendo que busque uma ag√™ncia de imigra√ß√£o para o pa√≠s para o qual gostaria de imigrar e se informe sobre as exig√™ncias locais para obter um visto. No meu caso, isso n√£o foi necess√°rio, pois obtive o visto patrocinado por oferta de trabalho, um caminho diferente que n√£o envolve custos para mim, apenas para a empresa. Mas lembre-se: esse caminho lhe resulta somente em um visto de trabalho tempor√°rio vinculado com a empresa que lhe patrocina.

</aside>

## 1.3. Idiomas

<aside>
üåé Ingl√™s, Ingl√™s, Ingl√™s‚Ä¶

Eu poderia encerrar este t√≥pico apenas com a primeira linha. 
Ingl√™s √© uma prioridade. Pode ser interessante aprender outro idioma, como o franc√™s para abrir portas na prov√≠ncia de Quebec, aqui no Canad√°, mas o ingl√™s deve ser sua principal prioridade. Voc√™ vai precisar do ingl√™s em qualquer lugar do mundo.

Os melhores conte√∫dos da internet est√£o em ingl√™s. A maioria das informa√ß√µes chega primeiro nesse idioma. A maioria dos melhores cursos, treinamentos, est√£o em ingl√™s. 
Se voc√™ ainda n√£o fala ingl√™s, tenha como meta se sentir confort√°vel ao se comunicar no idioma. Agora, um detalhe importante: **estar confort√°vel em se comunicar n√£o significa falar fluentemente sem erros**. Voc√™ pode cometer quantos erros quiser, desde que esteja confort√°vel e comunic√°vel. Esse √© o n√≠vel que voc√™ precisa para passar em uma entrevista, o passo mais importante de todos. Muitas pessoas com n√≠vel intermedi√°rio conseguem passar em entrevistas, pois t√™m coragem e n√£o se importam em errar.

Uma vez, tive uma reuni√£o com meu gerente canadense e mencionei que tinha receio de assumir uma posi√ß√£o de lideran√ßa no meu local de trabalho, pois como eu poderia ser um bom l√≠der tendo um ingl√™s com erros? Ele me fez uma pergunta interessante: "O que voc√™ acharia de mim se eu pudesse falar portugu√™s com erros?" Parei, pensei e respondi: "Acharia incr√≠vel!" E ele replicou: "Pois ent√£o, a mesma coisa se aplica a voc√™! Todos sabem que voc√™ fala outro idioma e que o ingl√™s n√£o √© sua primeira l√≠ngua."

**O importante √© se comunicar**. Claro, com o tempo, seus idiomas se tornar√£o mais fluentes e com *MENOS* erros, mas jamais *SEM* erros. Voc√™ comete erros at√© mesmo em portugu√™s! N√£o espere n√£o cometer erros em um idioma secund√°rio.

</aside>

## 1.4. Websites para procurar vagas

<aside>
üïµüèº‚Äç‚ôÇÔ∏è Sites para auxiliar na busca por oportunidades de emprego:

[Talent Montreal](https://talentmontreal.com/en/jobs): Foi por meio deles que tive minha primeira oportunidade de emprego no Canad√°, na empresa Intelerad. O site oferece diversas vagas em diversas √°reas.

[Vanhack](https://vanhack.com/): Este site √© muito utilizado por profissionais da √°rea de tecnologia que buscam oportunidades de emprego no Canad√°.
 
[Hitmarker](https://hitmarker.net/): Destinado √† ind√∫stria de jogos em todo o mundo.

[Indeed](https://ca.indeed.com/?r=us): Um dos sites mais populares para busca de empregos no Canad√° e EUA.

[Glassdoor](https://www.glassdoor.ca/Job/index.htm): Gosto de usar o Glassdoor para pesquisar empresas com avalia√ß√£o de 4 estrelas ou mais. √â um dos filtros que sempre aplico ao procurar empregos.

Empresas que sei que patrocinam ou j√° patrocinaram vistos no Canad√°:
[Intelerad](https://careers.intelerad.com/)
[Behaviour](https://www.bhvr.com/jobs/)
[Ubisoft](https://www.ubisoft.com/en-us/company/careers/search?countries=ca)
[CGI](https://www.cgi.com/en/careers)
[SII Canada](https://sii-group.com/en-CA/offers)
[Astek](https://astek.ca/en/carreer/)

Empresas que sei que contratam remotamente: 
[Fortis Games](https://www.fortisgames.com/careers/)
[IronBelly](https://ironbellystudios.com/career/)
[Tucows](https://www.tucows.com/careers/opportunities)
[Gitlab](https://about.gitlab.com/jobs/)
[Redhat](https://www.redhat.com/en/jobs)
[Questrade](https://www.questrade.com/about-us/careers)
[Upstart13](https://upstart13.com/careers/)

</aside>

## 1.5. Como preparar o CV e LinkedIn?

<aside>
üìÉ ***Tudo o que voc√™ aprender na sess√£o pr√°tica vai ajud√°-lo a criar um excelente CV. Ap√≥s concluir a sess√£o pr√°tica, atualize seu CV com base na seguinte teoria:***

A maioria das empresas utiliza o sistema ATS para filtrar a enorme quantidade de curr√≠culos que recebem. Com isso, √© necess√°rio criar um CV preparado para um sistema ATS e, ao mesmo tempo, chamar a aten√ß√£o da pessoa que o l√™.

Existe um sistema chamado [***Jobscan***](https://www.jobscan.co/) para ajud√°-lo a criar o CV. Ele permite testar seu CV contra qualquer vaga que voc√™ queira aplicar para saber se h√° um match ideal.

***[Aqui](https://www.jobscan.co/resume-templates)*** eles oferecem modelos de CV que s√£o ATS friendly. Sugiro que voc√™ utilize algum dos dispon√≠veis na lista. √â melhor ter um CV funcional do que um CV bonito que n√£o chegue √†s pessoas que precisam receb√™-lo.

Basicamente, voc√™ precisa montar o CV no padr√£o que o Jobscan est√° recomendando nos modelos. Voc√™ tamb√©m tem 5 job scans gratuitos por m√™s, utilize-os com intelig√™ncia!

**Resumindo o que o Jobscan sugere:**

- Criar um CV que seja ATS-Friendly
- Testar o CV nas vagas para as quais voc√™ tem o perfil atrav√©s do sistema deles
- Ajustar o CV com as recomenda√ß√µes do sistema at√© que voc√™ obtenha 75% de match com a vaga

Ter um CV que d√™ match de 75% ou mais aumenta suas chances de passar no ATS e chegar √† equipe de recrutamento. Sabe aquelas vagas que t√™m mais de 100 candidatos? 90 delas provavelmente t√™m menos de 40% de match. S√≥ de ter um CV preparado para a vaga vai ajudar MUITO a ter mais entrevistas.

Sobre o **LinkedIn**: Eu praticamente fa√ßo um espelho do meu CV no LinkedIn e sempre deixo atualizado de acordo com meu √∫ltimo CV, a diferen√ßa √© que eu n√£o atualizo as tarefas do trabalho atual para n√£o parecer que estou querendo encontrar outro emprego para as pessoas que trabalham comigo. O LinkedIn foi minha porta de entrada para a entrevista que me trouxe para o Canad√°. Como eu n√£o tinha meu CV em m√£os, falei para os recrutadores que encontrei na confer√™ncia que estava para olharem meu LinkedIn e foi assim que eles viram que eu tinha o perfil que eles precisavam. Deixe seu CV e LinkedIn sempre atualizados, voc√™ nunca sabe a hora que vai precisar deles!

Outro ponto importante do LinkedIn: Entre nas vagas que voc√™ gostaria de trabalhar e veja quais s√£o as habilidades que a vaga exige. Se voc√™ tiver a habilidade, adicione-a ao seu perfil. Isso ajuda os recrutadores a lhe encontrar. Isso tamb√©m ajuda na hora que voc√™ aplica para uma vaga atrav√©s do perfil do LinkedIn.

</aside>

## 1.6. Como se preparar para uma entrevista?

<aside>
üíº A maioria das pessoas n√£o se dedicam para estudar as vagas para as quais aplicam, entrando despreparadas e, por consequ√™ncia, sendo facilmente eliminadas nos processos seletivos. Este √© um ponto crucial para voc√™ ganhar confian√ßa. Em vez de se preocupar com os mais de 100 concorrentes para cada vaga, lembre-se de que a maioria deles n√£o se prepararam para o processo seletivo.

Aqui, vou lhe mostrar como voc√™ pode se destacar:

Com a facilidade atual de se candidatar a vagas, manter um controle de todas as aplica√ß√µes pode ser um desafio. Recomendo criar uma planilha para listar todas as vagas para as quais enviou seu curr√≠culo. Quando voc√™ tem controle sobre as vagas, √© mais f√°cil localizar a descri√ß√£o da vaga, informa√ß√£o crucial para o seu sucesso. Geralmente, quando a pessoa respons√°vel pelo recrutamento responde, ela n√£o especifica a vaga √† qual est√° se referindo. Imagine iniciar uma conversa sem saber qual vaga est√° sendo mencionada.

Antes de conversar com o recrutamento, estude minuciosamente todos os detalhes da descri√ß√£o da vaga. Conhe√ßa suas habilidades e limita√ß√µes. Seu objetivo √© estar preparado(a) para destacar seu valor nas √°reas em que se destaca e responder adequadamente sobre as √°reas em que precisa melhorar.
Por exemplo, se a vaga exige ingl√™s e lideran√ßa, mas voc√™ n√£o teve experi√™ncia formal como l√≠der, destaque suas habilidades em ingl√™s quando questionado sobre o idioma. Quando questionado(a) sobre lideran√ßa, mencione atividades em que atua como l√≠der em outros contextos, como em grupos informais ou em atividades esportivas. 
√â essencial compreender seus pontos fortes em rela√ß√£o √† vaga e, ao mesmo tempo, estar ciente das suas limita√ß√µes, que s√£o as √°reas em que pode ter uma desvantagem em rela√ß√£o √† concorr√™ncia para poder dar a melhor resposta poss√≠vel.

Outro ponto crucial que muitos negligenciam √© o aspecto emocional. Por isso, sempre defendo um investimento significativo em soft skills. Neste playbook, voc√™ encontra uma introdu√ß√£o sobre soft skills na se√ß√£o 1.8, e recomendo que continue a investir nessa √°rea. Controlar suas emo√ß√µes, manter a calma e a tranquilidade durante uma entrevista s√£o fatores essenciais para o sucesso. Nas minhas primeiras entrevistas, eu sentia muito medo, mas com a pr√°tica, ganhei conforto em participar de entrevista com profissionais de todos os n√≠veis de uma empresa. Investir em intelig√™ncia emocional √© fundamental para superar esses desafios. Participar de entrevistas para cargos menos desejados, apenas para ganhar habilidades, √© uma excelente maneira de adquirir experi√™ncia. 

Teste seu valor, explore o mercado e aprenda com a pr√°tica!

</aside>

## 1.7. Participando de entrevistas!

<aside>
ü§ù Neste t√≥pico vamos abordar as coisas que voc√™ deve fazer e aquelas que jamais deve fazer em uma entrevista.

**FAZER**: 
**Focar no seu sucesso e resultados**: Tenha sempre uma hist√≥ria pronta para contar seus resultados. Quando perguntarem se conhece algum assunto, apresente resultados relacionados a esse assunto. Um exemplo que tenho comigo e sempre utilizo: se me perguntarem sobre minhas habilidades de comunica√ß√£o, eu respondo: "Consigo me comunicar em quatro idiomas, tenho habilidades para palestrar e gravar v√≠deos, e j√° fui presidente de um clube Toastmasters, onde ajudei pessoas a se desenvolverem na √°rea de comunica√ß√£o." Respostas assim impressionam qualquer entrevistador. 

**Adaptar-se √†s necessidades da empresa:** Mostre como suas habilidades e experi√™ncias est√£o alinhadas com as necessidades espec√≠ficas da empresa.

**Comunicar-se claramente:** Articule suas respostas de maneira clara e concisa. Evite respostas muito longas ou confusas.

**Tenha perguntas para fazer**: quando lhe perguntam se voc√™ tem alguma pergunta, sempre as fa√ßa. Isso demonstra interesse seu na empresa. Uma pergunta que gosto de fazer √© perguntar quais s√£o os pontos ruins que a pessoa que est√° lhe entrevistando v√™ na empresa em que trabalha. Gosto de fazer essa pergunta quando h√° um clima de dist√¢ncia entre entrevistador e entrevistado. E tamb√©m gosto da pergunta sobre o que ela mais gosta ap√≥s realizar a pergunta anterior. Essa geralmente cria uma conex√£o ap√≥s o choque que a primeira pergunta causa.

**Follow-up ap√≥s a entrevista:** Envie um e-mail de agradecimento ap√≥s a entrevista, expressando sua gratid√£o pela oportunidade e reafirmando seu interesse na posi√ß√£o. Adicione material complementar a sua entrevista. Exemplo: Caso tenha falado de algum projeto pessoal que tenha realizado, adicione links para esse projeto no email.

**JAMAIS FAZER:**
**Mentir**: Eu j√° entrevistei muitas pessoas ao longo da minha carreira. √â muito f√°cil identificar quando algu√©m est√° mentindo, especialmente quando j√° conhecemos a resposta da pergunta e estamos em uma posi√ß√£o sem press√£o alguma. Se voc√™ n√£o sabe a resposta, jamais minta ou invente uma resposta para evitar dizer que n√£o sabe. √â prefer√≠vel admitir a falta de conhecimento do que mentir. JAMAIS minta.

**Enrolar**: Similar a mentir, enrolar quando n√£o sabe responder √© t√£o ruim quanto. Muitas pessoas preferem dar uma resposta completamente diferente da pergunta apenas para evitar dizer "n√£o sei". Aprenda a dizer "n√£o sei". Admitir que n√£o sabe, mas que far√° o poss√≠vel para aprender, √© uma abordagem eficaz em entrevistas. Quando entrevisto algu√©m, sempre procuro identificar o "ponto de humildade" da pessoa. Esse ponto de humildade √© quando algu√©m reconhece que n√£o sabe, e eu sempre busco isso para avaliar se a pessoa entrevistada √© humilde para trabalhar em equipe. Imagine trabalhar com algu√©m que sempre pensa que sabe tudo? Jamais seja essa pessoa.

**Falar mal de algu√©m ou de uma empresa**: Nas minhas primeiras entrevistas enquanto buscava emprego, eu costumava reclamar dos lugares onde estava como uma justificativa do porqu√™ eu queria trabalhar no local em que estava sendo entrevistado. Dizia coisas como: onde estou n√£o √© legal, onde estou n√£o tem isso, falta aquilo, etc. Eu sempre focava em falar mal de algu√©m, da empresa ou de alguma outra coisa. At√© que eu percebi que isso n√£o estava sendo bem visto em uma entrevista. Na verdade, eu tinha uma mentalidade muito negativa que estava sendo demonstrada na entrevista e, consequentemente, estava me eliminando de todos os processos seletivos. Jamais seja essa pessoa negativa! Jamais reclame de algo nas entrevistas. Quando lhe perguntarem o motivo de estar fazendo uma entrevista, foque em dizer que quer evoluir ainda mais na sua carreira, que est√° ali para encontrar um trabalho melhor do que o que j√° tem, sem dar a entender que o trabalho atual seja ruim. Entrevistadores procuram pessoas positivas, com uma mentalidade de solucionar problemas, e n√£o uma mentalidade que reclama de tudo e que provavelmente vai reclamar dos futuros empregos. Aprenda a perceber o lado positivo das coisas!

</aside>

## 1.8. Soft Skills

<aside>
üó£Ô∏è Quanto mais voc√™ investir em Soft Skills, maiores ser√£o as suas chances de ter sucesso na vida. O seu desenvolvimento profissional depende do seu desenvolvimento pessoal. Eu comecei com desenvolvimento pessoal, ou como alguns chamam, Soft Skills, em 2009. Meu primeiro contato com essa √°rea foi atrav√©s de um semin√°rio sobre autoestima de 2 dias que mudou minha vida. Desde ent√£o, comecei a ler livros, fazer cursos e consumir conte√∫do desse assunto.

Esse guia n√£o √© sobre Soft Skills, mas eu fortemente recomendo que voc√™ invista nessa √°rea, pois, ao morar fora, voc√™ vai precisar de soft skills para ter sucesso. Morar fora n√£o √© f√°cil. Voc√™ vai ter desafios que n√£o temos no pa√≠s onde nascemos. Construir uma vida do zero em um novo local com uma cultura e pessoas diferentes n√£o √© para todos. 

Lembre-se tamb√©m de que at√© conseguir chegar no exterior, voc√™ ainda tem uma vida para viver no local em que voc√™ se encontra. Soft Skills s√£o essenciais para ter sucesso e paz de esp√≠rito durante sua jornada em qualquer momento da sua vida.

Neste guia, compartilho 3 caminhos que servem em qualquer lugar que voc√™ estiver:

- Comunica√ß√£o: Estamos sempre nos comunicando, mesmo quando n√£o falamos nada, estamos passando uma mensagem para as outras pessoas atrav√©s da comunica√ß√£o n√£o verbal. Se voc√™ tem problemas com comunica√ß√£o no seu idioma nativo, imagine falando em outro idioma. Comunicar uma ideia, comunicar-se com colegas de trabalho, liderar pessoas, tudo requer habilidades, e a boa not√≠cia √© que essas habilidades podem ser desenvolvidas. Existe um grupo chamado Toastmasters que o ajuda a desenvolver sua comunica√ß√£o, e o investimento para fazer parte do grupo √© baix√≠ssimo. Eu comecei no Toastmasters como algu√©m que tinha medo de falar em p√∫blico e, em pouco tempo, me tornei palestrante e l√≠der de um clube, o que me ajudou a ir a uma confer√™ncia para palestrar e, consequentemente, encontrar a primeira empresa que me trouxe para o Canad√°.

- Networking: A maioria dos meus trabalhos foi atrav√©s de networking. Quando eu trabalhei em uma das maiores empresas de jogos do planeta, foi porque consegui uma indica√ß√£o de um amigo que trabalhava na empresa. N√£o estou dizendo que sem networking voc√™ n√£o vai conseguir emprego, mas sim que isso vai abrir portas para mostrar seu potencial em entrevistas. Networking foi exatamente o que aconteceu comigo na confer√™ncia que citei anteriormente. Fui para palestrar e acabei fazendo networking com uma empresa que precisava de um profissional qualificado para ocupar uma vaga. Networking √© algo t√£o f√°cil de praticar, mas concordo que no in√≠cio pode parecer algo assustador para quem tem medo de falar com pessoas, como era o meu caso anos atr√°s. Hoje, n√£o me importo em adicionar algu√©m no LinkedIn e pedir ajuda sobre algum assunto. Isso √© uma das formas mais f√°ceis de se conectar com algu√©m! Participar de eventos, de clubes, de cursos e mentorias s√£o excelentes escolhas para melhorar o seu networking, mas deixei para o final o melhor m√©todo de se destacar nessa √°rea: Compartilhar conhecimento e ajudar os outros sem esperar nada em troca. Quando voc√™ faz isso, as pessoas v√£o lembrar de quanto voc√™ as ajudou, e um dia elas v√£o retribuir. √â normal do ser humano querer retribuir toda ajuda que recebemos, ent√£o quanto mais voc√™ ajudar, maiores s√£o as suas chances de receber essa ajuda futuramente. Mas lembre-se: ajudar sem esperar nada em troca. Recomendo que voc√™ comece a compartilhar seu conhecimento, a se tornar uma refer√™ncia no que voc√™ faz, pois isso ajuda at√© mesmo na hora de conseguir um visto de trabalho em outro lugar do planeta. Recrutadores adoram pessoas que ajudam a comunidade e governos adoram dar vistos para refer√™ncias.

- Intelig√™ncia Emocional: Todas as nossas limita√ß√µes na vida t√™m uma emo√ß√£o por tr√°s, e o melhor jeito de eliminar as limita√ß√µes √© identificar qual o motivo e a emo√ß√£o que est√£o vinculados a cada limita√ß√£o. Ter consci√™ncia disso √© algo para pouqu√≠ssimos seres nesse planeta. As pessoas vivem uma vida superficial que elas nem percebem que existem emo√ß√µes influenciando seus comportamentos e suas identidades. Existem diversas maneiras de voc√™ criar a consci√™ncia das suas emo√ß√µes. Medita√ß√£o √© uma delas. Existe um retiro de medita√ß√£o que se chama Vipassana. Ele existe em diversos lugares do mundo e √© um retiro de 10 dias de sil√™ncio e medita√ß√£o, onde voc√™ se dedica a olhar para dentro da sua mente e ficar em paz com sua vida. Para quem prefere algo menos intenso do que 10 dias meditando, recomendo a minha ferramenta favorita: Programa√ß√£o Neurolingu√≠stica. Essa ferramenta mudou a minha vida, me ajudou a aumentar minha consci√™ncia em diferentes n√≠veis, e a eliminar diversas limita√ß√µes que eu carregava do meu passado.

Como falei no in√≠cio desse t√≥pico, esse guia n√£o √© sobre soft skills, por isso lhe dei um pouco de 3 caminhos que existem nesse mundo infinito. Recomendo buscar desenvolvimento pessoal para aumentar as suas chances de ter sucesso no seu desenvolvimento profissional. Foi essa √°rea que me ajudou a chegar aonde cheguei.

</aside>

## 1.9. Sa√∫de Financeira

<aside>
üí∞ O caminho que estou lhe ensinando n√£o requer que voc√™ tenha dinheiro, mas eu super recomendo que voc√™ comece a economizar para ter mais liberdade na hora de mudar de pa√≠s. Quando recebi minha oferta de trabalho, a empresa contratou uma consultoria que me ajudou com o deslocamento para o Canad√°. Eu estava passando por um momento dif√≠cil financeiramente na minha vida, acumulando d√≠vidas no Brasil, e por isso n√£o tinha dinheiro nenhum para vir para o Canad√°. Em vez de escolher a op√ß√£o de ficar em um hotel no primeiro m√™s aqui, precisei ir para o por√£o da casa de uma senhora que aceitava estudantes pois era bem mais barato. Vim com dinheiro contado, pois a empresa s√≥ iria me reembolsar pelo primeiro m√™s de hospedagem ap√≥s meu primeiro pagamento. Sofri muito no in√≠cio da minha jornada no exterior pois n√£o tinha uma reserva financeira, pelo contr√°rio: precisei enviar boa parte do que ganhei nos meus primeiros anos para pagar as d√≠vidas que tinha no Brasil. O que me salvou e mudou minha rela√ß√£o com o dinheiro foi um treinamento chamado Millionaire Mind Intensive. Foi um semin√°rio em S√£o Paulo que mudou minha rela√ß√£o com o dinheiro, e eu fiz um m√™s antes de sair do Brasil. Hoje tenho dinheiro guardado, invisto boa parte do meu sal√°rio e tenho MUITO mais paz de esp√≠rito em rela√ß√£o √† minha carreira profissional, pois o dinheiro deixou de ser um problema. Recomendo voc√™ fazer as pazes com o dinheiro caso esteja no mesmo lugar em que eu estava no Brasil, e se dinheiro n√£o √© um problema para voc√™: sinta-se ainda mais preparado(a) para caminhar no caminho que vai te levar para o exterior.

</aside>

## 1.10. Voc√™ √© a m√©dia das pessoas ao seu redor

<aside>
ü™û Vou contar uma hist√≥ria sobre quando cheguei ao Canad√°. Na √©poca, meu sal√°rio era de 75 mil d√≥lares por ano, o que era muito mais alto do que eu ganhava no Brasil. Ao mesmo tempo, um amigo tamb√©m chegou ganhando o mesmo sal√°rio e, no nosso primeiro Natal, ele me disse que sua meta era dobrar sua renda. Achei que ele estava louco, pois como seria poss√≠vel ganhar mais de 100 mil d√≥lares por ano como desenvolvedor de software? Agora, preste aten√ß√£o...

N√£o demorou muito para que ele come√ßasse a ganhar 120 mil! Quando percebi que ele tinha alcan√ßado algo que eu achava imposs√≠vel, percebi que eu tamb√©m poderia conseguir. Depois disso, n√£o demorou muito para que eu tamb√©m aumentasse drasticamente minha renda! Hoje ganho mais do que os 120 mil que eram o limite do nosso c√≠rculo, e acredito que seja poss√≠vel aumentar ainda mais minha renda.

Moral da hist√≥ria: se voc√™ est√° cercado por pessoas que ganham todas 75 mil, dificilmente perceber√° que √© poss√≠vel ganhar mais do que a m√©dia das pessoas ao seu redor.

Isso tamb√©m se aplica aos seus objetivos de vida. Se voc√™ est√° cercado por pessoas que lhe desmotivam, que dizem que morar no exterior n√£o √© para voc√™, que ganhar bem n√£o √© poss√≠vel... Voc√™ ficar√° limitado a essa realidade! Pois essa √© a √∫nica realidade que voc√™ conhece.

Sinta-se privilegiado por estar lendo isso hoje. Estou aqui para lhe ajudar a elevar o seu padr√£o de realidade. Quero que voc√™ pense grande como eu. Desejo que voc√™ tenha o mesmo sucesso que eu tive, ganhando bem, morando em um lugar de primeiro mundo e tendo todas as oportunidades que tive ao morar fora. Se eu consegui, √© porque √© poss√≠vel, e voc√™ tamb√©m pode conseguir!

Comece a prestar aten√ß√£o nas pessoas ao seu redor. Observe as limita√ß√µes que elas possuem e questione-se se voc√™ n√£o est√° se limitando ao conviver com pessoas limitadas que lhe desmotivam.

Voc√™ √© a m√©dia das pessoas ao seu redor. Isso vale para os contatos na vida real e tamb√©m para o conte√∫do online que voc√™ consome!

</aside>

## 1.11. Rejei√ß√£o

<aside>
‚õî Eu sofri rejei√ß√£o desde cedo na minha vida pois eu era obeso. A escola foi um dos piores lugares que experienciei, pois precisava lidar com a rejei√ß√£o todos os dias devido ao meu peso. Tamb√©m enfrentei rejei√ß√£o por parte de parentes, que praticavam bullying pelo mesmo motivo. Sabe o que foi bom nisso? Aprendi a lidar com o "n√£o" desde cedo. Em processos seletivos, voc√™ vai receber "n√£o" o tempo todo.

At√© conseguir meu primeiro "sim" para me mudar para o Canad√°, recebi, no m√≠nimo, uns 50 "n√£os" em entrevistas. Isso inclui todos os anos do per√≠odo de 2009 a 2018, nos quais precisei fazer entrevistas para ingressar na √°rea, entrevistas enquanto estive na Irlanda para aprender ingl√™s, entrevistas ap√≥s meu retorno e j√° com experi√™ncia na √°rea de atua√ß√£o, e entrevistas para conseguir um trabalho no exterior, o que eventualmente resultou na mudan√ßa para o Canad√°.

A principal mensagem aqui √©: n√£o deixe que o **n√£o** de nenhuma empresa abale voc√™! Para cada **n√£o** que receber, saiba que est√° mais pr√≥ximo(a) de receber o **sim**.

Se hoje voc√™ estiver enfrentando rejei√ß√£o, lembre-se de que eu tamb√©m passei por isso e consegui superar. Isso significa que voc√™ tamb√©m consegue!

</aside>

## 1.12. Mentoria

<aside>
üí° O √∫ltimo t√≥pico de nossa sess√£o te√≥rica √© sobre mentoria. Recomendo que voc√™ busque mentoria com pessoas que alcan√ßaram o que voc√™ deseja conquistar. Por exemplo, se voc√™ quer aprender programa√ß√£o, procure uma mentoria nessa √°rea. Se seu foco s√£o as soft skills, busque orienta√ß√£o nesse campo.

Uma vez que voc√™ aprende a valorizar seu tempo, dinheiro, e vida, voc√™ percebe que qualquer atalho para alcan√ßar seus objetivos mais rapidamente vale o investimento.

Outra vantagem √© que, ao participar de uma mentoria, voc√™ se aproxima de pessoas que compartilham objetivos semelhantes. Lembra que voc√™ √© a m√©dia das pessoas ao seu redor?

E a parte mais importante de todas: escolha sua mentoria com cuidado. Busque pessoas que colocam em pr√°tica o que ensinam. Imagine se este guia fosse escrito por mim no in√≠cio da minha carreira, sem as experi√™ncias vividas, apenas com o que eu achava que funcionaria e com o conhecimento limitado de 2009. Seria confi√°vel? O mesmo se aplica √† escolha de uma mentoria. Procure mentores que estejam onde voc√™ deseja estar e invista nessa orienta√ß√£o para acelerar seus resultados!

</aside>

## 2. Sess√£o Pr√°tica

## 2.1. Definindo sua carreira ideal

<aside>
üßû Voc√™ chegou ao momento mais importante da sess√£o pr√°tica! Imagine que voc√™ acabou de encontrar o g√™nio da l√¢mpada e ele lhe deu apenas a op√ß√£o de desejar a sua carreira ideal. Como seria o seu pedido para o g√™nio?

Aqui √© o momento para voc√™ detalhar tudo o que voc√™ quer para a sua carreira! Imagine que voc√™ est√° vivendo no futuro e que voc√™ se tornou a pessoa que voc√™ quer ser. Como seria?

Se voc√™ n√£o tivesse nenhuma limita√ß√£o na sua imagina√ß√£o e pudesse escolher exatamente o que gostaria de ser, como seria?

Qual √°rea voc√™ est√° trabalhando? Em qual pa√≠s voc√™ est√° vivendo? Quais idiomas voc√™ fala? Quais empresas voc√™ gostaria de trabalhar? Quais tecnologias voc√™ domina? Quais soft skills voc√™ possui? Detalhe tudo o que voc√™ puder imaginar!

</aside>

**Atividade para voc√™ realizar**
Ao final desta atividade, voc√™ deve ter algo similar a esse exemplo: 

Sou uma refer√™ncia reconhecida na √°rea de TI em todo o mundo e moro no Canad√°. Sou um l√≠der, atuando como embaixador dos princ√≠pios √°geis e DevOps na area de Teste de Software. 
Oriento o pensamento estrat√©gico, integra√ß√£o e otimiza√ß√£o das atividades de qualidade. Sou um defensor da melhoria cont√≠nua. Possuo amplo conhecimento em Testes, Programa√ß√£o e Automa√ß√£o. Trabalho porque amo e quero, n√£o porque preciso, e ainda tenho um excelente sal√°rio. Estou em um ambiente maravilhoso, com pessoas incr√≠veis que querem crescer a cada dia. Meu chefe √© muito bom, ele/ela me escuta, √© um verdadeiro l√≠der e me ajuda na minha carreira. Falo ingl√™s, portugu√™s, franc√™s e espanhol fluentemente. Tenho facilidade em falar em p√∫blico e expressar as minhas ideias.

## 2.2. Encontrando o seu trabalho dos sonhos

<aside>
üë©üèº‚Äçüíª √â hora de explorar o site das empresas que voc√™ tem interesse em trabalhar e catalogar as posi√ß√µes que despertam o seu interesse.

Para exemplificar, vou usar uma vaga na empresa **Blizzard**:

**Test Lead II, WoW Development Tools**

**Requirements**:
Bachelor‚Äôs degree in a related field or equivalent experience
Experience leading test teams/initiatives: 3+ years
Experience with white/gray/black box and automation test methods
Experience working in an embedded QA engineering team
Passion for video games and software quality

**Pluses**:
Coding knowledge: XML/HTML, JavaScript, Python, Java, C/C++/C#, SQL
Experience working within a professional environment with large code bases in C#
Certifications: PMP, Scrum Master and/or Product Owner, ISTQB
Familiarity with Blizzard Entertainment's line of products and services

</aside>

**Atividade para voc√™ realizar**

Liste pelo menos 5 vagas em empresas diferentes, assim como fiz no exemplo. Inclua o nome da vaga e os requisitos. Caso queira adicionar mais informa√ß√µes sobre a vaga, fique √† vontade. N√£o listei todos os detalhes para n√£o poluir o documento.

Ao final desta atividade, voc√™ deve ter algo similar a esse exemplo:

**Vaga da empresa 1: Test Lead II, WoW Development Tools**
Bachelor‚Äôs degree in a related field or equivalent experience
Experience leading test teams/initiatives: 3+ years\
Experience with white/gray/black box and automation test methods
etc
...

**Vaga da empresa 3**
Requisito 1
Requisito 2
Requisito 3
etc
‚Ä¶

**Vaga da empresa 5**
Requisito 1
Requisito 2
etc

*A proposta aqui √© identificar os requisitos mais frequentes. Ao conhecer os requisitos mais frequentes, voc√™ ter√° clareza sobre quais √°reas de aprendizado merecem mais aten√ß√£o. Para ser o(a) candidato(a) perfeito para a empresa, √© necess√°rio atender √† maioria dos requisitos da vaga. Concentre-se na empresa que mais deseja, mas lembre-se de que a empresa dos seus sonhos nem sempre √© a que tem as portas abertas. √Äs vezes, trabalhar para a empresa que est√° em quinto lugar na sua lista pode ser a √∫nica op√ß√£o. Por isso, √© importante se preparar para o mercado de trabalho e priorizar os requisitos mais frequentes entre todas as 5 empresas que voc√™ listou.*

## 2.3. Definindo suas metas

<aside>
üìñ Ap√≥s definir sua carreira ideal e obter informa√ß√µes sobre os requisitos necess√°rios para o seu trabalho dos sonhos, voc√™ ir√° estabelecer metas menores e relacionadas para alcan√ßar essa carreira ideal. √â como se estivesse criando um produto e dividindo-o em pequenas entregas. A ideia √© exatamente a mesma. Transforme seu grande sonho de carreira ideal em pequenas entregas (metas). Utilize todo o conhecimento adquirido em sua pesquisa sobre o trabalho dos sonhos para validar se as metas da carreira ideal est√£o de acordo com o que o mercado de trabalho est√° exigindo.

De prioridade para metas SMART, lembre-se de que elas devem ser:

- Espec√≠ficas (Specific): claras e direcionadas para a sua carreira ideal.
- Mensur√°veis (Measurable): estabele√ßa crit√©rios para medir o alcance das metas.
- Ating√≠veis (Achievable): realistas e considerando seus recursos e habilidades.
- Relevantes (Relevant): alinhadas com seus objetivos de longo prazo.
- Com prazo definido (Time-based): estabele√ßa prazos para manter o foco e avaliar o progresso.
</aside>

**Atividade para voc√™ realizar**
Exemplo:

Suponhamos que ainda n√£o alcancei o que descrevi como ideal em minha carreira: "Ter facilidade em falar em p√∫blico e expressar minhas ideias". 
Para atingir esse objetivo, estabelecerei uma meta:

**Meta 1:** Desenvolver habilidade em falar em p√∫blico e expressar ideias.
Realizar uma palestra at√© o final de 2025.

Outro exemplo:

Digamos que ainda n√£o alcancei um dos requisitos mais comuns para as vagas de emprego dos meus sonhos: "Conhecimento em programa√ß√£o Python intermedi√°rio". 
Criarei uma segunda meta para atingir esse objetivo:

**Meta 2:** Dominar conhecimento intermedi√°rio em programa√ß√£o Python.
Concluir a forma√ß√£o XYZ em Python intermedi√°rio at√© julho de 2024.

A proposta √© ter uma lista de metas, de modo que ao alcan√ß√°-las, voc√™ adquira todos os requisitos solicitados nas vagas dos seus sonhos. Organize as metas com base na prioridade, considerando a frequ√™ncia com que s√£o requisitadas nas vagas. Adicione tamb√©m metas relacionadas √† sua aspira√ß√£o profissional para moldar a pessoa que voc√™ deseja ser. O foco √© compreender o que precisa aprender, priorizando as metas de acordo com a relev√¢ncia.

## 2.4. Quadro de Metas

<aside>
üéØ Aqui est√° o seu quadro kanban pessoal.
Instru√ß√µes de uso:

1. Preencha a coluna "To-do" com todas as suas metas definidas no passo anterior.
2. Deixe as metas em ordem de prioridade para voc√™ saber qual puxar para o "In progress" primeiro.
3. Seja inteligente com a sua capacidade de fazer coisas ao mesmo tempo e gerencie bem seu tempo e sua energia para dar conta de toda a sua lista de metas.
</aside>

**Ferramenta b√¥nus para voc√™ utilizar:**

[Metas para conquistar meu trabalho internacional:](https://www.notion.so/cedb29c5967f471e921f3ceba9adbb96?pvs=21)

## 2.5. Checklist Di√°rio

<aside>
‚úÖ Aqui est√° um checklist di√°rio de tarefas.
Instru√ß√µes de uso:

1. Preencha a coluna "**Fiz o meu melhor em...**" com as tarefas que voc√™ gostaria de realizar diariamente. Por exemplo: Aprender idioma.
2. Para cada dia em que voc√™ completar a tarefa, marque um X no checklist.
3. Isso ajudar√° voc√™ a desenvolver h√°bitos e a se comprometer com seus objetivos.
</aside>

**Ferramenta opcional para voc√™ utilizar:**

![image](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/64a90fad-e278-44df-ad77-5ac134505a45)

## 2.6. Checklist Final

<aside>
üéâ Aqui est√° o checklist final, que √© o resumo de tudo o que voc√™ aprendeu e do que voc√™ precisa fazer para conquistar o emprego dos seus sonhos!

</aside>

- **Forma√ß√£o Completa**
- **Experi√™ncia Profissional**
- **Capacidade de se comunicar no idioma do local desejado**
- **Definir a sua carreira ideal**
- **Pesquisar as 5 vagas dos seus sonhos**
- **Definir suas metas de aprendizagem**
- **Aprender os requisitos mais frequentes exigidos pelas vagas**
- **Curriculum pronto**
- **LinkedIn atualizado**
- **Enviar um curr√≠culo personalizado para cada vaga com match de perfil**
- **Participar do primeiro processo seletivo**
- **Caso o primeiro n√£o d√™ certo, continue com outros processos seletivos at√© ser aprovado**
- **Conquistar o emprego dos seus sonhos! üéâüéâüéâ**]]></description>
            <link>https://yagasaki.vercel.app//articles/playbook-do-desenvolvimento-profissional-internacional</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/playbook-do-desenvolvimento-profissional-internacional</guid>
            <pubDate>Wed, 24 Apr 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[An√°lise do Playbook de Alekson Fortes]]></title>
            <description><![CDATA[
![](https://safebooru.org//samples/3778/sample_0cd2c17b23f67915823e93dd275e3647edccc4b0.jpg?3946794)

Se voc√™ n√£o leu ainda o artigo, recomendo que voc√™ [primeiramente leia-o](/article/playbook-do-desenvolvimento-profissional-internacional) e depois retorne aqui.

Sabe quando voc√™ est√° cansado de ouvir gurus? Foi tipo isso, mas, como se tratava de roadmap envolvendo algu√©m
que teve experi√™ncia, trabalhava fora e eu tamb√©m n√£o estou em uma situa√ß√£o agrad√°vel para recusar qualquer
investimento desse tipo, eu comecei a ler e tentar absorver esse conhecimento para entender de fato o que
estou errando na minha carreira.

Vou seguir todo o sum√°rio para dar o meu feedback a respeito, ent√£o vamos l√°.

### O que o mercado internacional exige?
Inicialmente ele fala sobre o que o mercado internacional exige e claro, aqui, temos uma √≥tima observa√ß√£o vindo
de fora, ainda mais se tratando de brasileiro que sou, tenho zero contato com o mundo internacionalmente em quest√µes
profissionais, ent√£o fica dif√≠cil entender o que √© a necessidade do mercado e isso serviu como uma esp√©cie de farol
para me guiar com mais precis√£o.

### Forma√ß√£o Acad√™mica
Nesse quesito, sei que ainda vou ter que ralar muito para conseguir chamar aten√ß√£o de alguma empresa internacional,
mesmo tendo experi√™ncia por ter trabalhado em uma das maiores fintechs do Brasil - Stone -, ter essa no√ß√£o do que eu
preciso, ainda vai levar um tempo e n√£o tem como ir contra o tempo de experi√™ncia.

### Idiomas
Sei que meu ingl√™s √© bem intermedi√°rio, vi v√°rias pessoas relatando isso e claro, al√©m de consumir conte√∫dos,
ler documenta√ß√£o, sempre estou em busca de melhorar e acredito que estou em um ponto aonde somente a pr√°tica leva
a devida perfei√ß√£o, mas, j√° estou com um belo de caminho andado.

### Como preparar o CV e Linkedin?
Analisei o meu curriculo na plataforma que ele mencionou e sa√≠ com cerca de 35% de match. Sei que acredito
que a minha maior concorr√™ncia √© realmente em rela√ß√£o a esse curr√≠culo que tanto me atrapalha, muitos cursos,
pouca experi√™ncia, grandes feitos, mas com a base, com o mockup que foi enviado, espero chamar bem mais aten√ß√£o.

### Entrevistas
Quanto a isso, s√≥ preciso me esfor√ßar mais em separar as vagas em que eu me candidato e focar um pouco mais
na empresa antes de ser chamado ao inv√©s de esperar ser chamado primeiro para estudar depois. Al√©m de entender,
que posso melhorar ainda mais a minha comunica√ß√£o, at√© mesmo na roda de amigos sinto que tenho um pouco de dificuldade
para deixar claro a minha linha de racioc√≠nio. E √© uma boa pr√°tica para analisar. Ser√° que os artigos que voc√™ escreve,
fazem sentido? Ser√° que a ideia que voc√™ elaborou na sua cabe√ßa est√° clara? Ando utilizando muito o ChatGPT para essas
quest√µes e foi um dos pioneiros a me ajudar a entender bem, sobre o NestJS, o princ√≠pio de m√≥dulos, controladores e servi√ßos.

Ele menciona os pontos de humildade e isso √© algo que eu sempre deixei bem claro, o que adianta mentir ou se esquivar
de falar que n√£o sabe sobre um assunto em espec√≠fico? √â claro que deixo a entender que tenho muita for√ßa de vontade
para me aprofundar e melhorar caso esse realmente seja um aspecto necess√°rio para trabalhar ou melhorar a minha carreira.

### Soft Skills

- Compartilhar conhecimento e ajudar os outros sem esperar nada em troca.
Eu vejo que essa quest√£o, se encaixa em muitas pessoas que est√£o na √°rea e n√£o tem no√ß√£o do quanto de conhecimento
est√£o adquirindo e n√£o est√£o compartilhando. Por isso digo, est√° come√ßando na √°rea? Sem problemas, anote tudo, explique
tudo, mesmo que vinte mil pessoas tenha passado pela mesma trilha que voc√™, pode ter certeza que daqui um, dois anos,
outros estar√£o seguindo e poder√£o precisar de ajuda.

Ent√£o, n√£o tenha medo de abrir um blog e explicar como funciona o HTML, n√£o tenha medo de ensinar CSS algu√©m, s√£o coisas
b√°sicas? Sim. Mas mostrar que voc√™ est√° compartilhando conhecimento com o que aprendeu ou com o que acabou de resolver,
pode simplesmente abrir muitas portas para voc√™. Pegue essa pr√°tica.

As demais coisas s√£o por sua pr√≥pria conta e evolu√ß√£o. N√£o entrei em detalhe de todas porque cada um tem
uma meta, cada um sabe o que atingir, cada um tem um ponto a ser conquistado ou melhorado e nesse artigo,
busco apenas mostrar a minha experi√™ncia, a minha an√°lise em cima do playbook.

Recomendo sempre continuar evoluindo e vamos pra cima, a inten√ß√£o √© sempre melhorar.

Se voc√™ leu at√© aqui, meu muito obrigado!

E caso voc√™ precise de ajuda ou esteja com d√∫vidas, n√£o hesite em me chamar no Discord pela [Kalify Community](https://discord.gg/jhSepmE7nN)
ou pelo [Twitter/X](https://twitter.com/Yagasaki7K).]]></description>
            <link>https://yagasaki.vercel.app//articles/analise-do-playbook-de-alekson-fortes</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/analise-do-playbook-de-alekson-fortes</guid>
            <pubDate>Wed, 24 Apr 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como instalar o Windows Subsystem for Linux (WSL)]]></title>
            <description><![CDATA[
![](https://w.wallhaven.cc/full/13/wallhaven-135w7w.png "Douglas Lopes")

O Windows Subsystem for Linux (WSL) √© uma ferramenta poderosa que permite executar distribui√ß√µes Linux diretamente no Windows. Isso significa que voc√™ pode aproveitar o ambiente de linha de comando (CLI/Terminal) do Linux, juntamente com suas ferramentas e utilit√°rios favoritos, sem a necessidade de alternar entre sistemas operacionais. Neste guia, vamos mostrar como instalar o WSL no Windows 10 e Windows 11, discutir as vantagens de seu uso para desenvolvedores e por que abandonar o dual boot pode ser uma boa ideia.

## Instalando o WSL no Windows 10 e Windows 11

1. **Ative o WSL**: Abra o PowerShell como administrador e execute o seguinte comando para habilitar o recurso WSL:

```powershell
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
```

2. **Instale o WSL**: Abra o PowerShell como administrador e execute o seguinte comando para instalar o WSL:

```powershell
wsl --install
```

3. **Atualize o WSL**:

```powershell
wsl --update
```

4. **Instale uma distribui√ß√£o Linux**: Ap√≥s habilitar o WSL, existe a op√ß√£o de instalar direto pelo Terminal, se voc√™ der `wsl --install` voc√™ ver√° a lista de distros dispon√≠veis para download (No exemplo, usarei Ubuntu-24.04), caso o contr√°rio v√° para a Microsoft Store e procure por uma distribui√ß√£o Linux de sua escolha, como Ubuntu, Debian ou Fedora. Clique em "Instalar" e siga as instru√ß√µes na tela para concluir a instala√ß√£o.
   
```powershell
wsl --install -d Ubuntu-24.04
```

5. **Inicie a distribui√ß√£o instalada**: Ap√≥s a instala√ß√£o ser conclu√≠da, voc√™ pode iniciar a distribui√ß√£o Linux rec√©m-instalada a partir do menu Iniciar. Isso abrir√° uma janela de terminal onde voc√™ pode interagir com o Linux. Ou, se preferir, voc√™ pode baixar o Terminal Preview na Microsoft Store - caso esteja no Windows 10 - e utiliz√°-lo. Vale lembrar que no Windows 11 ela j√° est√° dispon√≠vel.

Alguns erros que geralmente acontecem ao tentar instalar a primeira vez √©.

- Virtualiza√ß√£o n√£o est√° habilitada
Para resolver esse problema de virtualiza√ß√£o, recomendamos que voc√™ desligue o computador e v√° at√© a BIOS, procure a virtualiza√ß√£o nas configura√ß√µes de sua BIOS e ligue ela, claro, se voc√™ n√£o entender sobre o assunto, procure algum tutorial no Youtube e tome cuidado com o que estiver alterando, sempre traduza, caso tenha dificuldade no ingl√™s.

- O Windows Subsystem for Linux (WSL) precisa estar na vers√£o 2.
Voc√™ pode listar suas distribui√ß√µes do Linux instaladas e verificar a vers√£o do WSL para a qual cada uma est√° definida, lembre-se de verificar se ele est√° atualizado seguindo o passo 3, depois insira o comando: `wsl -l -v` no PowerShell ou Prompt de Comando do Windows. Para definir a vers√£o padr√£o como WSL 1 ou WSL 2 quando uma nova distribui√ß√£o do Linux √© instalada, use o comando: `wsl --set-default-version <Version#>`, substituindo `<Version#>` por 1 ou 2.

T√°, mas qual √© a vantagem de eu usar o WSL ao inv√©s de usar um Dual Boot por exemplo?

## Ambiente de desenvolvimento familiar
Com o WSL, os desenvolvedores podem usar ferramentas e utilit√°rios Linux diretamente no Windows. Isso elimina a necessidade de alternar entre sistemas operacionais e permite que voc√™ trabalhe em um ambiente de desenvolvimento familiar, independentemente da plataforma que estiver usando.

## Suporte nativo para linha de comando e scripts
O WSL oferece suporte nativo para a linha de comando do Linux, o que significa que voc√™ pode executar scripts, comandos e ferramentas Linux diretamente no Windows. Isso √© especialmente √∫til para desenvolvedores que trabalham com ferramentas baseadas em linha de comando ou que precisam automatizar tarefas usando scripts.

## Integra√ß√£o perfeita com o Windows
O WSL √© integrado perfeitamente ao Windows, o que significa que voc√™ pode acessar facilmente arquivos e recursos do sistema Windows do ambiente Linux e vice-versa. Isso simplifica o processo de desenvolvimento e facilita a colabora√ß√£o com outros desenvolvedores que podem estar usando o Windows ou o Linux.

# Por que abandonar o dual boot

## Maior conveni√™ncia e produtividade
O uso do WSL elimina a necessidade de alternar entre sistemas operacionais usando o dual boot. Isso economiza tempo e torna o processo de desenvolvimento mais conveniente e produtivo, permitindo que voc√™ se concentre em escrever c√≥digo em vez de lidar com configura√ß√µes de sistema complicadas.

## Melhor integra√ß√£o com o Windows
Embora o dual boot ofere√ßa uma maneira de executar sistemas operacionais separados em um √∫nico computador, ele pode ser complicado de configurar e manter. Al√©m disso, o dual boot n√£o oferece a mesma integra√ß√£o perfeita com o Windows que o WSL, o que significa que voc√™ pode enfrentar desafios ao compartilhar arquivos e recursos entre os sistemas operacionais.

## Menor impacto no desempenho do sistema
Executar dois sistemas operacionais em um √∫nico computador usando o dual boot pode ter um impacto significativo no desempenho do sistema, al√©m de voc√™ simplesmente acabar danificando ele por erro de configura√ß√£o ou algum imprevisto de incompatibilidade, especialmente em computadores com recursos limitados. O uso do WSL, por outro lado, n√£o afeta o desempenho do sistema, pois as distribui√ß√µes Linux s√£o executadas como processos isolados no Windows.

Em resumo, o Windows Subsystem for Linux (WSL) oferece uma maneira conveniente e eficiente para desenvolvedores executarem distribui√ß√µes Linux diretamente no Windows. Com o WSL, voc√™ pode aproveitar as vantagens do ambiente de linha de comando do Linux sem sacrificar a integra√ß√£o e a familiaridade do Windows. Ao abandonar o dual boot em favor do WSL, voc√™ pode tornar seu processo de desenvolvimento mais f√°cil, conveniente e produtivo.

Vale lembrar que √© recomend√°vel que voc√™ j√° tenha o b√°sico de conhecimento sobre terminais Linux para utilizar o WSL, j√° que n√£o existe uma interface gr√°fica que pode te ajudar nesse tipo de navega√ß√£o, ficando a merc√™ do pr√≥prio explorer do Windows - na vers√£o do W11, ele j√° aparece o √≠cone de WSL na lateral.

D√∫vidas? Bom, qualquer coisa chama no [Twitter/X](https://twitter.com/Yagasaki7K) ou siga as [documenta√ß√µes da Microsoft](https://learn.microsoft.com/pt-br/windows/wsl/install) para entender melhor como instalar distribui√ß√µes diferentes ou para sanar qualquer outro tipo de d√∫vida.]]></description>
            <link>https://yagasaki.vercel.app//articles/como-instalar-o-wsl</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/como-instalar-o-wsl</guid>
            <pubDate>Sat, 20 Apr 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Simplificando a valida√ß√£o de dados com Zod]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1659896975336-4ff776bedb86?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D "Anastasia Nelen")

Ao desenvolver uma aplica√ß√£o web, uma das tarefas mais comuns √© validar os dados que chegam do cliente para garantir que est√£o corretos e seguros antes de serem processados pelo servidor. Essa valida√ß√£o pode ser complexa e tediosa de implementar manualmente, mas felizmente existe uma solu√ß√£o que torna esse processo muito mais simples e eficiente: o Zod.

## O que √© o Zod?
O Zod √© uma biblioteca de valida√ß√£o de dados para TypeScript que simplifica significativamente o processo de valida√ß√£o de objetos e valores. Com o Zod, √© poss√≠vel definir esquemas de valida√ß√£o de forma f√°cil e intuitiva, utilizando m√©todos encadeados para especificar os requisitos de valida√ß√£o de cada campo.

## Por que usar o Zod?
Simplicidade de Uso. Uma das principais vantagens do Zod √© sua facilidade de uso. Com apenas algumas linhas de c√≥digo, √© poss√≠vel definir e aplicar esquemas de valida√ß√£o complexos, economizando tempo e esfor√ßo no desenvolvimento.

## Flexibilidade e Robustez
O Zod oferece uma ampla gama de m√©todos de valida√ß√£o que permitem especificar uma variedade de restri√ß√µes de forma flex√≠vel e robusta. √â poss√≠vel validar tipos primitivos, objetos aninhados, arrays e muito mais, com suporte para mensagens de erro personalizadas e valida√ß√£o condicional.

## Integra√ß√£o com Ferramentas Populares
O Zod √© amplamente utilizado na comunidade TypeScript e √© integrado nativamente com v√°rias ferramentas e bibliotecas populares. Ele √© o principal meio de valida√ß√£o em projetos TypeScript, incluindo integra√ß√µes com frameworks como Next.js e bibliotecas de formul√°rios como React Hook Form e Formik.

## Como usar o Zod
Usar o Zod √© simples e direto. Basta importar a biblioteca em seu projeto e come√ßar a definir seus esquemas de valida√ß√£o. Aqui est√° um exemplo b√°sico de como validar um objeto com o Zod:

```Typescript
import { z } from 'zod';

const userSchema = z.object({
  name: z.string().min(3),
  email: z.string().email(),
  age: z.number().min(18),
});

const userData = {
  name: 'John',
  email: 'john@example.com',
  age: 25,
};

try {
  const validatedUser = userSchema.parse(userData);
  console.log('Usu√°rio v√°lido:', validatedUser);
} catch (error) {
  console.error('Erro de valida√ß√£o:', error);
}
```

Neste exemplo, definimos um esquema de valida√ß√£o para um objeto de usu√°rio com campos de nome, email e idade. Em seguida, tentamos analisar os dados do usu√°rio com o esquema definido. Se os dados passarem na valida√ß√£o, o objeto validado ser√° retornado. Caso contr√°rio, um erro de valida√ß√£o ser√° lan√ßado.

## Conclus√£o
O Zod √© uma ferramenta poderosa e eficiente para simplificar a valida√ß√£o de dados em projetos TypeScript. Com sua sintaxe intuitiva e flex√≠vel, o Zod torna f√°cil implementar esquemas de valida√ß√£o robustos e confi√°veis, economizando tempo e melhorando a seguran√ßa de suas aplica√ß√µes. Experimente o Zod em seu pr√≥ximo projeto e descubra como ele pode facilitar sua vida como desenvolvedor web.

Essa √© uma breve introdu√ß√£o do Zod. Para saber mais sobre o Zod e come√ßar a us√°-lo em seus projetos, visite o [site oficial](https://zod.dev/).]]></description>
            <link>https://yagasaki.vercel.app//articles/simplificando-a-vida-com-zod</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/simplificando-a-vida-com-zod</guid>
            <pubDate>Wed, 17 Apr 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Conhe√ßa o meu bun/yarn commit e facilite a sua vida]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1629654291663-b91ad427698f?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D "Gabriel Heinzer")

Imagine o seguinte cen√°rio, voc√™ precisa, nessa respectiva ordem, todos os dias que subir um commit seguir uma simples rotina de, verificar se as depend√™ncias
est√£o atualizadas, depois verificar se algo foi quebrado atrav√©s do `build`, subir os arquivos que foram alterados e depois commit√°-los, certo? Isso √© muito
custoso e voc√™ toda hora tem que ficar colocando a data e hora que aquilo aconteceu para ficar bem bonitinho, n√£o √© mesmo?

Ent√£o segue a ideia comigo.

```json
"scripts": {
    "commit": "bun update && 
    bun run vercel && 
    read -p 'Descriptions Commit: ' message && 
    git add . && 
    echo -n \"$message - \" && 
    node getTime.js | xargs -I {} git commit -m \"$message - {}\" && 
    git push"
},

// package.json via Bun
```

Entendeu nada? Ent√£o eu te explico em cada detalhe.

Esse √© um arquivo conhecido como package.json, ele est√° dispon√≠vel sempre que a gente vai construir um projeto usando Vite, React, Next, enfim, ele fica
respons√°vel por colocar cada depend√™ncia que o desenvolvedor vai usar. E por isso, ele tem que estar sempre atualizado.

Nele, adicionamos na aba scripts, o comando "commit", que toda vez que a gente der `yarn commit`, `npm commit` ou `bun commit`, ele ser√° acionado. Mas
o que ele faz? Primeiramente, ele ir√° verificar - no nosso caso do bun - se existe atualiza√ß√µes de depend√™ncias. Se tiver, ele ir√° executar o `bun update` e
ir√° atualizar tudo para a gente, deixando redondinho. 

Ap√≥s isso, ele ir√° rodar o `bun run vercel`, que no meu caso espec√≠fico para o bun, ele ir√° rodar `"vercel": "next build"`, que √© o `build` da aplica√ß√£o
em Next que estou desenvolvendo, ent√£o adapte-se ao que for melhor para voc√™, existem casos que s√≥ o `yarn build`, `npm build` ou `bun build`,  ir√° resolver.

Depois que ele rodar os dois e der tudo certo, ele vai simplesmente pedir para escrever a mensagem que eu quero em seguida, no caso, deixei detalhado que era
a descri√ß√£o do commit para eu n√£o me perder caso eu estivesse distra√≠do, no meu caso, posso colocar como exemplo, `Added: Slug Page`.

Com a mensagem escrita, ele ir√° adicionar os arquivos para o Github atrav√©s do `git add .`, vai colocar a nova mensagem, e vai chamar o `getTime.js` que
nada mais √© que um arquivo em Javascript para colocar a data e a hora do commit, eu vou deixar ele dispon√≠vel aqui embaixo - ele deve ficar na ra√≠z do projeto. Ap√≥s isso, ele ir√° mesclar os dois no `git commit -m`, e vai dar um `git push` para o reposit√≥rio.

```Javascript
const now = new Date();
const day = now.getDate().toString().padStart(2, '0');
const month = (now.getMonth() + 1).toString().padStart(2, '0');
const hours = now.getHours().toString().padStart(2, '0');
const minutes = now.getMinutes().toString().padStart(2, '0');
const formattedDate = `${day}-${month} ${hours}:${minutes}`;

console.log(formattedDate);

// getTime.js
```

Se tudo estiver de acordo e nenhum erro acontecer, tudo passar√° liso. Em casos do `yarn`, quando vamos dar o upgrade, ele geralmente pede para confirmar quais
depend√™ncias queremos atualizar ou se ser√° todas, dando o seguinte comando: `yarn upgrade-interactive --latest`, ai √© s√≥ a gente apertar `A` para selecionar todos, e em seguida dar `Enter` para continuar e ele ir√° instalar e continuar todo o roteiro que a gente criou.

```json
"scripts": {
    "commit": "yarn upgrade-interactive --latest && 
    yarn build && read -p 'Descriptions Commit: ' message &&
    git add . &&
    echo -n \"$message - \" && 
    node getTime.js | xargs -I {} git commit -m \"$message - {}\" &&
     git push"
},

// package.json via Yarn
```

```json
"scripts": {
    "commit": "npm update &&
    npm build &&
    read -p 'Descriptions Commit: ' message && 
    git add . &&
    echo -n \"$message - \" && 
    node getTime.js | xargs -I {} git commit -m \"$message - {}\" && 
    git push"
},

// package.json via NPM
```

O que achou da ideia? Tem alguma sugest√£o para deixar esse script melhor ou at√© mesmo mais sofisticado? Se inventou alguma nova artimanha, 
ou at√© mesmo est√° com d√∫vida, deixe seu grito l√° no [Twitter/X](https://twitter.com/Yagasaki7k) e a gente evolui juntos!]]></description>
            <link>https://yagasaki.vercel.app//articles/bun-yarn-commit</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/bun-yarn-commit</guid>
            <pubDate>Tue, 16 Apr 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Storybook - Como usar e os primeiros passos]]></title>
            <description><![CDATA[
![](https://plus.unsplash.com/premium_photo-1676422355165-d809008b8342?q=80&w=1998&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D "Unsplash+ In collaboration with Ave Calvar")

Vamos entender inicialmente o primeiro cen√°rio para o uso do Storybook, assim como qualquer outra biblioteca,
existia um problema e ele aparece como uma solu√ß√£o, correto?

Imagine que voc√™ precisa ver como foi feito aquele componente especificio, seja um bot√£o, uma barra de navega√ß√£o,
um rodap√© ou at√© mesmo um design de formul√°rio. Mas caramba, em que p√°gina ele foi adicionado? Como ele est√° se 
comportando? Esse tipo de dor de cabe√ßa iremos encontrar principalmente em uma aplica√ß√£o de m√©dia-grande escala.

O motivo? S√£o v√°rios componentes, temos que ficar procurando um por um, e ainda tentar adivinhar aonde que ele
foi adicionado. Claro que podemos usar o search do VS Code e buscar pelo nome dele, filtrar todos os arquivos,
ver que rota aquilo est√° sendo adicionado para depois, enfim, ver como ele √©, qual √© o comportamento e tudo mais.

Deu at√© uma canseira n√©? Pois ent√£o, o Storybook veio para isso. Para facilitar esse esquema. H√° quem diga que
frontend n√£o possui uma forma de fazer testes - at√© porque pra que iremos testar pinturas de bot√µes.

## Introdu√ß√£o

Para quem ainda n√£o entendeu. O Storybook √© uma ferramenta muito √∫til para desenvolvedores de aplica√ß√µes React. Ele
permite criar e testar componentes de forma isolada, sem a necessidade de criar um aplicativo completo. Isso facilita o
desenvolvimento e permite que os desenvolvedores criem componentes reutiliz√°veis e consistentes em suas aplica√ß√µes.

Ficou mais f√°cil? Pegou a ideia? Mas t√°, e como come√ßamos? Para come√ßar a usar o Storybook, precisamos instalar o pacote npm do
Storybook. Isso pode ser feito executando o seguinte comando:

```bash
npx storybook init
```

O Storybook examinar√° as depend√™ncias do seu projeto durante o processo de instala√ß√£o e fornecer√° a melhor configura√ß√£o
dispon√≠vel.

O comando acima far√° as seguintes altera√ß√µes em seu ambiente local:

- Instalar as depend√™ncias necess√°rias.
- Configurar os scripts necess√°rios para executar e construir o Storybook .
- Adicionar a configura√ß√£o padr√£o do Storybook & Adicionar algumas stories padronizadas para voc√™ come√ßar.
- Configurar a telemetria para nos ajudar a melhorar o Storybook. 

Ap√≥s a instala√ß√£o, podemos rodar ele usando `yarn` ou `npm`, se voc√™ sabe trocar a configura√ß√£o para o `yarn`, fique
√† vontade. Mas para n√£o dificultar muito, iremos manter no `npm`, ent√£o, em seu terminal, d√™:

```bash
npm run storybook
```

Talvez apare√ßa uma mensagem pedindo a confirma√ß√£o no processo de instala√ß√£o do Storybook ou pedindo para voc√™ utilizar o
npm7. Voc√™ pode confirmar o avan√ßo digitando ‚Äúy‚Äù. Ele iniciar√° o Storybook localmente e exibir√° o endere√ßo. Dependendo
da configura√ß√£o do seu sistema, ele abrir√° automaticamente o endere√ßo em uma nova guia do navegador e voc√™ ser√° saudado
por uma tela de boas-vindas.

Caso ele n√£o abra automaticamente o endere√ßo em uma nova guia do navegador. Basta acessar a porta que o Storybook
informar√°, no nosso caso √© o http://localhost/:6006/

### Entendendo a estrutura

Perceba que em nossa aplica√ß√£o foram adicionadas duas pastas: `stories` e `.storybook`. Al√©m disso, temos o arquivo `.npmrc`
para trabalhar com vers√µes legados do npm.

Agora vamos entender melhor o que foi gerado pelo Storybook em nossa
aplica√ß√£o antes de documentar algo.

Perceba que dentro da pasta stories temos um arquivo chamado `Introduction.stories.mdx` que √© exatamente a primeira p√°gina
que aparece quando damos o comando `npm run storybook` no terminal.

Para darmos inicio, vamos entrar nesse `Introduction.stories.mdx` e limpar ele, deixando-o apenas simples para iniciarmos
nosso primeiro componente.

```tsx
import { Meta } from "@storybook/addon-docs";

<Meta title="Example/Introduction">
```

Ap√≥s mudar o c√≥digo no arquivo `Introduction.stories.mdx` iremos apagar os arquivos gerado pelo storybook na pasta
`stories`, tamb√©m iremos excluir a pasta `assets` de dentro de stories. Dessa forma, teremos somente o arquivo
Introduction que modificamos.

## Criando componente

Diferente do padr√£o do Storybook que adicionar os componentes na pasta `stories`, iremos adicionar nosso componente em uma
pasta criada por n√≥s. Dentro da pasta `src` criamos a pasta chamada `components`, e dentro de components teremos dois
arquivos: `Button.jsx` e `Button.stories.mdx`

Dentro do arquivo `Button.stories.mdx` iremos colar o mesmo c√≥digo do arquivo `Introduction.stories.mdx` por√©m iremos
modificar alguns detalhes em seu c√≥digo.

```tsx
import { Meta } from "@storybook/addon-docs";

<Meta title="Components/Button" components={Button}/>
```

Mas tenha calma, lembra que deletamos a pasta? Ent√£o, √© claro qu ele ainda n√£o ir√° aparecer em nossa documenta√ß√£o.
Ent√£o, agora precisamos avisar aos Storybook onde ele ir√° encontrar os componente que ser√£o documentados por ele.

Lembra a pasta `.storybook` gerada pelo Storybook na raiz da nossa aplica√ß√£o? Basicamente nela temos nossa configura√ß√£o do
Storybook.

Dentro do arquivo `main.js` iremos mudar e colocar o comando abaixo. Neste c√≥digo estamos falando que nossos componentes
est√£o em algum lugar de dentro da pasta `src` com o formato `stories`.

```js
module.exports = {
    stories: [
        "../src/**/*.stories.mdx", 
        "../src/**/*.stories.@(js|jsx|ts|tsx)"
    ],
}
```

Dependendo da vers√£o do seu Storybook ele ir√° fazer toda essa configura√ß√£o de mudan√ßa de pasta no main.js
automaticamente, se voc√™ reparar quando voltar para o localhost, ver√° que tem um erro, j√° que sempre que mudamos algo de
dentro da pasta `.storybook` temos que reiniciar a documenta√ß√£o, ou seja, finalizar o processo `(Ctrl + C)` e voltar
a rodar novamente com o comando `npm run storybook`.

Pronto! Ap√≥s reiniciar o Storybook teremos a renderiza√ß√£o do nosso arquivo `Button.stories.mdx` em nossa documenta√ß√£o.

Ap√≥s isso, importamos o componente Button dentro do arquivo `Button.stories.mdx` e vamos ver como ele funciona.

```tsx
import { Meta } from "@storybook/addon-docs";
import Button from "../src/components/Button";

<Meta title="Components/Button" components={Button}/>
```

Agora que conseguimos isolar o componente, ser√° poss√≠vel testar ele, mudar o comportamento e fazer uma s√©rie
de funcionalidades que ir√° funcionar como a documenta√ß√£o que precisamos. Claro que, podemos unificar tudo em uma √∫nica
pasta para evitar ter que procurar na mesma pasta do componente, podemos adicionar mais detalhes que o Storybook pode
nos proporcionar como fun√ß√µes Story, Canvas e ArgsTable - [veja a documenta√ß√£o oficial para saber mais.](https://storybook.js.org/docs/get-started)

Enfim, use de acordo com a necessidade do seu projeto, documente-o e se aventure em testar componentes e utilizar
desses exemplos, como uma forma de simplificar o seu trabalho.

Lembrando tamb√©m que at√© o momento utilizamos arquivos no formado `.mdx` mas tamb√©m √© comum encontrar arquivo em `.jsx`
para documentar componentes. O pr√≥prio Storybook utiliza `.jsx` nos exemplos gerado pelo comando `npx storybook init` e
em sua documenta√ß√£o oficial utiliza `.mdx`. Ent√£o, n√£o existe uma forma correta de utilizar, vai de acordo com suas
pessoas da sua equipe ou empresa.

Com este c√≥digo √© poss√≠vel documentar varia√ß√µes de alguns componentes em nossa aplica√ß√£o. Por mais que seja um exemplo
utilizando um Button, a sua estrutura ser√° a mesma para outros elementos no c√≥digo. 

E claro, uma opini√£o minha √© que o Storybook √© muito √∫til para documenta√ß√£o, testes e usadas em ambientes de m√©dia-alta
escala devida a alta cria√ß√£o de componentes, complexidade e funcionalidades espalhadas em uma estrutura. N√£o vejo
necessidade de criar e documentar componentes em aplica√ß√µes pequenas - a n√£o ser que esteja fazendo isso em meios
did√°ticos - ou realmente, tenha chance de seu pequeno projeto come√ßar a se tornar algo complexo e tenha uma quantidade
grande de componentes, mas √© apenas uma opini√£o minha, seja livre para usar e documentar.

Curtiu? Fa√ßa um teste voc√™ mesmo e se aprofunde no Storybook!]]></description>
            <link>https://yagasaki.vercel.app//articles/storybook-primeiros-passos</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/storybook-primeiros-passos</guid>
            <pubDate>Mon, 15 Apr 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Evento da Rocketseat e o uso do Bun]]></title>
            <description><![CDATA[
![Gil Ndjouwou](https://images.unsplash.com/photo-1601034693303-8f8848f3ffa1?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

Bun para quem n√£o conhece, √© um runtime Javascript All-in-One, o que significa? √â que ele faz tudo que o Node faz e um
pouco mais, ele tem sistema de testes, ele tamb√©m tem o pr√≥prio gerenciador de pacotes (package manager) e √© muito mais
r√°pido que `npm` e `yarn`, com a sua vers√£o Bun 1.1, agora ele tamb√©m est√° dispon√≠vel para Windows, ele permite testes
dentro de sua pr√≥pria aplica√ß√£o, algo que o Node demorou um tempo para incrementar, e todos eram ref√©ns do Jest ou
similares.

Claro que ele ainda utiliza algumas coisas do pr√≥prio Node, como o caso do `node:fs` para deletar arquivos ou fazer
algumas necessidades, mas em compara√ß√£o, ele j√° supera e muito o pr√≥prio Node pela absurda velocidade que ele vem
apresentando. Node √© escrito em JavaScript, Python, C, C++ e CoffeeScript, enquanto Bun √© escrito em Zig que para
muitos, al√©m de ser uma experi√™ncia a um escopo bem pequeno, vem trazendo resultados absurdos em compara√ß√£o e as imagens - segundo o Bun - n√£o mentem.

Vale lembrar que tanto Node, quanto Deno, ambos s√£o escritos em cima do V8 do Chrome, enquanto o Bun, √© escrito em cima
do Javascript Core, que √© o motor do Safari, o mesmo motor que √© utilizado at√© mesmo no React Native - biblioteca de
desenvolvimento mobile.

<p align="center">
  <img src="https://github.com/Yagasaki7K/website-nlwunite/assets/23272064/c6e7c0ce-fc58-48d4-81e2-1f412db1c8f2"/>
  <img src="https://github.com/Yagasaki7K/website-nlwunite/assets/23272064/0b00b2ae-31e5-42e1-9efc-389fc7ecd89b"/>
</p>

## Node.js x Bun

Estou aproveitando que est√° acontecendo, nesse exato momento, o evento da Rocketseat e usarei como base apenas a
primeira aula do evento. No evento, criaremos uma aplica√ß√£o de eventos presenciais usando Node, mas gostaria de
aproveitar o espa√ßo e fazer o comparativo, j√° que estamos usando aplicativos reais para fazer o teste, o que √© bem
interessante para ver a quest√£o do peso dessa briga - ao inv√©s de apenas ver tempo de execu√ß√£o de looping, como j√° fiz
anteriormente em [fight-nodexbun](https://github.com/Yagasaki7K/fight-nodexbun).

No reposit√≥rio mencionado, apenas testei a velocidade de instala√ß√£o, a velocidade em adicionar novos m√≥dulos e a
execu√ß√£o dele usando NextJS - framework de frontend - para ver como ambos se comportariam nessa situa√ß√£o. Claro que,
esses dados s√£o bem relativos, j√° que estava usando o Bun v1.0 e o Node v20.12 para fazer o comparativo, al√©m do meu
sistema operacional ser um Windows rodando em WSL, j√° que rodando em uma m√°quina Linux poderia trazer bem mais
resultados significativos. Al√©m do mais, aproveitando que se tratava de NextJS, utilizei tamb√©m do turbopack no
cen√°rio do Node para ver seu comportamento e executar os testes.

Voc√™ pode ver todos os detalhes de como foi a "briga" l√° no README.md do reposit√≥rio.

## NLW Unite e comparativo de c√≥digo

Inicialmente na primeira aula, Diego menciona os comparativos, do uso do Node, do uso do Deno, e do uso do Bun. Ele
menciona que Node √© o que grandes empresas est√£o acostumadas usar, a vantagem do Deno e do Bun √© que ambos j√° possuem
Typescript por padr√£o, o que significa mais seguran√ßa para o c√≥digo e menciona uma desvantagem - da qual n√£o concordo
cem por cento - que Bun √© mantido apenas por uma equipe pequena de desenvolvedores, enquanto o Node j√° est√° mais
tempo no mercado. Tire suas conclus√µes, mas n√£o vou mencionar meu coment√°rio aqui, mas deixarei uma
[thread l√° no Twitter/X em ingl√™s](https://twitter.com/Yagasaki7K/status/1775178680085500262), sobre o assunto.

Logo de come√ßo, tivemos a necessidade de fazer toda a configura√ß√£o do Typescript do lado do Node, enquanto do lado
do Bun isso j√° √© nativo, para quem n√£o est√° acostumado fica at√© chatinho, mas n√£o √© um problema.

Assim que adicionamos o `fastify` na aplica√ß√£o, j√° vemos a velocidade que cada um levou para instalar.

```bash
...
‚îú‚îÄ string_decoder@1.3.0
‚îú‚îÄ thread-stream@2.4.1
‚îú‚îÄ toad-cache@3.7.0
‚îú‚îÄ uri-js@4.4.1
‚îî‚îÄ yallist@4.0.0
Done in 7.32s.
```

```bash
bun add v1.1.0 (5903a614)

installed fastify@4.26.2

63 packages installed [522.00ms]
```

E esse tipo de comportamento j√° surpreende e muito logo de cara, mas como eu j√° fiz essa compara√ß√£o anteriormente, na
briga, como mencionado no reposit√≥rio, n√£o irei entrar nesses detalhes por ora.

Com um exemplo simples, s√≥ pegando o Fastify e o executando na porta 3333, adicionei o `console.time()` e
`console.timeEnd()` para ver quanto tempo toda a execu√ß√£o levou em sua primeira vez, usando o mesmo c√≥digo, tanto em
Node, quanto em Bun e esse foi o resultado:

- Node: Tempo de execu√ß√£o: 13.869ms
- Bun: [12.91ms] Tempo de execu√ß√£o

No script de execu√ß√£o, estamos usando no Node `tsx src/server.ts`, enquanto no Bun, estamos usando `bun run server.ts`

Claro que √© uma diferen√ßa bem pouca, mas vamos aprofundar mais. O que foi usado no c√≥digo?

```ts
console.time("Tempo de execu√ß√£o");

import fastify from "fastify";

const app = fastify();

app.get("/", () => {
  return "Hello World!";
});

app.listen({ port: 3333 }).then(() => {
  console.log("HTTP server running on http://localhost:3333");
  console.timeEnd("Tempo de execu√ß√£o");
});
```

Apenas isso, a conclus√£o com base nisso varia muito a baixo n√≠vel do qual eu n√£o tenho conhecimento para falar sobre,
mas acredito que se tratando de uma biblioteca externa - caso do Fastify - isso pode levar a uma altera√ß√£o na resposta
definitiva, diferente de estarmos usando o Node "puro" e o Bun "puro" para fazer a compara√ß√£o, mas como estamos usando
compara√ß√£o com projetos reais, n√£o vem ao caso.

Mas e a n√≠vel de projeto, usando mais bibliotecas, mais rotas, mais funcionalidades. Como ficaria o tempo de execu√ß√£o?

Levando em considera√ß√£o que adicionamos at√© agora: Prisma, Fastify Swagger UI e o Fastify Swagger, al√©m de ter feito toda a configura√ß√£o do
banco de dados, ent√£o, ficou um tempo para ter cache, al√©m de executar esses comandos com o servidor desligado, ele
n√£o est√° rodando junto com as instala√ß√µes e migrations.

### Primeira Migration
- Node: ‚úî Generated Prisma Client (v5.12.0) to ./node_modules/@prisma/client in 35ms
- Bun: ‚úî Generated Prisma Client (v5.12.0) to ./node_modules/@prisma/client in 33ms

### Instalando Fastify Swagger
- Node: ‚îú‚îÄ openapi-types@12.1.3 ‚îî‚îÄ yaml@2.4.1 | Done in 4.07s.
- Bun: installed @fastify/swagger@8.14.0 // 5 packages installed [414.00ms]

### Fastify Swagger UI
- Node: ‚îú‚îÄ wrap-ansi-cjs@7.0.0 ‚îî‚îÄ wrap-ansi@8.1.0 | Done in 3.12s.
- Bun: installed @fastify/swagger-ui@3.0.0 // 48 packages installed [679.00ms]

### Fastify Cors
- Node: ‚îú‚îÄ mnemonist@0.39.6 ‚îî‚îÄ obliterator@2.0.4 | Done in 5.69s.
- Bun: installed @fastify/cors@9.0.1 // 3 packages installed [2.09s]

Fora esses detalhes, apenas fizemos uma requisi√ß√£o usando HTTP Client para criar uma tabela no banco, mas como isso, n√£o
envolve o uso do Bun ou do Node, acredito que n√£o far√° diferen√ßa. Claro que, ainda adicionarei detalhes vistos nas
outras aulas na parte de conclus√£o, mas por enquanto √© isso.

## Conclus√£o com base na Primeira Aula
Vejo que sim, se voc√™ for desenvolvedor Node, voc√™ ter√° praticamente ZERO problemas para migrar para o bun, exceto, em
ficar decorando vicios de chamadas como o meu caso de `yarn dev` ou outros scripts, mas fora isso, acredito que a
mudan√ßa √© t√£o ligeira que √© quase insignificante no meio do desenvolvimento e durante a cria√ß√£o, claro que instala√ß√£o de
grandes bibliotecas e modulos, isso pode fazer uma mudan√ßa significativa, mas para chegar a esse n√≠vel, o projeto tem
que estar absurdamente grande para vermos a real diferen√ßa entre os dois.

Se ainda tiver em d√∫vidas como foi feito o projeto, e queira clonar para testar na sua pr√≥pria m√°quina
Linux/Windows/Mac, voc√™ pode acessar o reposit√≥rio da aplica√ß√£o que desenvolvi com a Rocketseat na
[pr√≥pria p√°gina do reposit√≥rio](https://github.com/Yagasaki7K/website-nlwunite) e testar por voc√™ mesmo.

Como ando dizendo, as tecnologias est√£o evoluindo muito r√°pido, ent√£o, n√£o sou o dono da verdade, estou apenas usando
com base no que eu vejo, e no que eu aplico no dia a dia, fique √† vontade para me questionar.

## Conclus√£o Finais

Bun √© sim, muito veloz em compara√ß√£o ao `npm` em v√°rios aspectos, o que faz eu desejar, claro, trocar o runtime do
Javascript que uso nos meus projetos. Ainda mais se tratando de Typescript, ele e muito mais perform√°vel que o Node,
por vir de forma nativa e claro, ele informa at√© mesmo quando as importa√ß√µes s√£o de tipagens e elas precisam
ser definidas como `type`, na hora da importa√ß√£o.

Outro fator que eu vi, √© que durante o `building` do desenvolvimento na Vercel, a velocidade dele na hora de instalar,
fazer as configura√ß√µes e tudo mais, que √© na hora que a gente faz o commit do projeto, ele √© absurdamente mais veloz,
superando at√© o mesmo o `turbopack` da pr√≥pria Vercel.

Ent√£o minha recomenda√ß√£o √©, vale a pena utilizar o Bun para aplica√ß√µes em pequena e m√©dias escalas, para evitar
problemas futuros de manuten√ß√£o. Incluindo algumas abordagens que ele faz no Typescript que s√£o mais restritas
do que o pr√≥prio `npm` ou `yarn` em si, mas s√£o detalhes e nada que o costume n√£o supere esses pequenos detalhes que fazem
diferen√ßa em uma aplica√ß√£o de grande escala.
]]></description>
            <link>https://yagasaki.vercel.app//articles/minha-experiencia-com-bun</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/minha-experiencia-com-bun</guid>
            <pubDate>Tue, 02 Apr 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como criar um blog usando Github Pages + Obsidian + Quartz]]></title>
            <description><![CDATA[
![Glenn Carstens-Peters](https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?q=80&w=2072&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

A grande dificuldade de muitos desenvolvedores que est√£o iniciando √©, aonde compartilhar meu conhecimento? Eu crio um blog? Eu uso o Medium? Eu uso o Dev.to? O
que fazer? Bom, vamos para a solu√ß√£o mais bonita que √© ter seu pr√≥prio blog. Claro que eu n√£o vou diminuir quem cria conte√∫do em outros lugares, mas
centralizar seu conhecimento √© a melhor op√ß√£o.

Vamos l√°, o que vamos precisar?

# Ferramentas

## Github Pages

O Github Pages √© um servi√ßo do Github que nos possibilita hospedar sites est√°ticos, normalmente utilizado para hospedar documenta√ß√£o dos projetos nos reposit√≥rios git, ele nos possibilita renderizar tanto p√°ginas HTML quanto em Markdown.

**Site oficial:** https://pages.github.com/

## Obsidian

O Obsidian √© um aplicativo de anota√ß√£o, o segredo √© que ele gera os arquivo em Markdown uma pe√ßa chave para novo prop√≥sito. Claro que podemos utilizar,
os pr√≥prios arquivos .md/.mdx ou usar o Notion, mas isso √© outro tutorial.1

**Site oficial:** https://obsidian.md/
### Quartz

O Quartz √© um gerador de site est√°ticos, o pulo do gato √© que ele ser√° encarregado de pegar nosso arquivos de anota√ß√µes gerado em Markdown pelo nosso Obsidian e converter√° em HTML, s√≥ que ele n√£o faz apenas isso. Ele √© customiz√°vel e adiciona algumas funcionalidade ao nosso blog como grade de laytout, menus, barra de busca, tema escuro e claro, al√©m de outras customiza√ß√µes que voc√™ pode estar fazendo. Se preferir de uma olhada na documenta√ß√£o para mais detalhes e n√£o se esque√ßa de dar uma estrelinha no reposit√≥rio do projeto.

**Documenta√ß√£o:** https://quartz.jzhao.xyz/  -  **Github:** https://github.com/jackyzha0/quartz

# Fluxo de Postagem

O fluxo funcionar√° da seguinte forma: Obsidian > Commit Push > Deploy Github Actions

1. Criar/editar seu arquivos no obsidian
2. Fazer o commit e fazer o push para seu reposit√≥rio online
3. Rodar pipeline no Github Actions para fazer o deploy das altera√ß√µes

<!--truncate-->

# Configura√ß√£o do reposit√≥rio

1 - Para come√ßar primeiramente vamos precisar que voc√™ entre no reposit√≥rio do Quartz e fa√ßa um fork do projeto e que o reposit√≥rio esteja p√∫blico.

Reposit√≥rio: [https://github.com/jackyzha0/quartz](https://github.com/jackyzha0/quartz)

Nessa parte √© essencial que voc√™ coloque o nome se seu usu√°rio do github mais sufixo **.github.io** para que o Github entenda que esse reposit√≥rio funcionar√° como um site est√°tico. No meu caso ficar√° assim, pois j√° tenho um blog configurado:

```
meublog.github.io
```

No seu caso ficar√° assim:

```
seunomedeusuario.github.io
```

2 - Em seu computador fa√ßa o clone de seu reposit√≥rio.

```
git clone https://github.com/[seu_usu√°rio]/[seu_reposit√≥rio]
```

3 - Navegue at√© pasta de seu projeto e abra ele no seu IDE/Editor de C√≥digo.

4 - No terminal e acessando a pasta do projeto, instale as depend√™ncias e rode a aplica√ß√£o para ver se est√° tudo rodando normalmente.

````
npm install
npx quartz build --serve
````
Ap√≥s o √∫ltimo comando se tudo estiver rodando perfeitamente, ele estar√° na porta 8080

http://localhost:8080/

Agora que nosso blog est√° rodando, vamos pular para a configura√ß√£o do Obsidian, depois voltamos para nosso editor e faremos algumas altera√ß√µes em nosso projeto. Pois como voc√™ pode ver, n√£o h√° conte√∫do na pasta  **/content** do nosso reposit√≥rio e ao tentar cessr receberemos um 404 - Page Not Found.

# Configurando o Obsidian

Estou imaginando que voc√™ j√° fez a instala√ß√£o do Obsidian, se n√£o fez, instale e o configure, n√£o vou me ater a formata√ß√£o e usabilidade da ferramenta pois j√° tem bastante conte√∫do na internet sobre isso, nosso ponto principal aqui √© a cria√ß√£o de um novo cofre. 

1- Abra o Obsidian e selecione op√ß√£o para criar um novo cofre, o qual dedicaremos apenas ao blog.

2 - Ap√≥s clicar nessa op√ß√£o, navegue at√© pasta de nosso projeto/reposit√≥rio git que fizemos o clone e pelo Obisian selecione a pasta **content**, isso far√° que tudo que criarmos agora em nosso Obsidian ser√° salvo na pasta do nosso projeto onde o Quartz buscar√° o conte√∫do para gerar nosso blog. 

Claro que n√£o precisamos usar o Obsidian exclusivamente para fazer edi√ß√µes de markdown, mas estamos optando por ser uma boa interface gr√°fica para fazer a edi√ß√£o, e claro, se voc√™ j√° tem o costume de usar no seu cotidiano, fica mais f√°cil.

3 - Para verificar que tudo ocorreu bem, comece criando um arquivo com um conte√∫do, crie um arquivo com o nome **index** pois o Quartz precisa que este arquivo esteja presente. Depois crie um segundo arquivo com o nome de sua prefer√™ncia

4- Ap√≥s ter criando alguns arquivos volte para seu editor de c√≥digo e verifique a pasta **content**, deve aparecer os arquivos de configura√ß√£o do Obsidian e os arquivos que voc√™ criou.

5 - Agora que os arquivos est√£o sendo salvos no lugar adequado, vamos conferir o resultado em nosso navegador, recarregue p√°gina e veja que nosso blog j√° est√° funcionando. Para teste crie novos pasta/arquivos/conte√∫do e veja a m√°gica acontecer. 

# Removendo arquivos do projeto

Como realizamos um fork do reposit√≥rio principal, h√° alguns arquivos que precisamos remover/modificar que n√£o usaremos e que server para
gerenciamento do projeto principal. Segue a lista a abaixo:

1 - Remover a pasta **docs** (opcional)
Se voc√™ for utilizar para documentar erros que tem no cotidiano ou at√© mesmo para usar de Zettelkasten para anota√ß√µes de estudo, voc√™ pode deixar.

2 - Editar o README.md (opcional)
Se o seu blog ficar p√∫blico, deixe bem apresent√°vel essa parte, caso queira que outras pessoas se beneficiem do c√≥digo e como fazer para rod√°-lo.

3 - Remover todos os arquivos da pasta **.github**

# Configurando Github Pages

Agora vamos realizar a configura√ß√£o do Github Pages para que possamos publicar nosso blog est√°tico online, siga os passos a baixo.

1 - Entre em seu reposit√≥rio, e em seguida v√° na aba **Settings**

2 - No menu lateral esquerdo, na se√ß√£o **Code and automation** clique na aba **Pages**.

3 - Na p√°gina do Github Pages voc√™ deve fazer alguma configura√ß√µes, a primeira e mais importante √© selecionar a origin em nosso **Build and deployment** no nosso caso estaremos utilizando o Github Actions, por isso o selecione.

4 - Agora vamos configurar o arquivos de **build e deploy**, em nosso editor, v√° na pasta **.github** crie uma pasta chamada **workflows** e depois crie um arquivo dentro dessa pasta chamado **deploy.yml**.

4 - Agora cole o seguinte conte√∫do dentro do arquivo **deploy.yml**, esse arquivo cont√©m as configura√ß√µes de build e deploy de nosso blog, elas s√£o utilizadas pelo Github Actions, √© como se fosse uma receita de bolo para nossa pipeline para o que deve fazer sempre que tiver alguma altera√ß√£o. Para mais informa√ß√µes e detalhes voc√™ pode estar lendo a documenta√ß√£o:

GitHub Actions: https://github.com/features/actions

Github Pages: https://pages.github.com/

Quartz: https://quartz.jzhao.xyz/hosting

```yml
name: Deploy Quartz Site to GitHub Pages
 
on:
  push:
    branches:
      - main
 
permissions:
  contents: read
  pages: write
  id-token: write
 
concurrency:
  group: "pages"
  cancel-in-progress: false
 
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for git info
      - uses: actions/setup-node@v3
        with:
          node-version: 18.14
      - name: Install Dependencies
        run: npm ci
      - name: Build Quartz
        run: npx quartz build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: public
 
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
```

5 - Depois do passo anterior fa√ßa o commit das altera√ß√µes realizadas e envie para o Github

```bash
git add -A
git commit -m "Added: Settings on Github Actions"
git push
```

6 - Se voc√™ entende um pouco do Github Actions, d√™ uma olhada no arquivo. Percebeu que nosso Gihub Actions
n√£o foi executado? Isso ocorreu porque quando voc√™ faz o fork do reposit√≥rio principal a branch principal do reposit√≥rio √© a **v4**, para deixarmos como principal a branch **main** vamos criar um nova branch.

```bash
git branch main
git checkout main
git push origin main
```

7 - Entrando na aba **actions** do reposit√≥rio voc√™ ver√° que nosso action foi executada, por√©m no passo de deploy ocorreu um erro.

8 - Para corrigir isso vamos definir a branch **main** como nossa branch principal. Na op√ß√£o **Default branch** escolha a **main**, selecionando a op√ß√£o **switch to another branch**

9 - Depois de criada e definida como principal a branch main, voc√™ deve ir na aba **Settings** e selecionar a se√ß√£o 
**Environments** haver√° uma j√° criada, exclua ela para que possamos criar outra, pois a atual est√° configurada para a branch antiga a **v4**.

10 - Agora que n√£o h√° nenhum ambiente configurado clique em **New environment**

11 - Agora de um nome ao seu ambiente, no meu caso estou dando o nome de: **github-pages**

12 - Ap√≥s criado seu ambiente, precisamos definir a branch para esse ambiente. Fa√ßa isso
dentro do ambiente que foi criado no passo anterior, na se√ß√£o **Deployment branches and tags**
clique no bot√£o **No restriction** e depois selecione **Selected branchs and tags**.

13 - Agora adicione a branch main clicando na op√ß√£o **Add deployment branch or tag rule**

14 - Como √∫ltimo passo, volte at√© a aba **Actions** do seu reposit√≥rio ent√£o selecione o workflow que deu falha

15 - No canto superior direito clique em **Re-run jobs** ent√£o selecione a op√ß√£o **Re-run all jobs**, ent√£o seus trabalhos ser√£o executados novamente.

Parab√©ns seu blog foi publicado!

Para acessar, clique no link mostrado no card do deploy, agora √© s√≥ seguir o fluxo de altera√ß√£o e ir publicando em seu blog. Para saber como personalizar seu blog de uma olhada na documenta√ß√£o do Quartz. 

# Refer√™ncias

- [Quartz Documenta√ß√£o](https://quartz.jzhao.xyz/)
- [Github Pages Documenta√ß√£o](https://pages.github.com/)
- [Branch "x" is not allowed to deploy to github-pages due to environment protection rules](https://github.com/orgs/community/discussions/39054)
- [How to publish your notes for free with Quartz](https://youtu.be/6s6DT1yN4dw?si=OFLyaXoqnDVrF75B)]]></description>
            <link>https://yagasaki.vercel.app//articles/como-criar-seu-blog</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/como-criar-seu-blog</guid>
            <pubDate>Fri, 29 Mar 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Notifica√ß√£o autom√°tica da Twitch para o Discord]]></title>
            <description><![CDATA[
![Caspar Camille Rubin](https://images.unsplash.com/photo-1527334919515-b8dee906a34b?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

Neste artigo, irei te ensinar a enviar notifica√ß√£o no seu canal do Discord para todo o momento em que sua live estiver online,
claro que recomendo que seja a sua live ou de algu√©m muito conhecido - n√£o para meios comerciais - por conta da quantidade
de uma applet/receita dentro da plataforma - no m√°ximo dois na free tier.

## Parte 1 - Registrar no IFTTT
Acesse [https://ifttt.com/](https://ifttt.com/) e crie uma conta (se ainda n√£o tiver uma)

<!--truncate-->

## Parte 2 - Criar um Webhook do Discord
- Encontre o canal do Discord para o qual voc√™ gostaria de enviar os tweets.
- Nas configura√ß√µes desse canal, encontre a op√ß√£o Webhooks e crie um novo webhook.
  **Observa√ß√£o: Este URL deve ser mantido _privado_. Permite que qualquer pessoa escreva mensagens nesse canal espec√≠fico usando esse URL espec√≠fico.** Mantenha-o seguro!

  ![WebhookDiscord](http://i.imgur.com/PZE2wFu.png)
- Nomeie o webhook como quiser e fique √† vontade para alterar a imagem de perfil gen√©rica. Escolhi [este √≠cone](https://cdn1.iconfinder.com/data/icons/micon-social-pack/512/twitch-128.png) porque se encaixa bem no c√≠rculo.
- Copie o URL para algum lugar e mantenha-o √† m√£o para a pr√≥xima etapa.

## Parte 3 - Criar um novo applet/receita no IFTTT
1. Acesse [aqui](https://ifttt.com/create) para criar um novo "Applet".
2. Clique no grande azul "[+] This" e escolha "Twitch" (use a barra de pesquisa para encontr√°-lo rapidamente).
3. Conecte sua conta, se necess√°rio.
4. Escolha "Nova transmiss√£o iniciada por voc√™" (deve ser a segunda op√ß√£o da esquerda para a direita).
5. Clique no grande azul "[+] That" e escolha "Webhooks".
6. Escolha "Fazer uma solicita√ß√£o web" (deve ser a √∫nica op√ß√£o).
7. Preencha os seguintes detalhes:
   - **URL:** _[seu URL da "parte 2" acima]_
   - **M√©todo:** POST
   - **Tipo de conte√∫do:** `application/json`
   - **Corpo:** _[veja o trecho abaixo]_
8. Clique em "Criar a√ß√£o".
9. Pronto!

#### Trecho para o "Corpo"
Os webhooks s√£o super personaliz√°veis e permitem criar visuais bastante detalhados. No entanto, seu formato tamb√©m √© um pouco complexo de acertar sem testes extensivos, ent√£o aqui est√° um modelo que seria √∫til para a maioria das pessoas:

```json
{
  "content": "{{ChannelName}} foi ao vivo no Twitch",
  "embeds": [{
    "title": "{{ChannelUrl}}",
    "url": "{{ChannelUrl}}",
    "color": 6570404,
    "footer": {
      "text": "{{CreatedAt}}"
    },
    "image": {
      "url": "{{StreamPreview}}"
    },
    "author": {
      "name": "{{ChannelName}} est√° transmitindo agora"
    },
    "fields": [
      {
        "name": "Jogando",
        "value": "{{Game}}",
        "inline": true
      },
      {
        "name": "Iniciado em (fuso hor√°rio do streamer)",
        "value": "{{CreatedAt}}",
        "inline": true
      }
    ]
  }]
}
```

Este trecho que produzimos, ir√° criar uma notifica√ß√£o personalizada como abaixo - usamos o canal do xQcow como exemplo:

<p align="center">
<img src="https://gist.githubusercontent.com/smiley/78c1c2a57d17a179a978a1438b389710/raw/screenshot_discord_webhook_template.png"/>
</p>

### Mensagem Personalizada
Caso queira ter uma mensagem personalizada para alguma categoria, troque a vari√°vel pela mensagem que desejar.

Um exemplo, √© substituir o content para aquilo que quiser. 

Ao inv√©s de `{{ChannelName}} foi ao vivo no Twitch`, mudaremos para `{{ChannelName}} est√° ao vivo no Twitch!`, por exemplo.

## Mostrar sua foto de perfil da Twitch no incorporado (avan√ßado)
Se voc√™ deseja mostrar sua foto de perfil do Twitch na caixa:

1. Acesse o Twitch
2. Clique com o bot√£o direito do mouse em sua foto de perfil no canto superior direito:

<p align="center">
<img src="https://gist.githubusercontent.com/smiley/78c1c2a57d17a179a978a1438b389710/raw/screenshot_twitch_userarea.png"/>
</p>

3. Clique em "Copiar endere√ßo da imagem"
4. Cole esse endere√ßo neste blob em vez de `<URL_DA_IMAGEM>`:

```JSON
"thumbnail": {
  "url": "<URL_DA_IMAGEM>"
},
```

1. Cole esse blob abaixo da √°rea image no blob principal, para que essa parte mude de:

```JSON
    "footer": {
      "text": "{{CreatedAt}}"
    },
    "image": {
      "url": "https://static-cdn.jtvnw.net/previews-ttv/live_user_{{ChannelName}}-1280x720.jpg"
    },
    "author": {
      "name": "{{ChannelName}} est√° transmitindo agora!"
    },
```

Para isso:

```JSON
    "footer": {
      "text": "{{CreatedAt}}"
    },
    "image": {
      "url": "https://static-cdn.jtvnw.net/previews-ttv/live_user_{{ChannelName}}-1280x720.jpg"
    },
    "thumbnail": {
      "url": "<URL_DA_IMAGEM>"
    },
    "author": {
      "name": "{{ChannelName}} est√° transmitindo agora!"
    },
```

**Observa√ß√£o**: O endere√ßo da imagem que voc√™ acabou de usar para sua foto de perfil do Twitch pode parar de funcionar se voc√™ mudar sua foto. Ent√£o √©
recomendado que pegue a imagem URL do seu perfil do Twitch - toda vez que alterar - e cole no blob principal.

## Cr√©ditos

- Este guia foi adaptado deste [guia do YouTube para Discord via IFTTT](https://gist.github.com/Godimas/ae8e7c7cbd6236622c777d6bcb7a6748).
- O √≠cone do webhook do Twitch √© cortesia da FIVEicons LLC e est√° dispon√≠vel sob uma licen√ßa CC-BY 2.5 aqui: [https://www.iconfinder.com/icons/318551/twitch_twitch.tv_icon](https://www.iconfinder.com/icons/318551/twitch_twitch.tv_icon).]]></description>
            <link>https://yagasaki.vercel.app//articles/notificacao-automatica-twitch</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/notificacao-automatica-twitch</guid>
            <pubDate>Mon, 18 Mar 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Cultivar a Semente ou usar um Kit de Ferramentas?]]></title>
            <description><![CDATA[
![Dell](https://images.unsplash.com/photo-1593642532842-98d0fd5ebc1a?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

Neste artigo, exploraremos duas abordagens distintas para lidar com desafios e projetos complexos, utilizando a analogia do processo de desenvolvimento com dois modelos diferentes: o Modelo "Cultivar a Semente" e o Modelo "Kit de Ferramentas".

## Cultivar a Semente x Kit de Ferramentas

O modelo "Cultivar a Semente" a gente pode assimilar com o processo de cultivar uma planta a partir de uma semente. Ele envolve tentativas, erros, aprendizado, experimentos e constante melhoria. Assim como uma planta cresce e se desenvolve ao longo do tempo, este modelo exige paci√™ncia, persist√™ncia e dedica√ß√£o para alcan√ßar o resultado desejado, mas relaxe, nem sempre conseguimos conquistar isso e entra o modelo "Lixo x Tesouro", mas vamos voltar a compara√ß√£o dos dois modelos anteriores. A forma de cultivar a semente, √© como se estiv√©ssemos construindo algo do zero, enfrentando desafios e aprendendo com cada desafio no caminho. Essa metodologia proporciona uma profunda imers√£o no projeto, permitindo a constru√ß√£o de uma base s√≥lida de conhecimento e experi√™ncia.

Por outro lado, o Modelo "Kit de Ferramentas" representa uma abordagem mais simplificada e eficiente. Imagine que voc√™ j√° tenha criado uma s√©rie de modelos prontos para uso. Quando um novo projeto surge, voc√™ pode simplesmente selecionar e adaptar esses modelos conforme necess√°rio, seria mais f√°cil tentar furar uma parede do seu jeito ou usar uma ferramenta de pronta para isso? Claro, vamos economizar tempo e esfor√ßo, no entanto, essa praticidade tem suas limita√ß√µes. Se surgir um problema inesperado ou uma necessidade espec√≠fica, pode ser dif√≠cil lidar com isso sem a base de conhecimento e experi√™ncia adquirida por meio do Cultivar a Semente.

<!--truncate-->

A diferen√ßa entre os dois modelos √© o desafio versus a praticidade. Enquanto o Cultivar a Semente oferece uma jornada desafiadora, repleta de aprendizado e crescimento por si s√≥, o Modelo Kit de Ferramentas proporciona uma solu√ß√£o r√°pida e pr√°tica, com pouca parte aprofundada. No entanto, √© importante reconhecer que o caminho mais f√°cil nem sempre √© o mais adequado. Voltar ao Cultivar a Semente pode ser necess√°rio para resolver problemas complexos ou alcan√ßar novos patamares de excel√™ncia, no entanto, √© claro, temos que dar dois passos para tr√°s para avan√ßarmos cinco a frente e esse tipo de coisa, pode acabar desanimando muita gente. Voc√™ escolher usar o kit de ferramentas, quando na verdade precisa cultivar a semente pode te causar um tempo de estudo, aprendizados e erros que poder√£o ser cruciais para voc√™, ou n√£o, vemos isso em "Interprete as coisas como um curso". Portanto, √© essencial encontrar um equil√≠brio entre essas abordagens, escolhendo a mais adequada para cada projeto e desafio que surgir.

## Interprete as coisas como um curso
Imagine que voc√™ gastou horas, dinheiro em fazer um projeto para um cliente - esse cen√°rio j√° aconteceu comigo - voc√™ passou noites em claro, estudou coisas que jamais teria estudado se n√£o fosse esse projeto em espec√≠fico e se dedicou, mas por algum motivo, o cliente simplesmente desistiu e n√£o quer mais o projeto. Como voc√™ interpretaria essa a√ß√£o? Para muitos, foi tempo e dinheiro jogados fora? Certo? Pode at√© ser, mas tente ver por uma perspectiva diferente, tente imaginar e interpretar as coisas como um curso. Voc√™ n√£o gastou tempo e dinheiro atoa, voc√™ simplesmente participou de um curso, aonde a l√≥gica que voc√™ incrementou e estudou, foram os respons√°veis por te dar essa did√°tica. Ent√£o voc√™ n√£o gastou, vamos supor, quinhentos reais em um projeto e perdeu esse dinheiro, o que de fato aconteceu, foi que voc√™ pegou quinhentos reais e investiu em um curso aprofundado sobre a √°rea em quest√£o, e agora, por mais que voc√™ saiba apenas a ponta daquela √°rea em especifica, voc√™ tem a capacidade de desenvolver v√°rias outras aplica√ß√µes em cima desse aprendizado ou voc√™ pode simplesmente, criar uma kit de ferramenta para esse tipo de projeto. √â incr√≠vel, n√£o √©?

## Lixo x Tesouro
T√°, mas aonde entra a quest√£o do Lixo e Tesouro nessa quest√£o? Existem muitas pessoas que v√£o chegar para voc√™ e dizer que o tempo que voc√™ gastou com aquele projeto ou ter interesse em um determinado assunto foi por √°gua a baixo, mas n√£o √© bem assim. Para voc√™, foi um tempo precioso, mas foi recompensado de outra maneira, certo? Vamos pensar assim, √© claro. Enquanto para a outra pessoa, foi um lixo, uma total perda de tempo pra voc√™. E √© assim que funciona as coisas. Muitos assuntos, ideias de projetos e at√© mesmo abordagens, podem ser consideradas um lixo PARA AQUELA PESSOA e n√£o para voc√™, da mesma maneira que o assunto que ela tanto gosta pode ser um lixo para voc√™ e valioso para ela e est√° tudo bem. A ideia que Deschamps passa √© para evitarmos tentar viver no mundo das outras pessoas e tentar viver o nosso da nossa maneira, seja para pegar coisas lixos e transformar em tesouro ou at√© mesmo pegar o tesouro e transformar em lixo, mas independente das duas, ambas, ser√£o experi√™ncia, lembre-se disso.]]></description>
            <link>https://yagasaki.vercel.app//articles/cultivar-a-semente-ou-usar-um-kit-de-ferramentas</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/cultivar-a-semente-ou-usar-um-kit-de-ferramentas</guid>
            <pubDate>Sat, 16 Mar 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Evento do NodeBR em Campinas - Frontend Universe]]></title>
            <description><![CDATA[
![Anderson Marlon](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/6e1276cf-a8ea-4290-a8db-6dee6f93b3a8)

No dia primeiro de mar√ßo ocorreu o Front-end Universe pela NodeBR com o apoio do iFood, mas o que isso significa para
as pessoas que nunca estiveram em um evento desses ou que s√£o juniors, mas tem vergonha de comparecer ou at√© mesmo
acha que vai ficar perdido em um evento de tecnologia desse n√≠vel?

Bom, voc√™ n√£o vai ficar perdido e √© um evento para todos os n√≠veis. Uma das not√≠cias boas √© que o NodeBR, pretende
trazer mais eventos como esse para Campinas, o que √© um presente, j√° que na maioria das vezes, os eventos s√£o em S√£o
Paulo e at√© mesmo eu, n√£o tenho disponibilidade ou o financeiro para estar presente.

Vamos l√°.

<!--truncate-->

## O que √© o NodeBR?
NodeBR √© uma comunidade brasileira de Javascript para quem tem interesse em aprender e se aprofundar. O foco √©
literalmente ajudar outros desenvolvedores atrav√©s de eventos, meetups e confer√™ncias, sempre trazendo um assunto novo,
uma abordagem diferente para os curiosos e coisas assim. A comunidade tem grandes pessoas envolvidas nesse time, como
Erick Wendel, Ana Neri, Lucas Santos, Monica Craveiro de Menezes, Mayumi Shingaki, Natiely Alves e Denis Velrino - As
redes dos membros da equipe est√£o em [https://nodebr.org/](https://nodebr.org/). Claro, que esse time √© muito maior,
existe uma s√©rie de volunt√°rios que ajudam e est√£o presentes nesses eventos e que fazem toda a diferen√ßa na quest√£o da
organiza√ß√£o e apresenta√ß√£o desses eventos.

## Front-end Universe
Mas o que aconteceu nesse evento em Campinas?

√Äs 19hrs at√© 19h10 teve o Credenciamento e abertura com a NodeBR, mostrando todo o cen√°rio que a NodeBR atua, seus objetivos,
e o que podemos fazer para melhorar e ajudar essa comunidade. 

√Äs 19h10 - 19h15 tivemos a Abertura Ifood, com Rafael Ireno, que explicou toda a jornada e os objetivos do iFood, as
tecnologias que trabalham e j√° trabalharam dentro da empresa e a inten√ß√£o de apoiar ainda mais o NodeBR para futuros
eventos.

![Paula Bonini](https://pbs.twimg.com/media/GHbg3IMWMAE8sNk?format=jpg&name=4096x4096)

√Äs 19h15, tivemos a Paula Bonini que apresentou o Frontend Al√©m do C√≥digo, explicando a necessidade da diversidade nos
times, qual √© o seu papel dentro do time, levando em considera√ß√£o todas as posi√ß√µes envolvidas e o que fazer quando essa
aus√™ncia existe. 

A empatia com os "n√£o-techs", como √© o caso de trabalhar com dois times em que um n√£o existe contato algum
com desenvolvimento e programa√ß√£o. Qual √© a abordagem que deve ser feita com isso. 

A necessidade e import√¢ncia de participar dos ritos que nada mais √© que participar de reuni√µes e refinamentos mesmo que
sejam focadas em outro setor da sua empresa, mas que ainda sim, possuem contato com voc√™ no futuro, e ter
conhecimento de toda a produ√ß√£o do produto e a solu√ß√£o, e possivelmente esclarecer d√∫vidas e esclarecimentos que podem
ser evitados antes de chegar de fato no seu setor.

E por √∫ltimo, mas n√£o menos importante, a experi√™ncia do usu√°rio, a padroniza√ß√£o da aplica√ß√£o, e coer√™ncia de novos
prot√≥tipos. Conhecer a sua aplica√ß√£o, seu cliente, a forma como ele utiliza uma aplica√ß√£o e entender o que de
fato precisa melhorar baseado no hist√≥rico de dificuldade e reclama√ß√µes do usu√°rio.

![Rafael Paiva](https://pbs.twimg.com/media/GHV37c4WcAAdNrC?format=jpg&name=4096x4096)

√Äs 19h45, tivemos com Rafael Paiva as Novidades no Angular 2024, tamb√©m conhecido como "Momentum" ou "Renaissance",
desde o ano passado o framework vem trazendo updates significativos buscando melhorar performance e simplificar o
aprendizado inicial na ferramenta, diminuindo a curva de aprendizado e facilitando o entendimento para quem est√°
come√ßando. Dentre as novidades temos: Standalone Components, Signals, New Built-in Control-Flow e Deferrable Views, al√©m
de uma nova marca, nova documenta√ß√£o com tutoriais e a caminho de permitir aplica√ß√µes Full Zoneless.

Depois tivemos um Coffee Break para conhecermos todo o pessoal que estava no evento.

![Daniel Freitas](https://pbs.twimg.com/media/GHgMJesWIAASfPT?format=jpg&name=4096x4096)

E por √∫ltimo, O impacto do front na vida do entregador com Daniel Freitas, ciclista e ativista usu√°rio do iFood.
Ciclista entregador, com 12 anos de experi√™ncia nas entregas, sendo os √∫ltimos oito pelas plataformas digitais,
compartilhou muitas grava√ß√µes de tela durante suas entregas e seus pedidos como cliente final do iFood para promover uma
reflex√£o sobre a import√¢ncia do frontend na rotina de todas as personas envolvidas em um pedido.

--

A experi√™ncia com tudo isso envolveu tanto para quem est√° come√ßando, assim como quem j√° est√° consolidado na √°rea,
s√£o experi√™ncias que n√£o conseguimos e obtemos pelo dia a dia, n√£o √© sempre lidar com c√≥digo, entender o que √©
uma mudan√ßa de estado ou at√© mesmo l√≥gicas de programa√ß√£o e horas de reuni√µes.

O que aprendemos at√© mesmo com a experi√™ncia do Daniel, √© que de fato n√£o adianta desenvolver uma aplica√ß√£o bonita,
simples e funcional para o cliente, muitas vezes temos que ter um dia de cliente para entender as falhas,
os comportamentos inesperados e solu√ß√µes.

Ele mesmo relatou que jamais recusou entregar, e sem querer, ao tentar retirar o celular do bolso, acabou cancelando por
dar o famoso ~ miss click ~ na hora de pegar o celular. E √© algo que poderia ser evitado com uma confirma√ß√£o de usu√°rio,
caso ele gostaria de recusar o atendimento do cliente, assim como em v√°rias outras ocasi√µes.

Mas, fica a reflex√£o de que, se voc√™ tiver oportunidade, voc√™ pode estar come√ßando literalmente agora,
ou estar a tempos desenvolvendo, v√° a esses eventos que de m√£os vazias jamais sair√°.

Caso queira ver como foi o evento completo e obter toda a experi√™ncia em primeira m√£o - mesmo que seja online - 
para absorver o conhecimento e entender tudo o que foi falado, desde a import√¢ncia com o time, com o cliente, enfim, 
entender tudo o que foi passado no evento, √© s√≥ clicar na imagem abaixo.

E claro, deixo a mensagem para refletir sempre al√©m do c√≥digo e tamb√©m, acompanhar o NodeBR nas redes e ficar
de olho para os pr√≥ximos eventos.

[![Youtube NodeBR](https://github.com/Yagasaki7K/website-yagasaki/assets/23272064/164f8001-2fac-48f5-adc3-a8b2006a330c)](https://youtu.be/BhokYnN1RGo)
]]></description>
            <link>https://yagasaki.vercel.app//articles/nodebr-e-ifood-em-campinas</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/nodebr-e-ifood-em-campinas</guid>
            <pubDate>Fri, 01 Mar 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Curso de Introdu√ß√£o e Contribui√ß√£o ao C√≥digo Aberto]]></title>
            <description><![CDATA[
![Praveen Thirumurugan](https://images.unsplash.com/photo-1647166545674-ce28ce93bdca?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

Esse curso foi desenvolvido pela [Kalify Inc](https://kalify.vercel.app/) e publicado em 12 de Maio de 2023.

## 1. Introdu√ß√£o

Bem-vindo ao curso "Introdu√ß√£o ao C√≥digo Aberto"! Este curso abrangente ir√° gui√°-lo pelo fascinante mundo do c√≥digo aberto e ajud√°-lo a se tornar um contribuidor ativo. Ao final deste curso, voc√™ deve ter uma compreens√£o s√≥lida de como encontrar, participar e contribuir para projetos de c√≥digo aberto, bem como de como desenvolver seu curr√≠culo de c√≥digo aberto. Mas antes, vamos preparar o terreno discutindo os pr√©-requisitos, objetivos e expectativas deste curso.

<!--truncate-->

### Pr√©-requisitos

Antes de mergulhar no mundo do c√≥digo aberto, √© essencial ter uma compreens√£o b√°sica dos conceitos de programa√ß√£o e alguma experi√™ncia trabalhando com c√≥digo. Embora o curso forne√ßa exemplos e demonstra√ß√µes, voc√™ obter√° o m√°ximo proveito do material se j√° tiver algum conhecimento pr√©vio.

Al√©m disso, este curso pressup√µe que voc√™ est√° familiarizado com Git e GitHub. Git √© um sistema de controle de vers√£o amplamente utilizado, e GitHub √© uma plataforma popular para hospedar e colaborar em reposit√≥rios Git. Se voc√™ ainda n√£o est√° familiarizado com Git e GitHub, recomendamos que voc√™ reserve um tempo para aprender o b√°sico antes de come√ßar este curso.

### Objetivos

Ao longo deste curso, nossos principais objetivos s√£o ajud√°-lo a:

1. **Compreender o C√≥digo Aberto e seus Benef√≠cios**: Vamos explorar o conceito de c√≥digo aberto, sua hist√≥ria e os muitos benef√≠cios de contribuir para projetos de c√≥digo aberto.
2. **Aprender a Encontrar Projetos de C√≥digo Aberto**: Descobrir projetos que se encaixem em seus interesses e habilidades √© crucial para uma experi√™ncia de c√≥digo aberto enriquecedora. Apresentaremos ferramentas e t√©cnicas para encontrar projetos para os quais voc√™ possa contribuir.
3. **Dominar Ferramentas e Processos de Contribui√ß√£o**: Forneceremos uma vis√£o geral das ferramentas e processos essenciais necess√°rios para uma colabora√ß√£o de c√≥digo aberto bem-sucedida, como controle de vers√£o, revis√£o de c√≥digo e plataformas de comunica√ß√£o.
4. **Ganhar Experi√™ncia Pr√°tica**: Seguindo exemplos e demonstra√ß√µes, voc√™ ter√° a oportunidade de praticar suas habilidades e ganhar confian√ßa em sua capacidade de contribuir para projetos de c√≥digo aberto.
5. **Desenvolver seu Curr√≠culo de C√≥digo Aberto**: Destacar suas contribui√ß√µes de c√≥digo aberto √© essencial para construir sua reputa√ß√£o na comunidade e demonstrar sua experi√™ncia a potenciais empregadores ou clientes. Discutiremos estrat√©gias para desenvolver e manter seu curr√≠culo de c√≥digo aberto.

### Expectativas

Este curso foi projetado para fornecer uma base s√≥lida na colabora√ß√£o de c√≥digo aberto. Embora cubramos uma variedade de t√≥picos e forne√ßamos exemplos, demonstra√ß√µes e oportunidades de pr√°tica, √© essencial manter expectativas realistas sobre o que voc√™ pode realizar durante o curso.

1. **A Pr√°tica √© Crucial**: Aprender sobre c√≥digo aberto √© apenas o come√ßo; para realmente desenvolver suas habilidades e se tornar um contribuidor competente, voc√™ precisar√° praticar regularmente. Lembre-se de que quanto mais voc√™ contribuir para projetos de c√≥digo aberto, mais aprender√° e crescer√° como desenvolvedor.

2. **Paci√™ncia √© a Chave**: Dominar a colabora√ß√£o de c√≥digo aberto leva tempo e esfor√ßo. N√£o desanime se encontrar desafios ao longo do caminho; lembre-se de que cada contribui√ß√£o, por menor que seja, √© valiosa e ajuda a melhorar o projeto.

3. **Envolvimento com a Comunidade**: C√≥digo aberto √© mais do que apenas c√≥digo; trata-se das pessoas que colaboram e contribuem para os projetos. Interaja com a comunidade fazendo perguntas, compartilhando seu conhecimento e apoiando os outros. Construir relacionamentos com outros contribuidores melhorar√° sua experi√™ncia de c√≥digo aberto e ajudar√° voc√™ a crescer como desenvolvedor.

4. **Aprendizado Cont√≠nuo**: O c√≥digo aberto √© um campo em constante evolu√ß√£o, com novos projetos, ferramentas e tecnologias surgindo o tempo todo. Mantenha-se curioso e aberto ao aprendizado e aproveite recursos como documenta√ß√£o, tutoriais e f√≥runs comunit√°rios para aprofundar seu conhecimento e se manter atualizado sobre os √∫ltimos desenvolvimentos.

5. **Cultivar uma Mentalidade de Crescimento**: Enfrente os desafios e oportunidades que surgem com a colabora√ß√£o de c√≥digo aberto. Adote uma mentalidade de crescimento focada na aprendizagem, melhoria e resili√™ncia. Ao considerar os obst√°culos como oportunidades de crescimento, voc√™ estar√° melhor preparado para navegar no complexo mundo do c√≥digo aberto e ter sucesso em suas contribui√ß√µes.

### Estrutura do Curso

Este curso est√° dividido em v√°rios cap√≠tulos, cada um projetado para cobrir um aspecto espec√≠fico da colabora√ß√£o de c√≥digo aberto:

1. **Introdu√ß√£o:** Come√ßaremos preparando o terreno para a sua jornada de c√≥digo aberto, discutindo pr√©-requisitos, objetivos e expectativas.
2. **O que √© C√≥digo Aberto?**: Neste cap√≠tulo, exploraremos a defini√ß√£o de c√≥digo aberto e sua hist√≥ria, fornecendo uma base s√≥lida para compreender o contexto da colabora√ß√£o de c√≥digo aberto.
3. **Por que o C√≥digo Aberto?**: Abordaremos os benef√≠cios do c√≥digo aberto, incluindo o acesso ao conhecimento, √† comunidade e ao desenvolvimento de habilidades.
4. **Ferramentas para o Sucesso:** Este cap√≠tulo apresentar√° as ferramentas essenciais para uma colabora√ß√£o de c√≥digo aberto bem-sucedida, incluindo GitHub, Git, CodeSee, VS Code e Discord.
5. **Como Contribuir para o C√≥digo Aberto**: Neste cap√≠tulo, discutiremos o processo de encontrar projetos para trabalhar, enviar contribui√ß√µes, integrar-se a um novo projeto e o que esperar ap√≥s o envio de sua contribui√ß√£o.
6. **A Receita Secreta:** Este cap√≠tulo revelar√° estrat√©gias e t√©cnicas para come√ßar, ganhar terreno em suas contribui√ß√µes e desenvolver seu curr√≠culo de c√≥digo aberto.
7. **Conclus√£o:** Concluiremos o curso com pontos-chave e discutiremos os pr√≥ximos passos em sua jornada de c√≥digo aberto.

Ao longo deste curso, forneceremos exemplos e demonstra√ß√µes para ajudar a ilustrar os conceitos-chave e oferecer oportunidades pr√°ticas de aprendizado. Sempre que poss√≠vel, apresentaremos projetos e ferramentas de c√≥digo aberto reais, como a [Kalify](https://kalify.vercel.app/#projects), para mostrar como aplicar as habilidades que voc√™ adquiriu.

Lembre-se de que, embora esses exemplos e demonstra√ß√µes sejam projetados para orient√°-lo e inspir√°-lo, sua pr√≥pria jornada de c√≥digo aberto pode ser diferente, dependendo de seus interesses, habilidades e projetos escolhidos. Use os exemplos e demonstra√ß√µes como ponto de partida, mas n√£o tenha medo de explorar outros projetos, ferramentas e recursos √† medida que continua a aprender e crescer.

### Vamos Come√ßar üöÄ

Agora que preparamos o terreno, √© hora de embarcar em sua jornada de c√≥digo aberto! No pr√≥ximo cap√≠tulo, entraremos na defini√ß√£o de c√≥digo aberto e exploraremos sua hist√≥ria, estabelecendo as bases para uma compreens√£o mais profunda da colabora√ß√£o de c√≥digo aberto. Vamos l√°!

## 2. O que √© c√≥digo aberto?

Neste cap√≠tulo, aprofundaremos o conceito de c√≥digo aberto, sua defini√ß√£o e hist√≥ria. Adquirir uma compreens√£o profunda do c√≥digo aberto ajudar√° voc√™ a apreciar o contexto no qual colaborar√° e contribuir√°.

### Defini√ß√£o

O c√≥digo aberto se refere a um tipo de software cujo c√≥digo-fonte √© disponibilizado ao p√∫blico, permitindo que qualquer pessoa visualize, use, modifique e distribua o c√≥digo. Isso contrasta com o software propriet√°rio, onde o c√≥digo-fonte √© mantido em segredo e apenas o programa compilado √© distribu√≠do. O princ√≠pio fundamental do c√≥digo aberto √© a ideia de colabora√ß√£o e a cren√ßa de que o compartilhamento de conhecimento e recursos leva a software melhor, mais confi√°vel e mais inovador.

O software de c√≥digo aberto √© constru√≠do com base na ideia de que, quando muitas pessoas trabalham juntas, podem criar algo maior do que a soma de suas partes. Os contribuintes para projetos de c√≥digo aberto v√™m de diversas origens e trazem uma ampla gama de habilidades, experi√™ncias e perspectivas para a mesa. Essa diversidade de pensamento e expertise leva a software mais robusto, inovador e confi√°vel.

#### Licen√ßas de C√≥digo Aberto

Para que um software seja considerado de c√≥digo aberto, ele deve ser publicado sob uma licen√ßa que conceda aos usu√°rios o direito de acessar, modificar e distribuir o c√≥digo-fonte. Existem muitas licen√ßas de c√≥digo aberto dispon√≠veis, cada uma com seu pr√≥prio conjunto de termos e condi√ß√µes. Algumas licen√ßas de c√≥digo aberto populares incluem a Licen√ßa MIT, a Licen√ßa P√∫blica Geral GNU (GPL) e a Licen√ßa Apache.

Essas licen√ßas s√£o cruciais porque garantem que o software permane√ßa aberto e acess√≠vel a todos. Ao conceder aos usu√°rios o direito de visualizar, modificar e distribuir o c√≥digo, as licen√ßas de c√≥digo aberto promovem uma cultura de colabora√ß√£o, inova√ß√£o e compartilhamento de conhecimento.

### Breve Hist√≥ria do C√≥digo Aberto

A ideia de compartilhar livremente conhecimento e recursos existe h√° s√©culos, mas o movimento de c√≥digo aberto, conforme o conhecemos hoje, remonta aos prim√≥rdios da computa√ß√£o.

#### Primeiros Passos

Nas d√©cadas de 1950 e 1960, o software de computador estava frequentemente associado ao hardware de computador, e o c√≥digo-fonte era compartilhado livremente entre pesquisadores e desenvolvedores. Durante esse per√≠odo, era comum que programadores colaborassem, compartilhassem ideias e modificassem o c√≥digo uns dos outros para se aprimorarem e inovarem.

No entanto, nas d√©cadas de 1970 e 1980, √† medida que a ind√∫stria de software come√ßou a se expandir e se comercializar, as empresas come√ßaram a considerar o software como um ativo valioso e come√ßaram a restringir o acesso ao c√≥digo-fonte. Essa mudan√ßa marcou o in√≠cio da divis√£o entre o software propriet√°rio e o movimento de c√≥digo aberto emergente.

#### O Surgimento do Software Livre

Em resposta √†s crescentes restri√ß√µes ao acesso e distribui√ß√£o de software, o cientista da computa√ß√£o Richard Stallman fundou a Free Software Foundation (FSF) em 1985. O objetivo da FSF era promover o desenvolvimento e o uso de software livre, definido como software que concede aos usu√°rios a liberdade de executar, estudar, compartilhar e modificar o c√≥digo. Esse conceito √© semelhante ao c√≥digo aberto, mas enfatiza ainda mais os aspectos √©ticos e pol√≠ticos da liberdade do software.

Stallman e a FSF posteriormente desenvolveram o projeto GNU (que significa "GNU's Not Unix"), um esfor√ßo ambicioso para criar um sistema operacional totalmente livre e aberto. Embora o projeto GNU tenha fornecido muitos componentes essenciais, ele ainda carecia de uma pe√ßa fundamental: um n√∫cleo livre e aberto, o componente central de um sistema operacional.

#### A Chegada do Linux

Em 1991, um estudante de ci√™ncia da computa√ß√£o finland√™s chamado Linus Torvalds desenvolveu um n√∫cleo livre e de c√≥digo aberto chamado Linux. Quando combinado com o sistema GNU, o Linux formou um sistema operacional completo, gratuito e de c√≥digo aberto que ainda √© amplamente utilizado hoje. O sucesso do Linux contribuiu para popularizar o conceito de c√≥digo aberto e desencadeou uma onda de novos projetos, ferramentas e tecnologias.

#### A Iniciativa de C√≥digo Aberto

Em 1998, Christine Peterson, diretora executiva da Foresight, inventou o termo "software de c√≥digo aberto" como um [esfor√ßo deliberado para tornar este campo... mais compreens√≠vel para novatos e empresas](https://opensource.com/article/18/2/coining-term-open-source-software). Ela, juntamente com Eric S. Raymond, Bruce Perens e outros desenvolvedores e defensores, posteriormente fundou a Open Source Initiative (OSI) para promover melhor esse conceito. A partir da√≠, a OSI desenvolveu a defini√ß√£o de c√≥digo aberto, um conjunto de crit√©rios que o software deve atender para ser considerado de c√≥digo aberto. Esses crit√©rios incluem distribui√ß√£o gratuita, disponibilidade do c√≥digo-fonte, trabalhos derivados e integridade da licen√ßa.

Os esfor√ßos da OSI para promover o c√≥digo aberto despertaram um novo interesse e ado√ß√£o por parte de indiv√≠duos e organiza√ß√µes. Hoje, o software de c√≥digo aberto √© amplamente utilizado em v√°rias ind√∫strias, e muitas empresas de tecnologia conhecidas, como Google, IBM e Microsoft, apoiam e contribuem ativamente para projetos de c√≥digo aberto.

#### O Crescimento das Comunidades de C√≥digo Aberto

√Ä medida que o movimento de c√≥digo aberto ganhava for√ßa, muitas comunidades e plataformas surgiram para facilitar a colabora√ß√£o e o compartilhamento de conhecimento. Aqui est√£o alguns exemplos not√°veis:

- **SourceForge**: Lan√ßada em 1999, a SourceForge foi uma das primeiras plataformas da web a fornecer ferramentas e recursos para que desenvolvedores colaborassem em projetos de c√≥digo aberto. Em seu auge, a SourceForge hospedava milhares de projetos e atra√≠a milh√µes de usu√°rios.
- **GitHub**: Fundado em 2008, o GitHub rapidamente se tornou a plataforma de refer√™ncia para hospedagem e colabora√ß√£o em reposit√≥rios Git. Hoje, o GitHub hospeda milh√µes de projetos de c√≥digo aberto e conta com uma comunidade din√¢mica de colaboradores de todo o mundo.
- **GitLab**: Lan√ßado em 2011 como uma alternativa de c√≥digo aberto ao GitHub, o GitLab oferece uma s√©rie de ferramentas e recursos para gerenciar reposit√≥rios Git, rastrear problemas e facilitar a colabora√ß√£o.

Essas plataformas desempenharam um papel crucial no est√≠mulo ao crescimento das comunidades de c√≥digo aberto e na facilita√ß√£o da contribui√ß√£o e colabora√ß√£o de desenvolvedores em projetos.

#### O Aumento do Envolvimento das Empresas

Nos √∫ltimos anos, o envolvimento das empresas em projetos de c√≥digo aberto aumentou significativamente. Muitas empresas reconhecem agora o valor do c√≥digo aberto e contribuem ativamente para diversos projetos e os apoiam. Algumas empresas at√© mesmo tornaram de c√≥digo aberto suas pr√≥prias ferramentas e tecnologias internas, como o TensorFlow do Google e o React do Facebook.

Esse envolvimento significativo das empresas n√£o apenas aumentou os recursos e o apoio a projetos de c√≥digo aberto, mas tamb√©m ajudou a legitimar o movimento de c√≥digo aberto e a promover sua ado√ß√£o em larga escala.

### A Evolu√ß√£o do C√≥digo Aberto

O movimento de c√≥digo aberto percorreu um longo caminho desde seus prim√≥rdios. Hoje, o software livre est√° em toda parte, impulsionando tanto sites quanto aplicativos m√≥veis, bem como intelig√™ncia artificial e algoritmos de aprendizado de m√°quina.

√Ä medida que o c√≥digo aberto continua a evoluir, novos projetos, ferramentas e tecnologias est√£o constantemente surgindo, expandindo os limites do poss√≠vel e estimulando a inova√ß√£o em uma ampla gama de ind√∫strias.

A crescente popularidade do c√≥digo aberto tamb√©m deu origem a um ecossistema florescente de confer√™ncias, encontros e comunidades online onde desenvolvedores podem se reunir para aprender, colaborar e compartilhar conhecimentos. Ao participar desses eventos e se envolver com a comunidade de c√≥digo aberto, voc√™ ter√° a oportunidade de desenvolver suas habilidades, construir sua rede e se manter atualizado sobre os √∫ltimos desenvolvimentos nessa √°rea.

No pr√≥ximo cap√≠tulo, exploraremos os muitos benef√≠cios da contribui√ß√£o para projetos de c√≥digo aberto e veremos como a colabora√ß√£o de c√≥digo aberto pode ajud√°-lo a acessar conhecimentos, se conectar a uma comunidade e desenvolver habilidades valiosas.

## 3. Por que o c√≥digo aberto?

No cap√≠tulo anterior, exploramos o conceito de c√≥digo aberto e sua hist√≥ria. Agora, vamos analisar os in√∫meros benef√≠cios de participar de projetos de c√≥digo aberto. Ao compreender os benef√≠cios da colabora√ß√£o de c√≥digo aberto, voc√™ estar√° melhor preparado para aproveitar as oportunidades que ela oferece e tirar o m√°ximo proveito de sua jornada no mundo do c√≥digo aberto.

### Acesso ao Conhecimento

Um dos principais benef√≠cios de contribuir para projetos de c√≥digo aberto √© a oportunidade de acessar uma variedade de conhecimentos e recursos. Como colaborador em um projeto de c√≥digo aberto, voc√™ poder√°:

1. **Aprender com projetos reais**: Projetos de c√≥digo aberto oferecem uma oportunidade √∫nica para estudar e aprender com c√≥digo real. Ao examinar como outros desenvolvedores lidaram com problemas complexos, voc√™ pode adquirir conhecimento sobre melhores pr√°ticas, padr√µes de design e t√©cnicas avan√ßadas que pode aplicar em seus pr√≥prios projetos.

2. **Acessar diversas perspectivas**: Projetos de c√≥digo aberto atraem contribuidores de todo o mundo, cada um trazendo um conjunto √∫nico de habilidades, experi√™ncias e pontos de vista. Colaborando com outros, voc√™ pode ampliar sua compreens√£o de diferentes tecnologias, linguagens de programa√ß√£o e metodologias de desenvolvimento.

3. **Manter-se atualizado com as √∫ltimas tend√™ncias**: A comunidade de c√≥digo aberto est√° frequentemente na vanguarda da inova√ß√£o, com o constante surgimento de novos projetos, ferramentas e tecnologias. Ao participar de projetos de c√≥digo aberto, voc√™ pode se manter atualizado com os √∫ltimos desenvolvimentos em sua √°rea e descobrir tend√™ncias emergentes e melhores pr√°ticas.

4. **Acessar recursos de alta qualidade**: A comunidade de c√≥digo aberto √© conhecida por seu compromisso em produzir documenta√ß√£o, tutoriais e outros recursos educacionais de alta qualidade. Ao aproveitar esse tesouro de conhecimento, voc√™ pode aprofundar sua compreens√£o de diversas tecnologias e conceitos, continuando a evoluir como desenvolvedor.

### Acesso √† Comunidade

A comunidade de c√≥digo aberto √© uma rede global diversificada de desenvolvedores, entusiastas e defensores que compartilham uma paix√£o comum pela colabora√ß√£o e compartilhamento de conhecimento. Contribuindo para projetos de c√≥digo aberto, voc√™ pode:

1. **Conectar-se com pessoas de ideias semelhantes**: Projetos de c√≥digo aberto oferecem a oportunidade de colaborar com outras pessoas que compartilham seus interesses e paix√µes. Trabalhando juntos, voc√™ pode estabelecer la√ßos e amizades duradouras que podem enriquecer sua vida pessoal e profissional.

2. **Expandir sua rede de contatos**: A comunidade de c√≥digo aberto √© vasta e interconectada, com in√∫meros projetos, eventos e f√≥runs nos quais os desenvolvedores se re√∫nem para colaborar e compartilhar conhecimento. Participando dessas atividades, voc√™ pode expandir sua rede profissional e se conectar com mentores, colaboradores e at√© mesmo potenciais empregadores.

3. **Desenvolver habilidades de comunica√ß√£o e colabora√ß√£o**: Trabalhar em projetos de c√≥digo aberto muitas vezes envolve colabora√ß√£o com outras pessoas, seja remotamente ou pessoalmente. Isso pode ajud√°-lo a desenvolver habilidades essenciais de comunica√ß√£o e colabora√ß√£o, como fornecer feedback construtivo, resolver conflitos e trabalhar eficazmente em equipe.

4. **Contribuir para a comunidade**: Contribuir para projetos de c√≥digo aberto √© uma maneira de retribuir √† comunidade que lhe forneceu conhecimentos e recursos valiosos. Compartilhando suas habilidades e experi√™ncia, voc√™ pode contribuir para o crescimento e o sucesso do movimento de c√≥digo aberto.

### Acesso √†s Habilidades

Contribuir para projetos de c√≥digo aberto pode ajud√°-lo a desenvolver uma ampla variedade de habilidades t√©cnicas e n√£o t√©cnicas altamente valorizadas no mercado de trabalho. Como colaborador em projetos de c√≥digo aberto, voc√™ ter√° a oportunidade de:

1. **Melhorar suas habilidades de programa√ß√£o**: Trabalhar em projetos reais √© uma excelente maneira de aprimorar suas habilidades de programa√ß√£o e aprofundar seu entendimento de diversas tecnologias e linguagens. Resolver problemas dif√≠ceis e aprender com outros contribuidores o ajudar√° a se tornar um desenvolvedor mais competente.

2. **Adquirir experi√™ncia com novas tecnologias**: Projetos de c√≥digo aberto frequentemente envolvem tecnologias e ferramentas avan√ßadas que podem n√£o ser usadas em seu trabalho ou estudos di√°rios. Ao contribuir para esses projetos, voc√™ pode ganhar experi√™ncia pr√°tica com novas tecnologias e expandir seu conjunto de habilidades.

3. **Construir seu portf√≥lio**: Contribuir para projetos de c√≥digo aberto permite que voc√™ crie um portf√≥lio p√∫blico de seu trabalho, destacando suas habilidades e experi√™ncia para potenciais empregadores. Um s√≥lido portf√≥lio de contribui√ß√µes para projetos de c√≥digo aberto pode ajud√°-lo a se destacar no mercado de trabalho e demonstrar seu compromisso com a aprendizagem cont√≠nua e o desenvolvimento profissional.

4. **Desenvolver habilidades de resolu√ß√£o de problemas e pensamento cr√≠tico**: Trabalhar em projetos de c√≥digo aberto muitas vezes envolve resolver problemas complexos e tomar decis√µes importantes. Ao enfrentar esses desafios, voc√™ pode desenvolver habilidades valiosas de resolu√ß√£o de problemas e pensamento cr√≠tico que podem ser aplicadas em v√°rias √°reas de sua vida e carreira.

5. **Aprender gerenciamento de projetos e organiza√ß√£o**: Contribuir para projetos de c√≥digo aberto pode exp√¥-lo a v√°rios aspectos do gerenciamento e organiza√ß√£o de projetos, como definir prioridades, gerenciar prazos e coordenar com membros da equipe. Essas habilidades podem ser valiosas em sua vida pessoal e profissional, ajudando-o a se tornar uma pessoa mais eficiente e organizada.

6. **Desenvolver habilidades de lideran√ßa e mentoria**: √Ä medida que voc√™ ganha experi√™ncia na comunidade de c√≥digo aberto, pode se encontrar em posi√ß√£o de mentor e guia para novos contribuidores. Assumindo esses pap√©is de lideran√ßa, voc√™ pode desenvolver habilidades essenciais, como comunica√ß√£o, empatia e delega√ß√£o, que podem ajud√°-lo a ter sucesso em sua carreira e vida pessoal.

### Benef√≠cios Adicionais

Al√©m dos benef√≠cios mencionados anteriormente, a participa√ß√£o em projetos de c√≥digo aberto tamb√©m pode oferecer v√°rios outros benef√≠cios, como:

1. **Amplas oportunidades de emprego**: Muitos empregadores valorizam a experi√™ncia em c√≥digo aberto e est√£o ativamente em busca de candidatos que tenham demonstrado contribui√ß√µes significativas para projetos de c√≥digo aberto. Ao destacar suas contribui√ß√µes, voc√™ aumenta suas chances de conseguir o emprego dos seus sonhos ou avan√ßar em sua carreira.

2. **Realiza√ß√£o pessoal**: Contribuir para projetos de c√≥digo aberto pode ser uma experi√™ncia gratificante, tanto pessoal quanto profissionalmente. Ao compartilhar suas habilidades e conhecimentos, voc√™ pode fazer uma diferen√ßa tang√≠vel no mundo e contribuir para algo maior do que voc√™.

3. **Oportunidades de reconhecimento**: Projetos de c√≥digo aberto frequentemente chamam a aten√ß√£o de l√≠deres do setor, influenciadores e m√≠dia. Ao fazer contribui√ß√µes significativas para projetos l√≠deres, voc√™ pode ser reconhecido e estabelecer-se como um especialista em sua √°rea.

No pr√≥ximo cap√≠tulo, discutiremos as ferramentas e recursos essenciais de que voc√™ precisar√° para ter sucesso em sua jornada no c√≥digo aberto, incluindo GitHub, Git, CodeSee, VS Code e Discord. Ao se familiarizar com essas ferramentas, voc√™ estar√° melhor preparado para colaborar com os outros, gerenciar seus projetos e contribuir efetivamente para projetos de c√≥digo aberto.

## 4. Ferramentas para o Sucesso

Para ter sucesso em sua jornada no c√≥digo aberto, √© essencial se familiarizar com as ferramentas e plataformas comumente usadas pela comunidade. Essas ferramentas ajudar√£o voc√™ a colaborar de forma eficaz, gerenciar seus projetos e contribuir para projetos de c√≥digo aberto. Neste cap√≠tulo, abordaremos as seguintes ferramentas essenciais para a colabora√ß√£o em c√≥digo aberto:

- GitHub e Git
- CodeSee
- VS Code (o editor)
- Discord

### Pr√©-Requisitos

Antes de seguir este guia, voc√™ deve realizar as seguintes a√ß√µes:

- Criar uma [conta no GitHub](https://github.com/)
- Baixar o [VS Code](https://code.visualstudio.com/)

### GitHub e Git

#### Introdu√ß√£o ao Git

O Git √© um sistema de controle de vers√£o distribu√≠do projetado para gerenciar projetos, desde os pequenos at√© os muito grandes, de maneira r√°pida e eficiente. Foi criado por Linus Torvalds, o criador do kernel Linux, para gerenciar o desenvolvimento do pr√≥prio kernel Linux.

O Git permite que os desenvolvedores acompanhem as altera√ß√µes em seu c√≥digo, colaborem com outros desenvolvedores e gerenciem v√°rias vers√µes de seus projetos. Algumas das principais caracter√≠sticas do Git incluem:

- **Branches (ramifica√ß√µes)**: O Git permite que os desenvolvedores criem ramos, que s√£o c√≥pias separadas de sua base de c√≥digo. Isso permite que eles trabalhem em novos recursos ou corre√ß√µes de bugs sem afetar a base de c√≥digo principal. Quando as altera√ß√µes s√£o conclu√≠das, eles podem mesclar o ramo de volta √† base de c√≥digo principal.
- **√Årea de prepara√ß√£o (staging area)**: O Git fornece uma √°rea de prepara√ß√£o onde os desenvolvedores podem preparar suas altera√ß√µes antes de confirm√°-las no reposit√≥rio. Isso permite que eles revisem e organizem suas altera√ß√µes antes de torn√°-las permanentes.
- **Controle de vers√£o distribu√≠do**: Ao contr√°rio dos sistemas de controle de vers√£o centralizados, o Git √© um sistema de controle de vers√£o distribu√≠do. Isso significa que cada desenvolvedor possui uma c√≥pia completa do reposit√≥rio em sua m√°quina local, permitindo que trabalhem offline e independentemente de um servidor central.

#### Introdu√ß√£o ao GitHub

O GitHub √© uma plataforma web de controle de vers√£o e colabora√ß√£o que utiliza o Git como tecnologia subjacente. Ele oferece uma interface simples e amig√°vel para gerenciar reposit√≥rios Git, bem como uma variedade de recursos e ferramentas para colaborar com outros desenvolvedores.

Aqui est√£o algumas das principais caracter√≠sticas do GitHub:

- **Rastreamento de problemas**: O GitHub possui um sistema integrado de rastreamento de problemas que permite que os desenvolvedores criem, atribuam e gerenciem problemas relacionados aos seus projetos. Os problemas podem ser categorizados usando r√≥tulos, marcos e destinat√°rios, facilitando o acompanhamento do progresso do projeto e a prioriza√ß√£o das tarefas.
- **Pull Requests (solicita√ß√µes de pull)**: O GitHub introduz o conceito de "solicita√ß√µes de pull", que permite que os desenvolvedores proponham altera√ß√µes √† base de c√≥digo de um projeto. As solicita√ß√µes de pull permitem a revis√£o de c√≥digo, discuss√£o e colabora√ß√£o antes que as altera√ß√µes sejam mescladas na base de c√≥digo principal.
- **Fork (bifurca√ß√£o)**: O GitHub permite que os usu√°rios criem uma c√≥pia de um reposit√≥rio, chamada de bifurca√ß√£o (fork). Isso lhes permite fazer altera√ß√µes na base de c√≥digo sem afetar o projeto original. Depois de concluir as altera√ß√µes, eles podem enviar uma solicita√ß√£o de pull para que suas altera√ß√µes sejam revisadas e, possivelmente, mescladas na base de c√≥digo principal.
- **GitHub Actions (a√ß√µes do GitHub)**: O GitHub Actions √© uma poderosa ferramenta de automa√ß√£o que permite criar fluxos de trabalho personalizados para automatizar tarefas como compila√ß√£o, teste e implanta√ß√£o de seu c√≥digo.

### Come√ßando com Git e GitHub

Para come√ßar com o GitHub, siga as etapas abaixo:

1. **Instale o Git**: Baixe e instale o Git em seu computador acessando o site oficial do Git (https://git-scm.com/) e seguindo as instru√ß√µes de instala√ß√£o para o seu sistema operacional.

2. **Configure o Git**: Ap√≥s instalar o Git, abra um terminal ou prompt de comando e configure suas informa√ß√µes de usu√°rio Git executando os comandos a seguir:

```shell
git config --global user.name "Seu Nome de Usu√°rio"
git config --global user.email "seu.email@exemplo.com"
```

Substitua "Seu Nome de Usu√°rio" pelo seu nome completo e "seu.email@exemplo.com" pelo endere√ßo de e-mail que voc√™ usou para se inscrever no GitHub.

#### Praticando com o VS Code

Para praticar o uso do GitHub, vamos criar um reposit√≥rio, clon√°-lo, fazer altera√ß√µes e envi√°-las.

1. **Crie um novo reposit√≥rio**: Fa√ßa login na sua conta do GitHub e v√° para https://github.com/new ou clique no √≠cone "+" no canto superior direito e selecione "Novo reposit√≥rio" no menu suspenso.

Escolha a op√ß√£o "Seu" como propriet√°rio do reposit√≥rio e insira um nome para o seu reposit√≥rio. Para este exemplo, usaremos `repositorio-de-pratica`.

Escolha se deseja que ele seja p√∫blico ou privado. Voc√™ tamb√©m pode optar por inicializar o reposit√≥rio com um arquivo README, um arquivo .gitignore e/ou uma licen√ßa.

Para este exemplo, inicialize o reposit√≥rio com um arquivo README.

1. **Clone o reposit√≥rio**: Depois de criar um novo reposit√≥rio, voc√™ pode clon√°-lo para sua m√°quina local executando o seguinte comando no seu terminal ou prompt de comando:

```bash
git clone https://github.com/seu-nome-de-usuario/nome-do-repositorio.git
```

Substitua "seu-nome-de-usuario" pelo seu nome de usu√°rio no GitHub e "nome-do-repositorio" por `repositorio-de-pratica`.

3. **Acesse seu reposit√≥rio no seu editor de c√≥digo**: Para este exemplo, estamos usando o VS Code. Abra o VS Code, v√° para a guia Arquivo e abra o seu reposit√≥rio de pr√°tica.

4. **Fa√ßa altera√ß√µes e fa√ßa commit**: Deve haver um arquivo no seu reposit√≥rio: `README.md`. Neste arquivo, sob `# repositorio-de-pratica`, digite 'ol√° mundo!'. Depois de fazer as altera√ß√µes, voc√™ pode adicion√°-las ao commit.

Abra o seu terminal e verifique se voc√™ est√° no diret√≥rio correto. Por exemplo, meus projetos de c√≥digo est√£o na minha pasta Projetos. Usando o meu terminal, eu entraria neste reposit√≥rio com o seguinte comando:

```bash
cd projetos/repositorio-de-pratica
```

Depois de estar no diret√≥rio correto, use os seguintes comandos para adicionar as altera√ß√µes que voc√™ fez e escrever uma mensagem de commit com uma descri√ß√£o das altera√ß√µes:

```bash
git add .
git commit -m "Sua mensagem de commit"
```

Substitua "Sua mensagem de commit" por uma breve descri√ß√£o das altera√ß√µes que voc√™ fez.

5. **Envie suas altera√ß√µes**: Ap√≥s fazer o commit das suas altera√ß√µes, voc√™ pode envi√°-las para o seu reposit√≥rio remoto no GitHub executando o seguinte comando:

```bash
git push origin main
```


Isso enviar√° suas mudan√ßas para o ramo "main" do seu reposit√≥rio remoto. Se voc√™ quiser verificar seu trabalho, v√° para o seu reposit√≥rio no GitHub. Voc√™ dever√° ver 'ol√° mundo!' no seu arquivo README.md.

Agora voc√™ configurou com sucesso o Git e o GitHub na sua m√°quina local e est√° pronto para colaborar em projetos de c√≥digo aberto!

### CodeSee

CodeSee √© uma ferramenta de visualiza√ß√£o poderosa que ajuda os desenvolvedores a entenderem as bases de c√≥digo complexas e a navegarem mais eficazmente em projetos grandes. Ao fornecer uma representa√ß√£o visual do seu c√≥digo, o CodeSee permite que voc√™:

- **Identifique as depend√™ncias**: O CodeSee ajuda a entender como as diferentes partes da sua base de c√≥digo est√£o conectadas e como as mudan√ßas em uma √°rea podem afetar outras √°reas.
- **Analise a estrutura do c√≥digo**: O CodeSee permite visualizar a estrutura do seu c√≥digo, facilitando a identifica√ß√£o de padr√µes, antipadr√µes e √°reas para melhorias.
- **Navegue em bases de c√≥digo grandes**: Com o CodeSee, voc√™ pode navegar rapidamente em grandes bases de c√≥digo e encontrar as partes do c√≥digo nas quais precisa trabalhar.

Para come√ßar a usar o CodeSee, visite o site oficial (https://www.codesee.io/) e siga as instru√ß√µes para instalar a extens√£o no seu navegador e integr√°-la √† sua conta do GitHub.

### VS Code

O Visual Studio Code (VS Code) √© um editor de c√≥digo popular, gratuito e de c√≥digo aberto desenvolvido pela Microsoft. Ele suporta uma ampla variedade de linguagens de programa√ß√£o e oferece muitos recursos que o tornam uma excelente escolha para o desenvolvimento de c√≥digo aberto:

- **Suporte integrado ao Git**: O VS Code oferece suporte integrado ao Git, permitindo que voc√™ gerencie seus reposit√≥rios Git, fa√ßa o staging e confirme altera√ß√µes e resolva conflitos de mesclagem diretamente no editor.
- **Extensibilidade**: O VS Code oferece um ecossistema rico de extens√µes que podem melhorar sua experi√™ncia de desenvolvimento e adicionar suporte para linguagens, ferramentas e frameworks adicionais.
- **Terminal integrado**: O VS Code inclui um terminal integrado que permite executar comandos, scripts e tarefas de constru√ß√£o diretamente no editor.
- **Customiz√°vel**: O VS Code √© altamente customiz√°vel, permitindo que voc√™ adapte o editor √†s suas prefer√™ncias e fluxo de trabalho. Voc√™ pode personalizar o tema, os atalhos de teclado e as configura√ß√µes para criar um ambiente de desenvolvimento personalizado.

Para baixar e instalar o VS Code, visite o site oficial (https://code.visualstudio.com/) e siga as instru√ß√µes para o seu sistema operacional.

### Discord

O Discord √© uma plataforma popular de mensagens e chat de voz amplamente utilizada pelas comunidades de c√≥digo aberto para comunica√ß√£o e colabora√ß√£o. Ao ingressar em servidores do Discord relacionados aos seus interesses e projetos, voc√™ pode:

- **Conectar-se com outros desenvolvedores**: O Discord permite que voc√™ converse com outros desenvolvedores, fa√ßa perguntas e compartilhe seu conhecimento com a comunidade.
- **Ficar informado**: Muitos projetos de c√≥digo aberto usam o Discord para compartilhar atualiza√ß√µes, an√∫ncios e outras informa√ß√µes importantes. Ao ingressar em seus servidores, voc√™ pode se manter informado sobre os √∫ltimos desenvolvimentos e contribuir de forma mais eficaz.
- **Participar de discuss√µes**: Os servidores do Discord frequentemente hospedam discuss√µes sobre v√°rios t√≥picos relacionados ao desenvolvimento de software livre. Ao participar dessas discuss√µes, voc√™ pode:

* Aprender com os outros
* Compartilhar suas ideias
* Contribuir para o conhecimento coletivo da comunidade

### Encontre oportunidades de colabora√ß√£o

Os servidores Discord podem ser uma excelente maneira de encontrar pessoas que compartilham seus interesses e buscam oportunidades de colabora√ß√£o. Ao criar la√ßos com outros desenvolvedores, voc√™ pode:

* Descobrir novos projetos para trabalhar
* Formar parcerias valiosas

### Como come√ßar

Para come√ßar a usar o Discord, visite o site oficial (https://discord.com/) e crie uma conta. Depois de ter uma conta, voc√™ pode pesquisar comunidades e projetos open source em plataformas como GitHub, GitLab ou a Kalify Inc para encontrar seus servidores Discord e participar da conversa.

### Pr√≥xima se√ß√£o

No pr√≥ximo cap√≠tulo, veremos como contribuir para projetos open source, incluindo como encontrar projetos para trabalhar, como enviar contribui√ß√µes e como explicar o que acontece depois que sua contribui√ß√£o √© aceita.

## 5. Como contribuir para o c√≥digo aberto

Neste cap√≠tulo, iremos orient√°-lo pelo processo de contribui√ß√£o para projetos de c√≥digo aberto. Abordaremos os seguintes t√≥picos:

- Encontrando projetos para contribuir
- Como enviar uma contribui√ß√£o?
- Integra√ß√£o em um novo projeto
- O que acontece em seguida?

### Encontrando projetos para contribuir

Um dos primeiros desafios que voc√™ pode enfrentar ao entrar no mundo do c√≥digo aberto √© encontrar um projeto para contribuir. Aqui est√£o algumas dicas para ajud√°-lo a descobrir projetos que correspondam aos seus interesses e habilidades:

1. **Explore o GitHub e o GitLab**: Tanto o GitHub quanto o GitLab hospedam uma grande quantidade de projetos de c√≥digo aberto. Voc√™ pode usar a fun√ß√£o de pesquisa deles para encontrar projetos com base em palavras-chave, linguagens de programa√ß√£o ou t√≥picos espec√≠ficos.

2. **Siga seus interesses**: Pense nas ferramentas, estruturas (frameworks) e bibliotecas que voc√™ usa ou gostaria de aprender mais. Muitos desses projetos s√£o de c√≥digo aberto e recebem de bom grado contribui√ß√µes da comunidade.

3. **Junte-se √†s comunidades de c√≥digo aberto**: Existem muitas comunidades, f√≥runs e plataformas de discuss√£o online dedicados ao desenvolvimento de c√≥digo aberto. Ao se juntar a essas comunidades, voc√™ pode entrar em contato com outros desenvolvedores, descobrir novos projetos e encontrar oportunidades de colabora√ß√£o. Por exemplo, no servidor [Discord da Kalify](https://discord.gg/jhSepmE7nN), compartilhamos problemas iniciais, projetos interessantes do GitHub e problemas abertos em nossos reposit√≥rios.

4. **Aproveite a comunidade**: [Kalify](https://kalify.vercel.app/#projects) √© uma comunidade que ajuda os desenvolvedores a descobrir projetos de c√≥digo aberto para contribuir. Usando a Kalify, voc√™ pode encontrar projetos que correspondam aos seus interesses, habilidades e metas.

### Come√ßando a contribuir

Depois de encontrar um projeto ao qual voc√™ gostaria de contribuir, √© importante entender como o projeto aceita contribui√ß√µes. Aqui est√£o algumas etapas que voc√™ pode seguir para garantir que est√° seguindo os procedimentos estabelecidos pelos mantenedores para os contribuidores.

1. **Familiarize-se com o projeto**: Leia a documenta√ß√£o do projeto, incluindo o arquivo README, para entender seu prop√≥sito, objetivos e conven√ß√µes de codifica√ß√£o. Em seguida, leia o arquivo CONTRIBUTING para compreender o processo de contribui√ß√£o. Explore o c√≥digo do projeto, sua estrutura e as issues existentes.

2. **Encontre um bug/problema ou relate um bug**: Procure por issues marcadas como "good first issue" (bom primeiro problema) ou "beginner-friendly" (amig√°vel para iniciantes) que correspondam ao seu n√≠vel de habilidade. Voc√™ tamb√©m pode identificar um recurso ou melhoria na qual gostaria de trabalhar e verificar se est√° alinhado com a roadmap do projeto. Isso pode envolver atualiza√ß√µes na documenta√ß√£o, corre√ß√µes de bugs, modifica√ß√µes de conte√∫do, etc.

3. **Solicite atribui√ß√£o do problema**: Quando voc√™ fizer sua primeira contribui√ß√£o a um projeto, √© aconselh√°vel solicitar que os mantenedores atribuam o problema a voc√™. Isso garante que voc√™ n√£o est√° duplicando esfor√ßos e que sua contribui√ß√£o est√° alinhada com os objetivos e requisitos do projeto. Se n√£o houver instru√ß√µes no arquivo CONTRIBUTING, voc√™ pode comentar na issue: "Posso ser atribu√≠do a este problema?". Quando um mantenedor o atribuir, voc√™ ver√° seu nome de usu√°rio na issue.

### Como enviar uma contribui√ß√£o?

Depois de encontrar o projeto ao qual deseja contribuir, o pr√≥ximo passo √© enviar a contribui√ß√£o. Aqui est√£o as etapas gerais do processo:

1. **Fa√ßa um fork do reposit√≥rio**: Crie uma c√≥pia do reposit√≥rio do projeto no seu pr√≥prio perfil GitHub. Isso criar√° uma c√≥pia do reposit√≥rio em sua conta GitHub, permitindo que voc√™ fa√ßa altera√ß√µes no c√≥digo sem afetar o projeto original.

2. **Clone o seu fork**: Clone o reposit√≥rio forkado para a sua m√°quina local usando o seguinte comando no seu terminal ou prompt de comando:

```bash
git clone https://github.com/username/nome-do-repositorio.git
```

Substitua "username" pelo seu nome de usu√°rio GitHub e "nome-do-repositorio" pelo nome do reposit√≥rio.

3. **Crie uma nova branch**: Antes de fazer altera√ß√µes, crie uma nova branch no seu reposit√≥rio local para trabalhar na sua contribui√ß√£o. Isso ajuda a manter suas altera√ß√µes separadas da branch principal e facilita o envio de uma pull request posteriormente. Voc√™ pode criar uma nova branch com o seguinte comando:

```bash
git checkout -b nome-da-sua-branch
```

Substitua "nome-da-sua-branch" por um nome descritivo, como "correcao-bug-123" ou "nova-funcionalidade".

4. **Fa√ßa as suas altera√ß√µes**: Agora que voc√™ tem uma nova branch, pode fazer as altera√ß√µes no c√≥digo. Certifique-se de seguir as diretrizes e conven√ß√µes de codifica√ß√£o do projeto, e teste as suas altera√ß√µes para garantir que funcionam conforme o esperado.

5. **Confirme as suas altera√ß√µes (commit)**: Ap√≥s fazer as suas altera√ß√µes, coloque-as na √°rea de prepara√ß√£o e fa√ßa um commit usando os seguintes comandos:


```bash
git add .
git commit -m "Sua mensagem de commit"
```

Substitua "Sua mensagem de commit" por uma breve descri√ß√£o das altera√ß√µes que voc√™ fez.

6. **Envie as suas altera√ß√µes (push)**: Envie as suas altera√ß√µes para o seu reposit√≥rio forkado no GitHub usando o seguinte comando:

```bash
git push origin nome-da-sua-branch
```

Substitua "nome-da-sua-branch" pelo nome da sua branch.

7. **Crie uma pull request**: Ap√≥s enviar as suas altera√ß√µes, v√° para o reposit√≥rio original do projeto no GitHub e clique no bot√£o "Nova pull request" (New pull request). Na lista suspensa "base repository" (reposit√≥rio base), selecione o reposit√≥rio original e, na lista suspensa "head repository" (reposit√≥rio de origem), selecione o seu reposit√≥rio forkado. Escolha a sua branch na lista suspensa "compare" (comparar) e clique em "Criar pull request" (Create pull request). Preencha as informa√ß√µes necess√°rias e envie a sua pull request.

8. **Responda aos coment√°rios**: Ap√≥s enviar a sua pull request, os mantenedores do projeto podem fazer coment√°rios ou solicitar altera√ß√µes. Certifique-se de responder prontamente e considerar as preocupa√ß√µes ou sugest√µes que possam surgir.

Ao seguir essas etapas, voc√™ estar√° pronto para enviar as suas contribui√ß√µes para projetos de c√≥digo aberto e colaborar com outros desenvolvedores para melhorar o c√≥digo base.

### Pr√°tica

Agora que voc√™ sabe como encontrar e contribuir para projetos de c√≥digo aberto, √© hora de colocar as suas habilidades em pr√°tica. Vamos contribuir para esse site de documenta√ß√£o da Kalify usando a especifica√ß√£o ["all contributors"](https://allcontributors.org/).

1. Comece fazendo um fork do reposit√≥rio, conforme descrito acima, mas desta vez, o reposit√≥rio √© o website-kalify: [https://github.com/yagasaki7k/website-kalify](https://github.com/yagasaki7k/website-kalify). Clicando em "Fork" no GitHub, voc√™ criar√° uma c√≥pia do reposit√≥rio na sua conta do GitHub.

2. Em seguida, clone esse reposit√≥rio na sua m√°quina local. No seu terminal ou prompt de comando, execute o seguinte comando:

```bash
git clone git@github.com:[seu-nome-de-usuario]/repositorio.git
```

> Este tutorial presume que o Node.js est√° instalado na sua m√°quina, o que √© necess√°rio para trabalhar com este projeto. Se voc√™ n√£o tiver o Node.js instalado, pode baix√°-lo em [https://nodejs.org/pt-br/download/](https://nodejs.org/pt-br/download/)>.

1. Depois de clonar, abra o projeto no seu terminal e execute `npm install` para instalar as depend√™ncias, lembre-se de estar dentro da pasta. Voc√™ tamb√©m pode usar `yarn` se preferir outro gerenciador de pacotes.

2. **Crie uma nova branch**: Antes de fazer altera√ß√µes, lembre-se de criar uma nova branch no seu reposit√≥rio local para trabalhar na sua contribui√ß√£o. Voc√™ pode criar uma nova branch com o seguinte comando:

```bash
git checkout -b feature/[seu-nome-de-usuario]
```

N√£o se esque√ßa de substituir "[seu-nome-de-usuario]" pelo seu nome de usu√°rio GitHub.

Lembre-se que assim que seu pull request for aceito, voc√™ j√° estar√° fazendo parte como contribuidor do projeto.

3. Confirme as suas altera√ß√µes, fa√ßa um commit e envie para o seu reposit√≥rio forkado.

4. Ap√≥s o envio, v√° para o reposit√≥rio original do projeto no GitHub e clique em "Nova pull request" (New pull request). Na lista suspensa "base repository" (reposit√≥rio base), selecione o reposit√≥rio original e, na lista suspensa "head repository" (reposit√≥rio de origem), selecione o seu reposit√≥rio forkado. Escolha a sua branch na lista suspensa "compare" (comparar) e clique em "Criar pull request" (Create pull request). Preencha as informa√ß√µes necess√°rias e envie a sua pull request.

Parab√©ns! Voc√™ acabou de fazer uma contribui√ß√£o para o c√≥digo aberto! No pr√≥ximo cap√≠tulo, voc√™ a adicionar√° ao seu portf√≥lio de c√≥digo aberto - um curr√≠culo para contribui√ß√µes de c√≥digo aberto onde poder√° mostrar o seu trabalho e atrair potenciais empregadores e amigos que usam o Kalify. Por enquanto, vamos continuar com algumas notas sobre integra√ß√£o.

### Integra√ß√£o em um Novo Projeto

Quando voc√™ se junta a um novo projeto de c√≥digo aberto, √© importante se familiarizar com as diretrizes, conven√ß√µes e fluxo de trabalho do projeto. Aqui est√£o algumas dicas para ajudar voc√™ a ter sucesso na sua integra√ß√£o:

1. **Leia a documenta√ß√£o**: Comece lendo a documenta√ß√£o do projeto, incluindo o arquivo README, as diretrizes de contribui√ß√£o e o c√≥digo de conduta. Isso ajudar√° voc√™ a entender os objetivos do projeto, os requisitos e as expectativas dos contribuidores.

2. **Junte-se √† comunidade**: Muitos projetos de c√≥digo aberto t√™m comunidades online, f√≥runs ou plataformas de discuss√£o onde os desenvolvedores podem fazer perguntas, compartilhar conhecimento e colaborar. Ao se juntar a essas comunidades, voc√™ pode entrar em contato com outros contribuidores, aproveitar suas experi√™ncias e obter ajuda para resolver os problemas que encontrar.

3. **Comece com tarefas pequenas**: quando voc√™ est√° come√ßando em um projeto, √© aconselh√°vel come√ßar com tarefas pequenas e gerenci√°veis, como corrigir bugs, adicionar testes ou atualizar a documenta√ß√£o. Isso ajudar√° voc√™ a se familiarizar com o c√≥digo-fonte e o fluxo de desenvolvimento sem se sentir sobrecarregado.

4. **Pe√ßa ajuda**: Se voc√™ n√£o tem certeza de algo ou est√° enfrentando um problema, n√£o hesite em pedir ajuda. As comunidades de c√≥digo aberto geralmente s√£o solid√°rias e acolhedoras, e outros contribuidores ficar√£o felizes em ajudar voc√™.

5. **Seja paciente e persistente**: Integrar-se a um novo projeto pode ser desafiador, especialmente se voc√™ for novo no desenvolvimento de c√≥digo aberto. Seja paciente consigo mesmo e n√£o desanime com falhas ou erros. Com perseveran√ßa e pr√°tica, voc√™ se tornar√° mais confort√°vel e confiante em suas contribui√ß√µes.

### O que acontece em seguida?

Depois que sua contribui√ß√£o for enviada e revisada, um dos seguintes resultados pode ocorrer:

1. **Sua contribui√ß√£o √© aceita**: Se sua contribui√ß√£o for aprovada pelos respons√°veis pelo projeto, ela ser√° mesclada na branch principal do c√≥digo-fonte.

Parab√©ns! Seu trabalho agora faz parte do projeto e voc√™ fez uma contribui√ß√£o valiosa para a comunidade de c√≥digo aberto.

2. **Sua contribui√ß√£o requer altera√ß√µes**: √Äs vezes, os respons√°veis pelo projeto podem solicitar altera√ß√µes em sua contribui√ß√£o antes de aceit√°-la. Isso pode ser devido a problemas de codifica√ß√£o, conflitos com outras altera√ß√µes ou necessidade de documenta√ß√£o adicional. Nesse caso, fa√ßa as altera√ß√µes solicitadas e envie novamente sua solicita√ß√£o de pull.

3. **Sua contribui√ß√£o √© rejeitada**: Em alguns casos, sua contribui√ß√£o pode n√£o atender aos objetivos ou requisitos do projeto, ou pode n√£o ser a melhor solu√ß√£o para um problema. Se sua contribui√ß√£o for rejeitada, n√£o desanime. Considere os coment√°rios recebidos como uma oportunidade de aprendizado e melhoria. Voc√™ sempre pode tentar contribuir para outro projeto ou enviar uma contribui√ß√£o diferente para o mesmo projeto.

Continuando a contribuir para projetos de c√≥digo aberto, voc√™ ganhar√° experi√™ncia valiosa, desenvolver√° novas habilidades e construir√° um portf√≥lio s√≥lido de trabalho. No pr√≥ximo cap√≠tulo, discutiremos algumas estrat√©gias para come√ßar a contribuir para projetos de c√≥digo aberto, ganhar terreno em suas contribui√ß√µes e desenvolver seu curr√≠culo de c√≥digo aberto com a ajuda da Kalify Inc.

## Como contribuir para o c√≥digo aberto

Neste cap√≠tulo, vamos gui√°-lo pelo processo de contribui√ß√£o para projetos de c√≥digo aberto. Abordaremos os seguintes t√≥picos:

- Encontrar projetos para trabalhar
- Como enviar uma contribui√ß√£o?
- Integrando-se a um novo projeto
- O que acontece em seguida?

#### Encontrar projetos para trabalhar

Um dos primeiros desafios que voc√™ pode enfrentar ao entrar no mundo do c√≥digo aberto √© encontrar um projeto ao qual contribuir. Aqui est√£o algumas dicas para ajud√°-lo a descobrir projetos que se encaixem em seus interesses e habilidades:

1. **Explore o GitHub e o GitLab**: O GitHub e o GitLab hospedam uma grande quantidade de projetos de c√≥digo aberto. Voc√™ pode usar a fun√ß√£o de pesquisa deles para encontrar projetos com base em palavras-chave, linguagens de programa√ß√£o ou t√≥picos espec√≠ficos.

2. **Siga seus interesses**: Pense nas ferramentas, estruturas e bibliotecas que voc√™ usa ou gostaria de aprender mais. Muitos desses projetos s√£o de c√≥digo aberto e recebem contribui√ß√µes da comunidade com prazer.

3. **Junte-se √†s comunidades de c√≥digo aberto**: Existem muitas comunidades, f√≥runs e plataformas de discuss√£o online dedicados ao desenvolvimento de c√≥digo aberto. Ao se juntar a essas comunidades, voc√™ pode entrar em contato com outros desenvolvedores, descobrir novos projetos e encontrar oportunidades de colabora√ß√£o. No servidor [Discord da Kalify](https://discord.gg/jhSepmE7nN), por exemplo, compartilhamos problemas iniciais, projetos interessantes no GitHub e problemas abertos em nossos reposit√≥rios.

#### Come√ßando a contribuir

Depois de encontrar um projeto ao qual gostaria de contribuir, √© importante entender como o projeto recebe contribui√ß√µes. Aqui est√£o algumas etapas que voc√™ pode seguir para garantir que est√° seguindo os procedimentos estabelecidos pelos respons√°veis pelo projeto para os contribuidores.

1. **Familiarize-se com o projeto**: Leia a documenta√ß√£o do projeto, incluindo o arquivo README, para entender o prop√≥sito, os objetivos e as conven√ß√µes de codifica√ß√£o do projeto. Em seguida, leia o arquivo CONTRIBUTING para entender melhor o processo de contribui√ß√£o. Familiarize-se com o c√≥digo-fonte do projeto, sua estrutura e os problemas existentes (issues).

2. **Encontre um bug/problema ou relate um bug**: Procure por problemas rotulados como "good first issue" (bom primeiro problema) ou "beginner-friendly" (amig√°vel para iniciantes) que correspondam ao seu n√≠vel de habilidade. Voc√™ tamb√©m pode identificar um recurso ou melhoria com os quais gostaria de trabalhar e verificar se eles est√£o alinhados com a trajet√≥ria do projeto. Isso pode incluir atualiza√ß√µes na documenta√ß√£o, corre√ß√µes de bugs, altera√ß√µes de conte√∫do, etc.

3. **Pe√ßa para ser atribu√≠do ao problema**: Quando voc√™ est√° fazendo sua primeira contribui√ß√£o a um projeto, √© aconselh√°vel pedir aos respons√°veis para ser atribu√≠do ao problema. Isso garantir√° que voc√™ n√£o est√° trabalhando duplicadamente e que sua contribui√ß√£o est√° de acordo com os objetivos e requisitos do projeto. Se n√£o houver instru√ß√µes no arquivo CONTRIBUTING, voc√™ pode comentar no problema, "Posso ser atribu√≠do a este problema, por favor?" Quando o respons√°vel atribuir o problema a voc√™, voc√™ notar√° que o problema agora est√° etiquetado com seu nome de usu√°rio.

#### Como enviar uma contribui√ß√£o?

Depois de encontrar o projeto para o qual deseja contribuir, o pr√≥ximo passo √© enviar uma contribui√ß√£o. Aqui est√£o os passos gerais do procedimento:

1. **Fa√ßa um fork do reposit√≥rio**: Crie uma c√≥pia do reposit√≥rio do projeto, isso criar√° uma c√≥pia do reposit√≥rio na sua conta do GitHub. Isso permitir√° que voc√™ fa√ßa altera√ß√µes na base de c√≥digo sem afetar o projeto original.

2. **Clone o seu fork**: Clone o reposit√≥rio forkado para a sua m√°quina local executando o seguinte comando no seu terminal ou prompt de comando:

```shell
git clone https://github.com/username/repository-name.git

```

3. **Criar uma nova branch**: Antes de fazer qualquer modifica√ß√£o, crie uma nova branch no seu reposit√≥rio local para trabalhar na sua contribui√ß√£o. Isso ajudar√° a manter suas altera√ß√µes separadas da branch principal e facilitar√° a submiss√£o de uma solicita√ß√£o de pull request posteriormente. Voc√™ pode criar uma nova branch usando o seguinte comando:

```shell
git checkout -b seu-nome-de-branch
```

Substitua "seu-nome-de-branch" pelo nome descritivo da sua branch, como "correcao-bug-123" ou "adicao-nova-funcionalidade".

4. **Fa√ßa suas altera√ß√µes**: Agora que voc√™ criou uma nova branch, pode fazer as altera√ß√µes no c√≥digo-fonte. Certifique-se de seguir as diretrizes e conven√ß√µes de codifica√ß√£o do projeto e teste suas altera√ß√µes para garantir que elas funcionem como esperado.

5. **Confirme suas altera√ß√µes (commit)**: Ap√≥s concluir suas altera√ß√µes, coloque-as na √°rea de prepara√ß√£o e confirme-as (fa√ßa um commit) usando os seguintes comandos:

```shell
git add .
git commit -m "Sua mensagem de commit"
```

Substitua "Sua mensagem de commit" por uma breve descri√ß√£o das altera√ß√µes que voc√™ fez.

5. **Envie suas altera√ß√µes (push)**: Envie suas altera√ß√µes para o seu reposit√≥rio fork no GitHub executando o seguinte comando:

```shell
git push -u origin seu-nome-de-branch
```

Substitua "seu-nome-de-branch" pelo nome da sua branch onde voc√™ fez as altera√ß√µes.

7. **Enviar uma solicita√ß√£o de pull request**: Ap√≥s ter enviado suas altera√ß√µes, v√° para o reposit√≥rio original do projeto no GitHub e clique no bot√£o "Nova solicita√ß√£o de pull" (New pull request). Na lista suspensa "reposit√≥rio base" (base repository), selecione o reposit√≥rio original e, na lista suspensa "reposit√≥rio de origem" (head repository), selecione o seu reposit√≥rio fork. Escolha a sua branch na lista suspensa "comparar" (compare), e clique em "Criar solicita√ß√£o de pull" (Create pull request). Preencha as informa√ß√µes necess√°rias e envie a sua solicita√ß√£o de pull request.

8. **Responder aos coment√°rios**: Ap√≥s enviar a sua solicita√ß√£o de pull request, os mantenedores do projeto podem fornecer coment√°rios ou solicitar altera√ß√µes. Certifique-se de responder prontamente e levar em considera√ß√£o as preocupa√ß√µes ou sugest√µes que possam ter.

Seguindo esses passos, voc√™ poder√° enviar as suas contribui√ß√µes para projetos open source e colaborar com outros desenvolvedores para melhorar o c√≥digo-base.

# 6. A Receita Secreta

Neste cap√≠tulo, compartilharemos algumas estrat√©gias e dicas menos conhecidas para ter um impacto duradouro na comunidade de c√≥digo aberto. Discutiremos como focar em problemas em aberto, ganhar destaque em suas contribui√ß√µes e desenvolver seu curr√≠culo de c√≥digo aberto usando a Kalify.

### Problemas em Aberto: Mais do que Corrigir Erros de Digita√ß√£o

Embora corrigir erros de digita√ß√£o e melhorar a documenta√ß√£o sejam contribui√ß√µes valiosas para projetos de c√≥digo aberto, √© crucial olhar al√©m dessas tarefas e concentrar-se na resolu√ß√£o de problemas em aberto. A resolu√ß√£o de problemas em aberto n√£o apenas faz o projeto avan√ßar, mas tamb√©m permite que voc√™ desenvolva uma compreens√£o mais profunda da base de c√≥digo e demonstre suas habilidades de resolu√ß√£o de problemas.

Aqui est√£o algumas dicas para encontrar e resolver problemas em aberto:

1. **Navegue pelo Rastreamento de Problemas**: a maioria dos projetos de c√≥digo aberto usa um sistema de rastreamento de problemas para gerenciar bugs, solicita√ß√µes de recursos e outras tarefas. Explore o sistema de rastreamento de problemas em busca de problemas que correspondam aos seus interesses e habilidades.

2. **Procure Problemas Adequados para Iniciantes**: muitos projetos usam r√≥tulos como "bom primeiro problema" ou "pedido de ajuda" para indicar problemas adequados para iniciantes. Comece por esses problemas para ganhar confian√ßa e adquirir experi√™ncia antes de abordar tarefas mais complexas.

3. **Compreenda o Problema**: antes de mergulhar em um problema, certifique-se de compreender bem o problema e o resultado desejado. Se voc√™ n√£o tiver certeza de algo, fa√ßa perguntas ou pe√ßa esclarecimentos aos mantenedores do projeto ou a outros contribuidores.

4. **Comunique suas Inten√ß√µes**: antes de come√ßar a trabalhar em um problema, informe aos respons√°veis pelo projeto e outros contribuidores que voc√™ est√° interessado em resolv√™-lo. Isso pode ajudar a evitar esfor√ßos duplicados e garantir que todos estejam na mesma p√°gina.

5. **Teste Suas Altera√ß√µes**: depois de resolver um problema, teste cuidadosamente suas altera√ß√µes para garantir que funcionem conforme o esperado e n√£o introduzam novos problemas.

Ao focar em problemas em aberto em vez de simplesmente corrigir erros de digita√ß√£o, voc√™ ter√° um impacto mais significativo nos projetos aos quais contribui e demonstrar√° seu compromisso com a comunidade de c√≥digo aberto.

### Destacando-se nas Contribui√ß√µes

√Ä medida que voc√™ se torna mais experiente em contribui√ß√µes de c√≥digo aberto, pode desejar aumentar seu impacto nos projetos em que trabalha e obter reconhecimento por seus esfor√ßos. Aqui est√£o algumas estrat√©gias para se destacar em suas contribui√ß√µes:

1. **Torne-se um Contribuidor Regular**: Contribua regularmente para os mesmos projetos ao longo do tempo. Isso ajudar√° voc√™ a desenvolver um entendimento mais profundo da base de c√≥digo, a construir relacionamentos com outros contribuidores e a se estabelecer como um membro valioso da comunidade.

2. **Assuma Tarefas Desafiadoras**: √† medida que voc√™ ganha experi√™ncia, aborde problemas e recursos mais complexos. Isso n√£o apenas o ajudar√° a crescer como desenvolvedor, mas tamb√©m demonstrar√° sua capacidade de lidar com tarefas dif√≠ceis e contribuir de maneira significativa para o projeto.

3. **Colabore com Outros**: o c√≥digo aberto trata da colabora√ß√£o. Trabalhe com outros contribuidores para resolver problemas, desenvolver recursos e compartilhar conhecimento. Ao colaborar efetivamente, voc√™ melhorar√° n√£o apenas o projeto, mas tamb√©m criar√° uma rede s√≥lida de conex√µes na comunidade de c√≥digo aberto.

4. **Compartilhe seu Conhecimento**: compartilhe seus conhecimentos e ideias escrevendo artigos, criando tutoriais ou fazendo apresenta√ß√µes sobre os projetos em que trabalha. Isso n√£o apenas ajudar√° os outros a aprender com suas experi√™ncias, mas tamb√©m o estabelecer√° como um l√≠der de opini√£o na comunidade de c√≥digo aberto.

5. **Mentore Novos Contribuidores**: √† medida que voc√™ ganha experi√™ncia em contribui√ß√µes de c√≥digo aberto, considere orientar novos contribuidores que est√£o come√ßando sua jornada no c√≥digo aberto. Isso pode ajudar a retribuir √† comunidade, desenvolver suas habilidades de lideran√ßa e construir uma reputa√ß√£o positiva.

### Destacando Efetivamente Suas Contribui√ß√µes

Informa√ß√µes importantes para incluir ao destacar suas contribui√ß√µes:

- Novos recursos que voc√™ criou.
- Detalhes do projeto (ferramentas, bibliotecas, tamanho e complexidade).
- O tipo de suas contribui√ß√µes: corre√ß√£o de bug, funcionalidade, desempenho, documenta√ß√£o, etc.
- Detalhes de sua contribui√ß√£o, incluindo melhorias e impactos no projeto e na comunidade.
- Detalhes sobre colabora√ß√£o e trabalho em equipe.

#### Formato de seu Destaque
Para ser eficaz ao destacar suas contribui√ß√µes, recomendamos usar o seguinte formato:
- **T√≠tulo**: deve ser uma breve descri√ß√£o da contribui√ß√£o. Por exemplo, "Cria√ß√£o de uma a√ß√£o GitHub para mesclar automaticamente solicita√ß√µes de pull".
- **Link**
- **Descri√ß√£o**: ao destacar sua contribui√ß√£o, recomendamos mencionar o impacto que teve em todo o projeto. Isso pode ser √∫til para enfatizar suas qualifica√ß√µes ao se candidatar a empregos, especialmente se voc√™ tiver lacunas em seu hist√≥rico de empregos. Considere usar o seguinte modelo para ajudar a transformar esse destaque em uma hist√≥ria:
- Verbo de a√ß√£o + nome + m√©trica + resultado.
- Exemplo: enquanto revisava algumas solicita√ß√µes de pull para o GirlScript Summer of Code deste ano, notei que a maioria delas n√£o estava sendo mesclada, apesar da minha aprova√ß√£o e da aprova√ß√£o do propriet√°rio. Portanto, **criei uma a√ß√£o GitHub onde as solicita√ß√µes de pull s√£o mescladas automaticamente quando passam pelas etapas de implanta√ß√£o (verbo de a√ß√£o + nome)**, o que **aumentou a produtividade em 80% (m√©trica + resultado)**.

**Compartilhe-o!**: Depois de criar um portf√≥lio de contribui√ß√µes de c√≥digo aberto, voc√™ pode compartilhar seu curr√≠culo de c√≥digo aberto com os outros clicando no bot√£o de compartilhamento no cabe√ßalho de sua p√°gina de perfil. Isso pode ser especialmente √∫til ao se candidatar a empregos, ao fazer networking com outros desenvolvedores ou ao promover seu trabalho na comunidade de c√≥digo aberto.

Ao aproveitar a Kalify para rastrear suas contribui√ß√µes de c√≥digo aberto e desenvolver seu curr√≠culo, voc√™ estar√° melhor preparado para destacar suas habilidades, experi√™ncia e impacto na comunidade de c√≥digo aberto.

Em conclus√£o, come√ßar com contribui√ß√µes de c√≥digo aberto e ter um impacto duradouro nos projetos em que voc√™ trabalha requer uma combina√ß√£o de habilidades t√©cnicas, colabora√ß√£o e perseveran√ßa. Ao focar em problemas em aberto, ganhar destaque em suas contribui√ß√µes e aproveitar a comunidade como a Kalify, voc√™ estar√° no caminho certo para uma jornada bem-sucedida e gratificante no c√≥digo aberto.

## 7. Conclus√£o

Para concluir este curso sobre os fundamentos do c√≥digo aberto, vamos recapitular as principais li√ß√µes e discutir os pr√≥ximos passos em sua jornada no c√≥digo aberto.

### Principais Pontos

Ao longo deste curso, abordamos uma s√©rie de t√≥picos projetados para ajud√°-lo a entender e navegar pelo mundo do c√≥digo aberto:

1. **O que √© C√≥digo Aberto?**: Discutimos a defini√ß√£o de c√≥digo aberto, sua hist√≥ria e os princ√≠pios fundamentais que orientam o movimento de c√≥digo aberto.

2. **Por que C√≥digo Aberto?**: Exploramos os benef√≠cios de participar de projetos de c√≥digo aberto, incluindo acesso ao conhecimento, √† comunidade e ao desenvolvimento de habilidades.

3. **Ferramentas para o Sucesso**: Apresentamos as ferramentas e plataformas essenciais para contribuintes de c√≥digo aberto, como GitHub, Git, CodeSee, Visual Studio Code e Discord.

4. **Como Contribuir para o C√≥digo Aberto**: Discutimos o processo de encontrar projetos para trabalhar, enviar contribui√ß√µes, integrar-se a novos projetos e o que acontece ap√≥s o envio de sua contribui√ß√£o.

5. **O Segredo do Sucesso**: Compartilhamos estrat√©gias para come√ßar a contribuir para o c√≥digo aberto, ganhar destaque em suas contribui√ß√µes e desenvolver seu curr√≠culo de c√≥digo aberto usando a Kalify.

Compreendendo esses conceitos e aplicando as estrat√©gias que discutimos, voc√™ estar√° bem preparado para iniciar com sucesso sua jornada no mundo do c√≥digo aberto.

### Pr√≥ximos Passos

Com o conhecimento e as ferramentas que voc√™ adquiriu neste curso, voc√™ est√° pronto para mergulhar no mundo do c√≥digo aberto e come√ßar a fazer contribui√ß√µes significativas. Aqui est√£o os pr√≥ximos passos que o ajudar√£o a avan√ßar em sua jornada no c√≥digo aberto:

1. **Identifique seus Interesses e Metas**: Antes de come√ßar a contribuir para projetos de c√≥digo aberto, reserve algum tempo para refletir sobre seus interesses, paix√µes e objetivos. Isso o ajudar√° a identificar os projetos que correspondem aos seus valores e objetivos.

2. **Encontre Projetos para Contribuir**: Utilize plataformas e comunidades como GitHub, Kalify Inc e CodeTriage para descobrir projetos de c√≥digo aberto que se alinhem com seus interesses e habilidades. Procure projetos com comunidades ativas, documenta√ß√£o clara e diretrizes de contribui√ß√£o bem definidas.

3. **Comece a Contribuir**: Depois de identificar um projeto para contribuir, comece abordando tarefas pequenas e gerenci√°veis para ganhar confian√ßa e adquirir experi√™ncia. √Ä medida que se sentir mais confort√°vel, poder√° enfrentar tarefas e desafios mais complexos.

4. **Conecte-se com a Comunidade de C√≥digo Aberto**: Junte-se a f√≥runs online, plataformas de discuss√£o e grupos de m√≠dia social relacionados aos projetos que lhe interessam. Converse com outros contribuintes, fa√ßa perguntas e compartilhe seu conhecimento.

5. **Participe de Eventos e Confer√™ncias de C√≥digo Aberto**: Participe de eventos, confer√™ncias e reuni√µes de c√≥digo aberto para aprender com os outros, criar contatos com outros desenvolvedores e manter-se atualizado sobre as √∫ltimas tend√™ncias e melhores pr√°ticas no mundo do c√≥digo aberto.

6. **Compartilhe suas Experi√™ncias**: Documente sua jornada no campo do c√≥digo aberto escrevendo artigos de blog, criando tutoriais ou fazendo apresenta√ß√µes. Isso n√£o s√≥ permitir√° que outros aprendam com suas experi√™ncias, mas tamb√©m o posicionar√° como um l√≠der de opini√£o na comunidade de c√≥digo aberto.

7. **Aprendizado Cont√≠nuo**: O c√≥digo aberto √© um campo din√¢mico e em constante evolu√ß√£o. Mantenha-se atualizado com as √∫ltimas ferramentas, t√©cnicas e melhores pr√°ticas participando de workshops, fazendo cursos online e lendo artigos e livros sobre desenvolvimento de c√≥digo aberto. Inclu√≠mos uma se√ß√£o de recursos adicionais para obter mais informa√ß√µes.

Em conclus√£o, iniciar a aventura do c√≥digo aberto √© uma experi√™ncia gratificante e enriquecedora que pode ajud√°-lo a desenvolver novas habilidades, criar v√≠nculos com pessoas que compartilham suas ideias e ter um impacto duradouro nos projetos em que trabalha. Com o conhecimento e as ferramentas que voc√™ adquiriu neste curso, voc√™ est√° bem preparado para enfrentar os desafios empolgantes e aproveitar as oportunidades que o esperam no mundo do c√≥digo aberto. Ent√£o, v√° em frente e comece a contribuir, a comunidade de c√≥digo aberto aguarda ansiosamente sua participa√ß√£o!

## 8. Recursos Adicionais

Parab√©ns pela sua jornada no mundo do c√≥digo aberto! Aqui est√£o algumas recursos para voc√™ aprender mais sobre como come√ßar no c√≥digo aberto:

### Guias e tutoriais
- [Guias de C√≥digo Aberto](https://opensource.guide/) do GitHub: guias abrangentes sobre v√°rios aspectos do c√≥digo aberto, incluindo como come√ßar, contribuir, manter projetos e criar comunidades.

- [Primeiras Contribui√ß√µes](https://github.com/firstcontributions/first-contributions) por Roshan Jossey: um guia amig√°vel para iniciantes que o orientar√° durante sua primeira contribui√ß√£o para um projeto de c√≥digo aberto.

- [Guia para Iniciantes no Desenvolvimento de Software de C√≥digo Aberto](https://training.linuxfoundation.org/training/beginners-guide-open-source-software-development/) pela Linux Foundation: um curso online gratuito que aborda os fundamentos do software de c√≥digo aberto, incluindo sua hist√≥ria, licen√ßas e modelos de desenvolvimento.

- [Rede de Estudantes de C√≥digo Aberto da Mozilla (OSSN)](https://community.mozilla.org/en/): Fornece recursos e suporte para estudantes interessados em c√≥digo aberto, incluindo guias, eventos e oportunidades de mentoria.

- [Introdu√ß√£o ao GitHub e Projetos de C√≥digo Aberto](https://www.digitalocean.com/community/tutorial_series/an-introduction-to-open-source) por DigitalOcean: uma s√©rie de tutoriais voltados para iniciantes que abrange o b√°sico do c√≥digo aberto, incluindo como encontrar projetos para contribuir, entender o c√≥digo-fonte e enviar contribui√ß√µes.

- [Open Source Friday](https://opensourcefriday.com/) pelo GitHub: um movimento global que incentiva indiv√≠duos e organiza√ß√µes a contribuir com o c√≥digo aberto toda sexta-feira. O site fornece recursos e guias sobre como come√ßar no c√≥digo aberto e encontrar projetos para contribuir.

## 9. Gloss√°rio

### Referencial

Um referencial (reposit√≥rio) √© um local central onde o c√≥digo √© armazenado e gerenciado. No c√≥digo aberto, os reposit√≥rios geralmente s√£o hospedados em plataformas como GitHub, GitLab ou Bitbucket. Cada referencial pode conter um ou v√°rios projetos, e os contribuidores podem enviar altera√ß√µes no c√≥digo atrav√©s de solicita√ß√µes de pull request.

### Mantenedor

Um mantenedor √© uma pessoa ou grupo de pessoas respons√°veis pela manuten√ß√£o de um projeto de c√≥digo aberto espec√≠fico. Os mantenedores geralmente s√£o respons√°veis por revisar e aceitar ou rejeitar as contribui√ß√µes de outros contribuidores. Eles tamb√©m t√™m o poder de tomar decis√µes finais sobre a dire√ß√£o e o escopo do projeto.

### Membro Principal

Um membro principal √© um contribuidor que recebeu privil√©gios ou responsabilidades adicionais em um projeto de c√≥digo aberto. Os membros principais geralmente s√£o contribuidores de confian√ßa que demonstraram um profundo entendimento do projeto e fizeram contribui√ß√µes significativas para o seu desenvolvimento.

### Problema

Um problema √© um bug que precisa ser corrigido no c√≥digo. Problemas podem ser criados por qualquer pessoa e s√£o frequentemente usados para rastrear bugs, solicita√ß√µes de recursos e outras tarefas que precisam ser realizadas.

### Contribuidor

Um contribuidor √© qualquer pessoa que fa√ßa altera√ß√µes, adi√ß√µes ou sugest√µes em um projeto de c√≥digo aberto. Os contribuidores podem ser desenvolvedores, designers, redatores, testadores ou qualquer pessoa que ajude a melhorar o projeto.

### Clonar

Clonar √© o processo usado para copiar um reposit√≥rio Git existente para um novo diret√≥rio local. O comando `git clone` criar√° um novo diret√≥rio local para o reposit√≥rio, copiar√° todo o conte√∫do do reposit√≥rio especificado, criar√° rastreamento de branches remotas e extrair√° uma branch inicial localmente. Por padr√£o, o Git clone criar√° uma refer√™ncia ao reposit√≥rio remoto chamado "origin".

### Bifurcar

Um fork √© uma c√≥pia de um reposit√≥rio. Quando voc√™ faz um fork de um reposit√≥rio, cria uma nova c√≥pia da base de c√≥digo que pode modificar e experimentar sem afetar a base de c√≥digo original.

### Branch (Ramo)

Uma branch (ramo) √© uma vers√£o separada do c√≥digo criada para fins de desenvolvimento. Branches permitem que contribuidores experimentem altera√ß√µes sem afetar a base de c√≥digo principal. Quando as altera√ß√µes est√£o prontas para serem mescladas na base de c√≥digo principal, geralmente s√£o enviadas como uma solicita√ß√£o de pull request.

### Solicita√ß√£o de Pull Request (Pull Request)

Uma solicita√ß√£o de pull request √© uma solicita√ß√£o de um contribuidor a um mantenedor para mesclar as altera√ß√µes feitas no c√≥digo em uma base de c√≥digo.

### Mesclar

Mesclar √© o processo de combinar as altera√ß√µes de uma branch em outra. Quando uma solicita√ß√£o de pull request √© aceita e mesclada, as altera√ß√µes feitas na solicita√ß√£o de pull request se tornam parte da base de c√≥digo principal.

### Docs (Documenta√ß√£o)

"Docs" √© uma abrevia√ß√£o da palavra "documenta√ß√£o," que √© um peda√ßo de texto que fornece informa√ß√µes sobre como contribuir para projetos de c√≥digo aberto e as expectativas dos contribuidores. O Markdown, uma linguagem de marca√ß√£o baseada em texto, √© frequentemente usada para criar esse tipo de conte√∫do. Quer ver isso em a√ß√£o? Confira o [Guia de Estilo no nosso reposit√≥rio Pizza Verse](https://github.com/open-sauced/pizza-verse/blob/main/style-guide.md)!]]></description>
            <link>https://yagasaki.vercel.app//articles/introducao-ao-codigo-aberto</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/introducao-ao-codigo-aberto</guid>
            <pubDate>Sat, 17 Feb 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Desvendando o NestJS, uma jornada para iniciantes]]></title>
            <description><![CDATA[
![Nestjs.com](https://nestjs.com/header.1af6756a.png)

Minha maior dificuldade com NestJS era realmente entender M√≥dulos, Controladores e Servi√ßos, mas talvez o motivo disso
seja n√£o ter tido contato anterior com linguagens "mais pesadas" como Java ou frameworks como Angular que constantemente
lidam com esse tipo de cen√°rio.

Ent√£o, vou fazer uma esp√©cie de Zettelkasten ou at√© mesmo - de leigo para leigo - e anotar tudo que eu tenho de
dificuldade, cen√°rios, analogias e tudo que √© necess√°rio para aprendermos juntos como o que √© o NestJS e como ele
funciona, j√° aviso que isso pode ficar grande esse tipo de conte√∫do, ent√£o recomendo voc√™ utilizar o menu da direita
para se orientar em t√≥picos e assuntos que sejam pertinentes a voc√™ ou ao assunto que esteja procurando. Bom, vamos l√°!

<!--truncate-->

## O que √© o NestJS?

NestJS √© um framework para constru√ß√£o de aplicativos web em Node.js, que utiliza conceitos e padr√µes familiares aos
desenvolvedores que j√° trabalham com Angular. Ele foi projetado para ser escal√°vel, modular e f√°cil de manter. O NestJS
utiliza TypeScript como sua linguagem principal, o que permite aos desenvolvedores aproveitar recursos avan√ßados de
tipagem est√°tica e compila√ß√£o para JavaScript.

### D√∫vida: Inje√ß√£o de Depend√™ncia tem a ver?

Resumidamente, quando voc√™ injeta uma depend√™ncia, voc√™ t√° fornecendo tudo que √© externo e que uma classe precisa pra
funcionar. Se voc√™ simplesmente importa de uma classe pra outra voc√™ acaba criando um acoplamento, porque a classe que
recebe o import est√° diretamente ligada a que fornece. 

Ent√£o sim, tem a ver, j√° que o NestJS usa classes.

## Entendendo o que √© Modules, Providers, Controllers e Services no NestJS

### Modules (M√≥dulos)
Seguindo a documenta√ß√£o do NextJS:

> Um m√≥dulo √© uma classe anotada com um decorador @Module(). O decorador @Module() fornece metadados que o Nest usa para organizar a estrutura da aplica√ß√£o.
> 
> Cada aplica√ß√£o tem pelo menos um m√≥dulo, um m√≥dulo raiz. O m√≥dulo raiz √© o ponto de partida que o Nest usa para construir o grafo da aplica√ß√£o - a estrutura interna de dados que o Nest usa para resolver relacionamentos e depend√™ncias de m√≥dulos e provedores. Embora teoricamente pequenas aplica√ß√µes possam ter apenas o m√≥dulo raiz, esse n√£o √© o caso t√≠pico. Queremos enfatizar que os m√≥dulos s√£o altamente recomendados como uma maneira eficaz de organizar seus componentes. Assim, para a maioria das aplica√ß√µes, a arquitetura resultante empregar√° m√∫ltiplos m√≥dulos, cada um encapsulando um conjunto de capacidades intimamente relacionadas.

Entendeu? Sen√£o, nem eu.

Mas vamos dissecar isso. Um m√≥dulo √© uma classe que usa um decorador chamado `@Module()`, ou seja, ela √© identificada
por essa nomenclatura. Um m√≥dulo √© obrigado a ter um m√≥dulo raiz que √© o principal, talvez aquele vinculado ao
aplicativo em si, ou seja, a base da √°rvore tem de vir de um m√≥dulo e depois a gente vai separando eles ou at√© mesmo
criando galhos separados para a mesma aplica√ß√£o. Sendo assim, eles s√£o respons√°veis e altamente recomendados, como
citado acima por ser uma maneira eficaz de organizar os componentes.

```typescript
import { Module } from '@nestjs/common';
import { CatsController } from './cats.controller';
import { CatsService } from './cats.service';

@Module({
  controllers: [CatsController],
  providers: [CatsService],
})
export class CatsModule {}
```

Aqui, podemos ver que o modulo √© respons√°vel pela importa√ß√£o dos controladores (controllers) e do provedores
(providers), mas vamos usar a nomenclatura em portugu√™s para facilitar, estamos aprendendo, n√£o √© mesmo?

Sabe-se que no controllers por exemplo, ele √© um array: `controllers: [CatsController],`, podendo colocar mais de um
controlador dentro do m√≥dulo e assim, se repetindo para os demais. 

Mas vamos a minha opini√£o e experi√™ncia. Sabemos que podemos importar mais de vinte, se necess√°rio, ent√£o, temos que ter
consci√™ncia e bom senso de limitar isso a cinco e utilizar outros m√≥dulos para fazer outras importa√ß√µes, caso ao
contr√°rio, ser√° a mesma coisa que no React, veremos uns trinta useState para criar coisas simples que at√© mesmo o
Javascript puro poderia fazer.

![](https://docs.nestjs.com/assets/Shared_Module_1.png)

Ent√£o atente-se a cria√ß√£o e importa√ß√£o de controladores para dentro dos m√≥dulos, se for o caso, crie ramifica√ß√µes, crie
outro m√≥dulo, importe ele e importe os controladores para dentro dele identificando o
cen√°rio mais correto daquela situa√ß√£o, como Users Module, Orders Module e Chat Module (como o caso da imagem acima).

Para criarmos um m√≥dulo usando CLI, n√≥s podemos usar o seguinte comando:

```bash
nest g module cats
```

### Providers (Provedores)

Segundo a documenta√ß√£o, novamente, j√° que √© importante seguir ela e segundo a pr√≥pria comunidade, a documenta√ß√£o do
NestJS √© uma das mais bem feitas da atualidade.

> Os Provedores s√£o um conceito fundamental no Nest. Muitas das classes b√°sicas do Nest podem ser tratadas como
> provedores - servi√ßos, reposit√≥rios, f√°bricas, ajudantes, e assim por diante. A ideia principal de um provedor √© que
> ele pode ser injetado como uma depend√™ncia; isso significa que os objetos podem criar v√°rias rela√ß√µes entre si, e a
> fun√ß√£o de "conectar" esses objetos pode ser amplamente delegada ao sistema de tempo de execu√ß√£o do Nest.

Entendeu o cen√°rio? Eu acredito que ficou mais complexo do que a explica√ß√£o dos m√≥dulos, mas vamos l√°. De volta a
dissecar.

Provedores √© um conceito inicialmente, ent√£o ele √© apenas uma ideia, mas ideia de que? De que classes b√°sicas, s√£o
chamadas de provedores, como servi√ßos, reposit√≥rios e outros exemplos de cen√°rio, como eu traduzi ao p√© da letra,
f√°bricas e ajudantes s√£o na verdade factories e helpers, pode ser que voc√™ tenha no√ß√£o do uso desse cen√°rio melhor do
que eu.

A ideia dele √© que ele pode ser injetado como uma depend√™ncia, lembra que mencionei mais acima? O que quer dizer que
objetos podem ter rela√ß√µes entre si - l√° ele - e podem se conectar e comunicar-se entre si, √© uma esp√©cie de p√°ssaro
passando informa√ß√µes entre as √°rvores (m√≥dulos).

Ent√£o o CatsService (service) mencionado dentro do provedores no c√≥digo dos m√≥dulos, est√° correto? Sim. Services √© um
provider.

Ficou confuso? Se sim, entenda que no c√≥digo, na hora que estamos importando CatsService para dentro de providers,
estamos dizendo para nosso provedor que esse servi√ßo (CatsService) ir√° prover uma funcionalidade, entendeu? Ent√£o, ele
n√£o √© um modulo, ele √© provedor, o motivo? Ele √© um servi√ßo. Por isso, √© fundamental a nomenclatura, separar os nomes
como DogService, BirdService, ou CatHelpers para entender que todos eles fazem parte de um provedor, √© uma pr√°tica √∫til
para organizar o c√≥digo e evitar confus√µes.

### O que √© Servi√ßos (Services) e quando usar?

J√° sabemos que Services √© uma colet√¢nea de provedores, se ele tem alguma funcionalidade, ele √© importado dentro
do provedor, mas BirdService √© um provedor? Sim. Ele √© um service? Sim. Ele √© um Helper? N√£o, j√° que n√£o usamos
essa nomenclatura e isso pode atrapalhar seu entendimento do c√≥digo.

No NestJS, os servi√ßos s√£o classes que s√£o importadas dentro do provedor, como mencionado, e eles possuem a l√≥gica de
neg√≥cios da aplica√ß√£o. Eles s√£o respons√°veis por executar tarefas espec√≠ficas, como acessar bancos de dados, realizar
opera√ß√µes de leitura e grava√ß√£o, executar c√°lculos complexos e interagir com outros servi√ßos ou componentes da
aplica√ß√£o, vamos interpretar eles sendo como fun√ß√µes no Javascript, respons√°veis por fazer a quest√£o funcionar.

Acredito que no caso das importa√ß√µes, lembra que eu falei que o ideal √© chamarmos cinco m√≥dulos e depois separarmos, se
for o caso? Acredito que n√£o tenha problema ter vinte importa√ß√µes, desde que ele n√£o seja no m√≥dulo raiz, e sim,
no m√≥dulo que ele √© respons√°vel, vamos usar o caso da calculadora, certo? Quantos services ele pode ter? 

Posso criar um para adi√ß√£o, outro para subtra√ß√£o, outro para multiplica√ß√£o e assim por diante e n√£o tem problema. O
problema maior √© voc√™ colocar todas essas importa√ß√µes dentro do m√≥dulo raiz, sendo que estamos criando um celular,
imagina a bagun√ßa que seria, ent√£o o ideal, √© criarmos um m√≥dulo chamado calculatorModule() e importar l√° dentro
esses services.

Outro exemplo √©, em uma aplica√ß√£o de lista de tarefas, voc√™ pode ter um servi√ßo de TaskService que cont√©m m√©todos para
criar, atualizar, recuperar e excluir tarefas do banco de dados. Esse servi√ßo pode ser importado (injetado) em um
controlador de tarefas para lidar com as solicita√ß√µes HTTP relacionadas √†s tarefas.

Para criar um servi√ßo, via CLI, voc√™ pode utilizar o seguinte comando:

```bash
nest g service cats
```

### Controllers (Controladores)

E vamos ver na documenta√ß√£o.

> O objetivo de um controlador √© receber solicita√ß√µes espec√≠ficas para a aplica√ß√£o. O mecanismo de roteamento controla qual controlador recebe quais solicita√ß√µes. Frequentemente, cada controlador tem mais de uma rota, e diferentes rotas podem realizar diferentes a√ß√µes. Para criar um controlador b√°sico, usamos classes e decoradores. Os decoradores associam classes com metadados necess√°rios e permitem que o Nest crie um mapa de roteamento (vinculando solicita√ß√µes aos controladores correspondentes).

Vamos simplificar isso. Qual √© a funcionalidade de um controlador? Receber solicita√ß√µes especificas para a aplica√ß√£o, ent√£o podemos definir
que ele pode receber uma funcionalidade para deletar, adicionar ou editar uma funcionalidade dentro da aplica√ß√£o. Como eles podem ter mais
de uma rota, ent√£o fica claro que podemos definir um `task/delete` ou `task/create` como rotar para fazer determinadas opera√ß√µes, como
no caso de deletar e criar.

Para criar um controlador b√°sico, utilizamos classes, assim como nos servi√ßos e decoradores (decorators), os decoradores nesse caso do controlador
√© o `@Controller('cats')`, ele √© que √© o respons√°vel por criar a rota que a aplica√ß√£o ou usu√°rio ir√° acessar para conseguir determinada coisa, vamos
ver no c√≥digo abaixo por exemplo:

```typescript
import { Controller, Get } from '@nestjs/common';

@Controller('cats')
export class CatsController {
  @Get()
  findAll(): string {
    return 'This action returns all cats';
  }
}
```

Explicando o c√≥digo acima, n√≥s pegamos o `@Controller`, definimos que a rota que iremos usar (m√©todo de roteamento) ser√°
`cats`, ent√£o quando acessar `localhost:3000/cats`, por exemplo, seremos jogados para esse lugar. Definimos que ele √©
uma classe, como a nomenclatura j√° diz e que ele tem um `@Get()`.

Mas o que isso significa? √â que pelo m√©todo HTTP, essa rota ela ter√° o m√©todo GET, ent√£o fica f√°cil definir o que ela
ir√° fazer, no caso, iremos devolver uma informa√ß√£o e dentro ainda, temos uma fun√ß√£o chamada `findAll()` que √© do tipo
_string_, que ir√° retornar `'This action returns all cats'`.

Complicado? Acho que n√£o.

Para criar um controller usando CLI, usamos o seguinte comando:

```bash
nest g controller name
```

## Entendendo o cen√°rio

Ficou claro como usamos cada funcionalidade para aprendermos a usar o Nest? Claro, ele √© um framework back-end de Javascript,
ent√£o ele √© meio que um compilado de funcionalidades em cima do Express. Ent√£o temos v√°rias fun√ß√µes semi-prontas,
que ir√£o facilitar nossa vida para criar uma aplica√ß√£o.

Usamos um m√≥dulo para definir categorias, como o caso de tarefas ou uma calculadora, levando em conta que s√£o aplica√ß√µes simples,
usamos um controlador para dizer o que acontece quando acessar aquela rota em especifica, seja para deletar um c√°lculo ou armazenar ele,
e usamos o servi√ßo para fazer a funcionalidade funcionar, como fazer um c√°lculo, por exemplo.

Entendemos que o cen√°rio para a cria√ß√£o desse tipo de aplica√ß√£o varia muito, acabo que recomendando em utilizar em
m√©dias-altas aplica√ß√µes. O que significa? N√£o h√° necessidade de utilizar um NestJS para usar m√©todos HTTP para criar
uma calculadora por exemplo ou fazer um uso de uma simples API, mas existem v√°rios cen√°rios adequados como criar
um dashboard financeiro, criar um site de not√≠cias e deixar bem mais completo e esse tipo de cen√°rio.

## Considera√ß√µes Finais

A documenta√ß√£o dele √© bem explicada, como podemos ver, eu consegui entender bem mais o que de fato √© o NestJS do que
seguindo cursos ou v√≠deos no Youtube, eu simplesmente parei para ler a documenta√ß√£o e usei desse artigo para explicar o
que eu aprendi para outra pessoa sobre o que foi passado. Entender todo o cen√°rio, ler com calma, ver a funcionalidade
daquele c√≥digo pouco a pouco e tentar se auto explicar, √© uma das maneiras mais simples de se aprender e absorver
conhecimento, ent√£o n√£o se assuste.

Espero de fato ter conseguido explicar todo o cen√°rio b√°sico do NestJS, espero que voc√™ possa pegar projetos
e ideias no Youtube para clonar ou utilizar a seu favor para fixar ainda mais essas ideias de como ele funciona, e claro,
entender quando utiliz√°-lo, j√° que ele √© basicamente um carro bem veloz na m√£o de quem usa e voc√™ n√£o vai usar ele para ir
na padaria e buscar p√£o.

Espero ter ajudado, pois a constru√ß√£o desse artigo em si, j√° foi de grande ajuda at√© mesmo para mim em entender esse
cen√°rio e aplica√ß√£o e bom, qualquer d√∫vida ou sugest√£o, voc√™ pode me chamar l√° no
[Twitter](https://twitter.com/Yagasaki7k) ou na [Comunidade no WhatsApp](https://chat.whatsapp.com/KOgletvhYCvFIpuo9SNgGJ).

Obrigado por ter lido at√© aqui e at√© a pr√≥xima!]]></description>
            <link>https://yagasaki.vercel.app//articles/desvendando-o-nest-js-uma-jornada-para-iniciantes</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/desvendando-o-nest-js-uma-jornada-para-iniciantes</guid>
            <pubDate>Tue, 13 Feb 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Kombat Taekwondo Referee Siminar Brazil, Semin√°rio de Desenvolvimento de √Årbitros]]></title>
            <description><![CDATA[
![Sam Moghadam Khamseh](https://images.unsplash.com/photo-1598518619776-eae3f8a34eac?q=80&w=2071&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

Isso n√£o √© um artigo sobre desenvolvimento ou tecnologia.

--

# Kombat Taekwondo Referee Siminar Brazil - Semin√°rio de Desenvolvimento de √Årbitros
Liga Maior e Menor - 20 de Janeiro de 2024 / World's Premier Professional Taekwondo League

A metodologia do Kombat Taekwondo √© criar algu√©m de refer√™ncia no Taekwondo. Quando se menciona
um atleta de competi√ß√£o em UFC, em Boxe ou qualquer outro esporte sempre ir√£o mencionar algumas
pessoas, mas no Taekwondo isso n√£o existe e a meta do Kombat √© fazer, √© transformar essas
pessoas de referencia em referencia mundial.

A filosofia do Kombat Taekwondo √© a divulga√ß√£o do esporte e suas academias, os diretores
n√£o tem fun√ß√£o alguma em interferir na administra√ß√£o do projeto.

<!--truncate-->

Major League - 18+ // Minor League - 18-

## Equipe

Presidente de Eventos e Comiss√°rio de Eventos - Mestre Chuong Pham
√Årbitros - Robert Quon (Diretor), Marcelo Rezende (Co Presidente BR) e Elva Adams (Co Presidente USA)

√â um esporte de combate distinto e uma liga administrativa pela marca Kombat Taekwondo. Utilizando
suas pr√≥prias t√©cnicas, suas pr√≥prias regras e maneiras de lhe dar com campeonatos sendo independente
da WTF ou ITF.

**Liga Profissional**
Campeonatos de t√≠tulos mundiais e campeonatos preliminares, sendo para idade a partir de dezoito anos.

**Major League**
Open Mundial, Grand Prix, Torneio Locais, Regionais e Nacionais, sendo para idade a partir de dezoito anos.

**Minor League**
Torneios Locais, Regionais e Nacionais, sendo para Mirim (8 - 9), Infantil (10 - 11), Cadete (12 - 14), Junior (15 - 17)

## Qualifica√ß√£o dos oficiais de arbitragem

- Idade m√≠nima de 21 anos para Ligas Profissionais e Major.
- Liga menores a partir de 18 anos
- Faixas pretas em Taekwondo de todos os diferentes estilos.
- Participar dos treinamentos e semin√°rios necess√°rios.
- Manter bom condicionamento f√≠sico e compostura mental.
- Demonstrar um conhecimento profundo das regras de competi√ß√£o.

## Roles and Responsabilities

**√Årbitro** (Um Central no Individual e Dois no Centro em lutas de Equipes)
Controla e administra a luta, avalia advert√™ncias e penalidades, declara√ß√£o do vencedor.

**Ju√≠zes** (Dois a tr√™s ju√≠zes)
Seguir os crit√©rios de julgamento para avaliar os dois competidores por meio de estrat√©gias
eficazes de luta e fazer sua pr√≥pria avalia√ß√£o independente de cada competidor.

## N√≠veis da Carreira do √Årbitro
**N√≠vel 1 - Junior** / 
Minimo para gradua√ß√£o para Associado - 3 anos e minimo de 3 eventos

**N√≠vel 2 - Associado** / 
Se tiver envolvimento como arbitro em eventos nacionalmente.
Minimo para gradua√ß√£o para Profissional - 5 anos e minimo de 5 eventos

**N√≠vel 3 - Profissional** / 
Se tiver envolvimento como arbitro em eventos mundiais ou de suma import√¢ncia.
Minimo para gradua√ß√£o para Delegado T√©cnico - 10 anos e minimo de 10 eventos

**N√≠vel 4 - Delegado T√©cnico** / 
Se tiver envolvimento como arbitro em eventos olimpicos ou de suma import√¢ncia.

## Plano de Educa√ß√£o e Certifica√ß√£o
O treinamento cont√≠nuo ser√° oferecido pessoalmente e/ou online. Todos os workshops e semin√°rios de
educa√ß√£o n√£o t√™m curso algum para os √°rbitros.

A certifica√ß√£o √© exigida e mantida pelo √°rbitro de todos os n√≠veis. Cada √°rbitro deve participar do
treinamento anual e passar no teste de conhecimento.

Nenhum treinamento ou certifica√ß√£o ser√° necess√°rio QUALQUER PAGAMENTO pela ou para Kombat Taekwondo.

Haver√° testes de conhecimento posteriormente para an√°lise anual de √°rbitros.

## Vantagens para os √°rbitros
- Participa√ß√£o na divis√£o da receita do evento, oferecendo incentivos financeiros por sua dedica√ß√£o e contribui√ß√µes.
- Cobertura de despesas relacionadas a viagens, garantindo que seu servi√ßo como √°rbitro seja apoiado e acess√≠vel.
- Acesso a sess√µes de treinamento e semin√°rio gratuitos, facilitando o desenvolvimento profissional cont√≠nuo e o aprimoramento de habilidades.

## Plano de Remunera√ß√£o do √Årbitro Liga Profissional
Level 1 - Junior - $150 por evento
Level 2 - Associado - $300 por evento
Level 3 - Profissional - $800 por evento
Level 4 - Delegado T√©cnico - Participa√ß√£o nos lucros

Transporte, alojamento e refei√ß√µes ser√£o fornecidos para todos os torneios e campeonatos de Taekwondo do Kombat.
Todos os valores de pagamento s√£o em dolar seguindo com base a cota√ß√£o do dolar no dia.
O pagamento √© realizado com base apenas NO DIA DO EVENTO, j√° o dia da pesagem, ser√° apenas realizado a hospedagem e pagamento da alimenta√ß√£o.

O ranqueamento √© internacional.

## √Årea de Competi√ß√£o

As lutas de Kombat Taekwondo s√£o realizadas em um ringue especialmente projetado para o Kombat Taekwondo. A √°rea de luta pode ser alterada para atender √†s exig√™ncias e/ou especifica√ß√µes estabelecidas pela Comiss√£o de Eventos de Taekwondo Kombat respons√°vel pela competi√ß√£o. √â DE EXTREMA EXIG√äNCIA que seja dentro de um octogono e n√£o em formato de quadrado como convencional no Taekwondo.

## √Årbitros/Ju√≠zes e Responsabilidades

- O √°rbitro deve controlar e dirigir o combate.
- O √°rbitro deve declarar o vencedor do combate
- O √°rbitro aplica advert√™ncias e penalidades de acordo com as regras e regulamentos.
- √â nomeado um √°rbitro central para o combate individual.

Os oficiais de arbitragem deve usar vestu√°rio aprovado
T√™nis preto, cal√ßa preta (n√£o pode jeans), cinto preto, camisa polo do Kombat Taekwondo (Oficial)

## Ju√≠zes Liga Minor
- Ser√° implementado um minimo de dois sistemas de ju√≠zes (tr√™s no m√°ximo). No caso de ser utilizado um sistema de dois ju√≠zes, o √°rbitro central deve tomar a sua decis√£o para desempatar.
- Os ju√≠zes seguir√£o os "Crit√©rios de Julgamento" para avaliar ambos os competidores atrav√©s de estrat√©gias de luta e eficazes e escolher um vencedor.
- Os ju√≠zes estar√£o posicionados em v√°rios locais √† volta da √°rea de combate e tomar√£o a sua pr√≥pria decis√£o independente sobre cada competidor.

## Ju√≠zes Liga Major
- Ser√° implementado um sistema m√≠nimo de dois ju√≠zes (m√°ximo de tr√™s). No caso de ser utilizado um sistema de dois j√∫zises, o √°rbitro central tomar√° a sua decis√£o para desempatar.
- Os ju√≠zes seguir√£o os "Crit√©rios de Julgamento" para avaliar ambos os competidores atrav√©s de estrat√©gias de luta e eficazes e preencher√£o o Cart√£o de Pontua√ß√£o e Julgamento.
- Os ju√≠zes estar√£o posicionados em v√°rios locais √† volta da √°rea de combate e tomar√£o a sua pr√≥pria decis√£o independente sobre cada competidor.

## Equipamentos
O organizador √© respons√°vel por fornecer os suprimentos instru√≠dos pela Comiss√£o de Eventos do Kombat. Os competidores s√£o respons√°veis por suas pr√≥prias bandagens para m√£os, tornozelos e p√©s e pelo uso de protetores de espuma. A equipe m√©dica do evento e o(s) √°rbitro(s) designados(s) inspecionar√£o cada competidor antes de entrar no √°rea de competi√ß√£o.

O que √© itens obrigat√≥rios? Luvas de m√£o e p√© oficiais do evento, protetor genital (n√£o √© obrigat√≥rio no feminino), protetor bocal, protetor feminino (ou top como no UFC), protetor de bra√ßo e perna sem velcro (Espuma ou EVA). Os doboks n√£o possuem restri√ß√µes de cores de gola. Podendo lutar de camiseta, faixa e cal√ßa do dobok, n√£o sendo obrigat√≥rio a parte de cima. O uso de protetor √© obrigat√≥rio independente da vestimenta usada pelo atleta.

J√° na Minor League, a luva √© fechada, o uso do capacete (15-17 e 8-14 anos), qualquer modelo de capacete usado no Taekwondo pode ser utilizado, sem restri√ß√µes e protetor de t√≥rax s√£o obrigat√≥rios.

## Vestu√°rio
- Os competidores s√£o obrigados a usar trajes oficiais aprovados pelo COmit√© de Eventos do Kombat Taekwondo. Durante o combate, os competidores s√≥ podem usar uniformes de Taekwondo brancos ou pretos com faixas. Al√©m disso, cal√ßas de Taekwondo brancas ou pretas com t-shirts da escola/equipe com faixas.
- Sapatos ou qualquer outro tipo de cal√ßado, com exce√ß√£o de palmilhas aprovadas pelo Kombat Taekwondo, n√£o podem ser usados durante a competi√ß√£o.
- Os treinadores e outros acompanhantes podem usar p√≥los com cal√ßas desportivas ou fatos de treino da equipe. Fatos de treino ou trajes casuais de neg√≥cios tamb√©m s√£o opcionais. N√ÉO s√£o permitidas cal√ßas de ganga ou sand√°lias/sapatos abertos.

## Apar√™ncia

- Cada competidor deve manter-se limpo e bem arrumado, al√©m de vestir roupas limpas e usar equipamentos limpos antes do in√≠cio da luta.
- N√£o √© permitido usar maquiagem, pintura facial ou corporal, joias ou outros acess√≠orios perfurantes durante a participa√ß√£o na competi√ß√£o ou exibi√ß√£o. Somente tatuagens permanentes ser√£o permitidas; pinturas feitas com tinta ou qualquer outra subst√¢ncia como maquiagem n√£o s√£o permitidas.
- Os competidores devem ter unhas das m√£os e dos p√©s curtas e n√£o podem usar objetos met√°licos ou quaisquer outros objetos met√°licos ou quaisquer outros objetos que possam ferir o oponente. √â permitido pintas as unhas, mas unhas artificiais n√£o s√£o permitidas.
- √â permitida uma pequena quantidade de vaselina para aplica√ß√£o apenas na √°rea facial.
- Os √°rbitros avaliar√£o se o cabelo do competidor representa alguma amea√ßa √† sua seguran√ßa ou √† do advers√°rio.

## Divis√£o de Peso na Major League
Feminino
- -49Kg / 49.1 - 57kg
- 57.1 - 67Kg
- +67Kg

Masculino
- -54Kg
- 54.1Kg - 58kg
- 58.1 - 63kg
- 63.1kg - 68kg
- 68.1kg - 74kg
- 71.4kg - 80kg
- 80.1kg - 87kg
- +87kg

A comiss√£o devem aprovar e n√£o os √°rbitros que os lutadores subam ou des√ßam de categoria de peso durante
a realiza√ß√£o do evento.

## Divis√£o de Peso na Minor League

![Divis√£o de Peso](https://cdn-images-1.medium.com/max/800/1*NYRZWCvXL7lADFUGT1JbRg.png)

## Procedimento para Pesagem

- A pesagem geral dos competidores dever√° ser realizada um dia antes OU na manh√£ do evento.
- Durante a pesagem da **Liga Maior**, os competidores do sexo masculino dever√£o usar cueca, e as competidoras do sexo feminino dever√£o usar calcinha, suti√£ ou biquini. Ser√° permitida uma toler√¢ncia de **300 gramas**. A **Liga Menor** os atletas dever√£o pesar de cal√ßa de dobok e camiseta. Ser√° permitida uma toler√¢ncia de **800 gramas**.
- A pesagem geral ser√° realizada uma vez, com uma oportunidade de pesagem adicional concedida a qualquer competidor que n√£o tenha atingido a exig√™ncia de peso em sua primeira tentativa. Os competidores ter√£o um intervalo de duas horas para uma segunda pesagem, sempre que decidirem us√°-la, e n√£o ser√£o permitidas outras tentativas.
- Para evitar a desqualifica√ß√£o durante a pesagem, balan√ßas id√™nticas √†s oficiais devem ser fornecidas no local de acomoda√ß√£o do competidor ou no local da pesagem para as pr√©-pesagens.

## Classifica√ß√£o e m√©todos de competi√ß√µes

- Deve ser entre competidores da mesma categoria de peso.
- Quando necess√°rio, categorias de peso adjacentes podem ser combinadas para criar uma √∫nica classifica√ß√£o com a aprova√ß√£o da comiss√£o de eventos do Kombat Taekwondo.
- A decis√£o do(s) comiss√°rios(s) do Kombat Taekwondo deve ser acompanhada da aceita√ß√£o do competidor. Nenhum competidor poder√° participar de mais de uma (1) categoria de peso em um evento.

## Dura√ß√£o do combate e n√∫mero de rounds

- Cada combate consistir√° em um round.
- O combate individual tem dura√ß√£o de tr√™s mininos na Liga Maior, na categoria Cadete e Junior na Liga Menor.
- Na Liga Menor as categorias Infantil e Mirim ter√° dura√ß√£o de dois minutos.
- N√£o existe intervalo de rounds e caso o lutador v√° ao ch√£o, ser√£o permitido dez segundos para se levantar e continuar a luta em p√©.
  
Sistema de competi√ß√£o: Eliminat√≥ria Simples

## √Årea de ataque permitida na Liga Maior

T√©cnicas de m√£os e chutes
- Toda a cabe√ßa acima do queixo para t√©cnicas de chute.
- Face frontal e ambos os lados da cabe√ßa para t√©cnicas de m√£o/cotovelo.
- Todo o corpo, exceto a √°rea da coluna vertebral acima da linha da cintura, para ambas as t√©cnicas.
  
Proje√ß√µes
- Entre o osso do tornozelo e o joelho (frontal, lateral ou posterior)

## √Årea de ataque permitida na Liga Menor

T√©cnicas de m√£os e chutes
- Toda a cabe√ßa acima do queixo, exceto a parte de tr√°s da cabe√ßa.
  
Proje√ß√µes
- Entre o osso do tornozelo e o joelho (frontal, lateral ou posterior)

## T√©cnicas V√°lidas na Liga Menor
**M√£o e Bra√ßo**
- Soco de punho fechado, punho de martelo e punho de costas. N√£o √© permitido golpear com o cotovelo.

**Perna**
- Quaisquer t√©cnicas de chute na zona permitida acima da cintura
- Golpe de joelho sem segurar ou agarrar

**Proje√ß√µes**
- As t√©cnicas de derrubada devem ser aplicadas segurando ou agarrando a parte superior do corpo e quando o advers√°rio n√£o tiver a dar pontap√©s/chutes.
- Aplicar as t√©cnicas de derrubada ao agarrar dentro de 3 segundos.

**Luta no Solo**
- N√ÉO √â PERMITIDO!

### T√©cnicas de Perna (Chutes) na Liga Menor
- Junior (15 - 17 anos) - T√≥rax (Full Contact) - Cabe√ßa (Full Contact)
- Cadete (12 - 14 anos) - T√≥rax (Full Contact) - Cabe√ßa (Light Contact)
- Infantil (10 - 11 anos) - T√≥rax (Full Contact) - Cabe√ßa (Light Contact)
- Mirim (8 - 9 anos) - T√≥rax (Full Contact) - Cabe√ßa (Light Contact)

#### Defini√ß√£o de Contato Light
- O contato ligeiro da m√£o e do p√© com a cabe√ßa.
- N√£o h√° som no momento do contato.
- A cabe√ßa n√£o se move, n√£o existe pot√™ncia.
- N√£o h√° sangue ou marcas na cabe√ßa.

## T√©cnicas V√°lidas na Liga Maior
#### M√£o e Bra√ßo
- Soco de punho fechado, gancho, corte superior, punho de martelo e punho de costas.
- Golpes de m√£o aberta, como golpes de faca e de m√£o de Ridge.
- Golpes de cotovelo sem agarrar ou segurar o oponente em uma posi√ß√£o ereta.

#### Perna
- Quaisquer t√©cnicas de chute na zona permitida acima da cintura
- Golpe de joelho em p√©, sem segurar ou agarrar qualquer parte do corpo ou da cabe√ßa.

#### Proje√ß√µes
- Rasteiras e raspagem s√£o permitidos somente na faixa de aproximadamente 12 polegadas da parte inferior do calcanhar entre o osso do tornozelo e o joelho. √â necess√°rio segurar o oponente para essa t√©cnica.
- As t√©cnicas de derrubada devem ser aplicadas segurando ou agarrando a parte superior do corpo e quando o oponente n√£o estiver chutando.
- Aplique as t√©cnicas de derrubada ao agarrar (clinching) dentro de tr√™s segundos.
- O girar passando a perna √© permitido sem segurar.
- N√ÉO √© permitido o chute direto abaixo do joelho para tentar a raspagem.

#### Luta no Solo
- Qualquer parte do corpo toca o ch√£o, exceto o p√©.
- O competidor S√ì pode usar socos no rosto e no corpo sem segurar ou agarrar.
- N√ÉO √© permitido nenhum tipo de t√©cnica de chute, exceto o "ca√≠do", em que o competidor em uma posi√ß√£o inferior pode chutar ou bloquear o opoennte. N√ÉO s√£o permitidos chutes abaixo da cintura ou diretamente na frente do rosto.
- N√£o √© permitido qualquer chute direto (usando a sola do p√©), quando se est√° no ch√£o na inten√ß√£o de afastar o oponente ou diretamente sobre o rosto.
- **N√£o √© permitido sentar ou montar em cima do competidor no solo**

## Penalidades (15)
#### M√£os e Bra√ßo - Prohibited Hand Techniques (4)
- Sufocamento ou qualquer golpe com a m√£o no pesco√ßo ou na parte de tr√°s da coluna vertebral.
- Agarrar ou segurar o pesco√ßo/cabe√ßa/perna para realizar qualquer tipo de ataque.
- Nenhum dedo em orif√≠cios ou qualquer manipula√ß√£o de articula√ß√£o por meio de t√©cnica de luta.
- **N√ÉO √© permitido golpear com o cotovelo ou qualquer outra t√©cnica de m√£o que n√£o seja um soco direto quando o competidor estiver ca√≠do no ch√£o, e o competidor ca√≠do N√ÉO pode chutar o atacante diretamente no rosto ou abaixo da cintura**

#### Chutes ou Perna (4)
- Chutar abaixo da linha da cintura, exceto em t√©cnicas de derrubada.
- Bloqueio de joelho ou bloqueio intencional de chutes com qualquer parte da perna.
- Chute na parte de tr√°s da coluna vertebral.
- Chutar ou pisotear o competidor que est√° no ch√£o.

### Evitando uso de t√©cnicas inseguras ou de m√° conduta
- Regra dos 5 segundos: Se os competidores n√£o estiverem lutando dentro de 5 segundos, o √°rbitro comandar√° verbalmente e em ingl√™s "Fight", como advert√™ncia. Se a luta continuar sem nenhuma a√ß√£o de um ou de ambos os competidores, ser√° aplicada uma penalidade por "Evitar a luta".
- Quando o competidor n√£o demonstrar vontade de lutar, agarrando, segurando ou fugindo.
- Dar cabe√ßadas, arrancar os olhos, fisgar peixes ou atacar os ombros.
- Morder, arranhar, beliscar, torcer a carne, cuspir ou puxar o cabelo.
- N√£o √© permitido montar ou sentar no oponente ca√≠do para realizar qualquer tipo de ataque.
- Puxar equipamentos e roupas de prote√ß√£o.
- Comportamento antidesportivo.
- Fora da √°rea de luta: Quando AMBOS os p√©s est√£o fora. Se o competidor for empurrado para fora com a m√£o, o peito ou o ombro, o outro competidor ser√° penalizado.

### Advert√™ncias verbais, penalidades oficiais e les√µes resultantes de uma penalidade.
- O √Årbitro Central tem autoridade para emitir advert√™ncias verbais, penalidades ou desqualificar um competidor por faltas cometidas durante a luta. As advert√™ncias ser√£o emitidas sem interromper a a√ß√£o da luta em andamento.
- A execu√ß√£o deliberada de qualquer t√©cnica proibida resultar√° em uma penalidade imediata. Para emitir uma penalidade oficial, o √°rbitro separar√° os lutadores e se comunicar√° diretamente com o atleta que est√° sendo advertido.
- A execu√ß√£o n√£o intencional de golpes de m√£o e chutes proibidos receber√° uma advert√™ncia verbal imediata.
- A repeti√ß√£o de a√ß√µes ilegais intencionais, quando o √°rbitro j√° tiver dado advert√™ncias verbais e/ou CINCO (5) penalidades oficiais, indicando uma clara inten√ß√£o de causar les√£o ao oponente, levar√° √† desqualifica√ß√£o do competidor. Se um competidor tiver que ser desqualificado, o √°rbitro sinalizar√° acenando com as m√£os acima da cabe√ßa para indicar o t√©rmino do combate.
- Se um competidor sofrer uma les√£o resultante de uma falta, se o competidor lesionado n√£o puder continuar ap√≥s consultar a equipe m√©dica do evento, o competidor lesionado vencer√° de acordo com as regras, regulamentos e pol√≠ticas do Presidente da Comiss√£o do Evento de Kombat Taekwondo.
- Se um competidor sofre uma les√£o provocada por um nocaute na cabe√ßa, n√£o poder√° competir at√© receber autoriza√ß√£o do m√©dico, ap√≥s sessenta (60) dias.


## A vit√≥ria pode ser alcan√ßada por
### Nocaute
- Nocaute por meio de ataques legais, como socos, chutes, joelhadas, cotoveladas ou quedas em que o competidor N√ÉO CONSEGUE CONTINUAR a luta devido aos golpes de alto impacto.
- Nocaute duplo: Quando ambos os competidores forem nocauteados por ataques legais ao mesmo tempo e n√£o conseguirem se levantar quando as 10 contagens terminarem, o vencedor da partida ser√° determinado pelo cart√£o de pontua√ß√£o do juiz antes do nocaute duplo.
  
### Nocaute T√©cnico
- Devido √† interrup√ß√£o do √°rbitro ou do m√©dico. Por exemplo, quando um competidor n√£o puder se defender devido √† inferioridade t√©cnica, uma les√£o que comprometa seu bem-estar f√≠sico.
- Solicita√ß√£o de retirada do t√©cnico ou do competidor.

#### Knockdowns
- Knockdown no ch√£o devido a t√©cnicas legais de chutes e m√£os de alto impacto.
- O √°rbitro central come√ßar√° a "cantar" 10 contagens (1 a 10) quando o competidor estiver no ch√£o. O competidor ca√≠do deve tentar se levantar em 10 segundos.
- As quedas causadas por qualquer t√©cnica de derrubada (raspagens, golpes, arremessos), empurr√µes, desequil√≠brio ou escorreg√µes N√ÉO s√£o consideradas knockdowns. O √°rbitro central iniciar√° a contagem "verbal" de 10 para lembrar o competidor ca√≠do de se levantar.
- Quando um competidor sofrer 3 knockdowns durante a luta, ele ir√° perder por nocaute t√©cnico.

### Desqualifica√ß√£o
- O competidor que cometer reptidamente a√ß√µes ilegais "intencionais" receber√° uma penalidade oficiail. Ap√≥s receber seis (6) penalidades, o competidor ser√° desqualificado da luta, o total de penalidade v√°lidas s√£o apenas de cinco.
- Manipular o equipamento de prote√ß√£o para obter vantagem ou causar les√µes no advers√°rio.
- Derrubar um oponente por meio de ataques ilegais de qualquer tipo.

### Decis√£o dos Ju√≠zes
#### Decis√£o Un√¢nime
- Quando os tr√™s ju√≠zes selecionam o mesmo competidor como vencedor do combate.
  
#### Decis√£o Dividida
- Quando dois ju√≠zes escolhem um competidor como vencedor da partida e um juiz seleciona o oponente como vencedor. No caso de um sistema de dois ju√≠zes, o √°rbitro central dever√° tomar uma decis√£o para crit√©rio de desempate.
- No caso de uma competi√ß√£o ser conclu√≠da devido a _uma les√£o resultante de uma falta ou de uma ocorr√™ncia de nocaute duplo_, ser√£o aplicadas as regras estabelecidas pela comiss√£o que preside com rela√ß√£o √†s decis√µes t√©cnicas.
- No final do combate, a decis√£o ser√° anunciada pelo √°rbitro central como: "Juizes decis√£o", e anuncia o vencedor, no caso da liga menor.

### Crit√©rios de Julgamentos
#### Knockdowns
- O knockdown ocorre quando o competidor √© derrubado por golpes fortes e de alto impacto por meio de t√©cnicas de m√£o/bra√ßo ou chute. Isso ser√° determinado exclusivamente pelo √°rbitro.
- 3 Knockdowns = TKO

#### Chutes, golpes e derrubadas eficazes
- Golpes legais obtidos por meio de uma combina√ß√£o de chutes e golpes que t√™m um impacto imediato com o potencial de levar a um nocaute.
- Execu√ß√£o bem-sucedida de quedas, tentativas de submiss√£o (sequ√™ncia bruta de golpes aonde o oponente n√£o consegue se defender ou reagir adequadamente) e obten√ß√£o de posi√ß√µes vantajosas que resultam em impacto imediato com potencial para levar a um nocaute.
  
#### Agressividade
- Fazer tentativas agressivas para terminar a partida de forma eficaz.
- O termo-chave √© eficaz
- Perseguir um oponente sem resultados efetivos ou impacto n√£o deve influenciar as avalia√ß√µes dos ju√≠zes, como o caso de chutes que s√£o realizados como formas de intimidar ao inv√©s de acertar.


## Processo de avalia√ß√£o e mensura√ß√£o dos ju√≠zes
- As avalia√ß√µes em cada crit√©rio s√£o feitas por n√≠vel de efic√°cia, n√£o por pontos.
- Cada t√©cnica ser√° avaliada de acrodo com os golpes desferidos com pot√™ncia, ou seja, um atleta que desferir golpes e conseguir um knockdown n√£o poder√° ter o mesmo n√≠vel que seu advers√°rio na t√©cnica utilizada.
- As t√©cnicas de m√£o/bra√ßo ou chutes n√£o devem ser registrados quantitativamente para determinar o n√≠vel dos ataques, mas devem ser registrados qualitativamente, ou seja, somente aqueles com pot√™ncia e impacto no corpo ou na cabe√ßa, descartando golpes que apenas tocam.

## Pontua√ß√µes no Ranking
Elas funcionam da seguinte maneira, o lutador que vencer no Mundial Open ganhar√° 40 pontos e receber√° b√¥nus se tiver knockout por chute sendo 15 pontos por cada combate e 10 pontos se caso for soco. Se for no Grand Prix, ser√° 15 pontos pela vit√≥ria, 15 de b√¥nus pelo knockout no chute e 10 de b√¥nus se for no soco, e na liga maior ser√° 5 pontos por vit√≥ria e os mesmos valores de b√¥nus, 15 de chute e 10 de soco.

Os mandatos duram dois anos, sendo o total de pontos vigente no ano integros, ou seja, o que voc√™ ganhou n√£o ser√° afetado. No ano posterior o valor √© reduzido para 50%. Se voc√™ ganhou 120 em 2024, voc√™ ficar√° com 60 em 2025, em 2026 esse valor √© zerado, j√° que usa como base +50% com base no valor ganho no primeiro ano.

- Os pontos s√£o atribu√≠dos com base na tabela de pontos de classifica√ß√£o por tipo de torneio e categoria de pr√™mio. 
- Os pontos atribu√≠dos s√≥ ser√£o v√°lidos por dois anos completos a partir de primeiro de janeiro e ser√£o revistos todos os anos.
- Em todos os torneios da Liga Maior (League Major) que se realizem em dezembro, os pontos ser√£o transferidos para o ano seguinte como Ano Um.
- Durante o per√≠odo de dois anos, os pontos ser√£o deduzidos em 50% ap√≥s cada ano conclu√≠do.
- Se um atleta obtiver pontos numa divis√£o de peso e depois estriver pontos noutra divis√£o de peso num evento diferente, o atleta pertinente ganhar√° pontos em cada divis√£o de peso respectiva. Portanto, √© poss√≠vel ter atletas em mais de uma divis√£o de peso. Em nenhuma cirscunst√¢ncia os pontos ser√£o combinados.
- Os pontos do ranking ser√£o atualizados mensalmente e/ou no prazo de 30 dias imediatamente ap√≥s o torneio.

## Teste antidoping
- Qualquer uso ou administra√ß√£o de drogas ou subst√¢ncias qu√≠micas descritas na Lista de Subst√¢ncias Proibidas da WADA √© proibido. O C√≥digo Antidpoing da WADA dever√° ser aplicado aos eventos do Kombat Taekwondo. As Regras Atidoping do Kombat Taekwondo dever√£o ser aplicadas aos eventos do Kombat Taekwondo.
- O Organizador poder√° realizar quaisquer testes de doping considerados necess√°rios para determinar se um competidor violou essa regra. Qualquer competidor que se recuse a se submeter a esse teste ou que tenha violado essa regra ser√° removido da classifica√ß√£o final, e o registro ser√° transferido para o competidor seguinte na classifica√ß√£o da competi√ß√£o.

## Benef√≠cios de se tornar um clube licenciado do Kombat Taekwondo
- O Licensed Club permite que os propriet√°rios de clubes/escolas de Taekwondo e seus alunos se afiliem maior organiza√ß√£o profissional de Taekwondo Kombat do mundo.
- Listagem de clubes licenciados em [https://www.kombattaekwondo.com](https://www.kombattaekwondo.com).
- Acesso por atacado aos aparelhos e equipamentos do Kombat Taekwondo.
- Certificado de licen√ßa oficial do Kombat Taekwondo Club.
- Bandeira oficial grautita do Kombat Taekwondo para o clube.
- Acesso gratuito ou com desconto √†s s√©ries e semin√°rios educacionais do Kombat Taekwondo.
- Acesso ao programa de certifica√ß√£o de faixa preta do Kombat Taekwondo.
- Acesso VIP a todos os campeonatos de Taekwondo do KOmbat - dois ingressos por evento.
- Oportunidade de gerente e promotor do Kombat Taekwon do em sua √°rea/regi√£o.
- Os clubes selecionados ser√£o apresentados por meio dos parceiros de m√≠dia do Kombat Taekwondo.
- Eleg√≠vel para os Pr√™mios de Reconhecimento de Clube para Instrutor, T√©cnico e Competidor.
- Eleg√≠vel para sediar acampamentos, semin√°rios, treinamentos e outros eventos educacionais sancionados pelo Kombat Taekwondo.

## Exig√™ncia de clube e custo de licenciamento
### Exig√™ncia de clube
- Deve participar do Semin√°rio de √Årbitros de Kombat Taekwondo online para entender as regras e regulamentos.
- Deve ter um clube de Taekwondo f√≠sico dedicado em tempo integral (sem YMCA, academias de gin√°stica, etc.)
- Deve ter um site do Taekwondo Club e p√°ginas de m√≠dia social
- Deve oferecer no m√≠nimo uma aula por semana dedicada ao treinamento Kombat Taekwondo
- Requisitos para propriet√°rio/instrutor do clube
    - Minimo ter 21 anos de idade
    - Minimo ser 1¬∫ Dan de Taekwondo (Faixa Preta)
    - N√£o ter registro criminal

### Taxa de Licen√ßa Anual
- Atual √°rbitro certificado pelo Kombat Taekwondo ou lutador profissional do Kombat
  - Isen√ß√£o da taxa anual de licen√ßa
- Academia/Escola de Taekwondo
  - Taxa anual de licen√ßa $100,00 (Cem dol√°res)

## Anota√ß√µes Extra Oficiais
√â v√°lida provoca√ß√£o durante a luta.

√â v√°lido usar gaiola para desferir golpes, mas n√£o √© permitido para evitar quedas ou proje√ß√µes, ser√° considerado falta, interpretado como fuga de combate.

Avisos e orienta√ß√µes durante a luta s√£o permitidas, mas s√£o consideradas como advert√™ncias, sendo avaliado pelo arbitro se necess√°rio existir a penalidade ou n√£o dependendo da gravidade da situa√ß√£o e a repeti√ß√£o das advert√™ncias.

T√©cnicas como tesoura para derrubar o advers√°rio s√£o permitidas, desde que no ch√£o isso seja desvencilhado, caso o contr√°rio, ser√° interrompido e ambos os lutadores dever√£o retornar de p√© e prosseguir com a luta

Futuramente ser√° necess√°rio licenciamento para participar do campeonato.

O licenciamento √© v√°lido para dois anos.

Kombat Taekwondo n√£o tem limita√ß√µes referente a Liga Nacional e a CBTKD atualmente.

O limite de idade n√£o existe na Major League.

A licen√ßa da academia n√£o envolve com a licen√ßa de arbitragem.

Os valores de inscri√ß√£o s√£o a cargo da organiza√ß√£o do evento.]]></description>
            <link>https://yagasaki.vercel.app//articles/curso-de-kombat-taekwondo</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/curso-de-kombat-taekwondo</guid>
            <pubDate>Sat, 20 Jan 2024 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Dimensionando equipes de engenharia por meio de RFCs: anotando as coisas]]></title>
            <description><![CDATA[
![Daria Nepriakhina üá∫üá¶](https://images.unsplash.com/photo-1512758017271-d7b84c2113f1?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

De antem√£o, j√° informo que esse √© um artigo original do Gergely Orozz, e foi traduzido por mim. Como o conte√∫do √© muito completo,
n√£o vi necessidade de fazer adapta√ß√£o ou alterar qualquer coisa nele, se estiver interessado, √© s√≥ ler o [artigo original em ingl√™s](https://blog.pragmaticengineer.com/scaling-engineering-teams-via-writing-things-down-rfcs?ref=yagasaki.dev/blog)

--

Recentemente, tenho conversado com pequenas e m√©dias empresas, compartilhando as melhores pr√°ticas de engenharia que vejo usarmos na Uber, que eu recomendaria que qualquer empresa de tecnologia adotasse √† medida que cresce. O √∫nico t√≥pico que mais levanta as sobrancelhas e tamb√©m solta uns momentos "aha!" √© sobre como funciona o processo de planejamento da engenharia desde os primeiros anos do Uber.

Ao trabalhar em grandes empresas como a Microsoft ou em empresas menores como o Skyscanner, houve duas coisas relacionadas ao planejamento que sempre me incomodaram. Primeiro, a falta de visibilidade de outros que est√£o construindo ou tendo constru√≠do a mesma coisa que minha equipe. Em segundo lugar, a d√≠vida tecnol√≥gica e arquitet√≥nica acumulada devido a diferentes equipas constru√≠rem coisas de forma muito diferente, tanto em termos de abordagem como de qualidade.

<!--truncate-->

E se eu dissesse que existe uma maneira de resolver esses dois problemas muito bem, usando algumas etapas simples? Um aviso: uma das etapas parecer√° um pouco maluca. Aqui est√£o eles:

1. **Fa√ßa um planejamento antes de construir algo novo.** Isso pode ser feito pessoalmente ou apenas conversando com os membros da equipe, desde que voc√™ tenha certeza de como far√° as coisas.
- **Registre esse plano em um documento curto e escrito.** Assim que estiver claro para a equipe como e o que voc√™ faz, ser√° relativamente r√°pido escrever o "como" . N√£o exagere.
- **Fa√ßa com que algumas pessoas selecionadas aprovem este plano antes de come√ßar a trabalhar.** Semelhante a como √© uma porta de boa qualidade mesclar uma pull request somente depois que algu√©m fizer uma revis√£o, faz uma grande diferen√ßa se, antes de iniciar o trabalho em um projeto, algumas pessoas relevantes validarem o trabalho planejado. Podem ser engenheiros seniores, pessoas de uma equipe que usar√£o o recurso e assim por diante.
- **Envie este documento de planejamento para todos engenheiros da empresa** e deixe que todos comentem sobre isto. Sim, esta √© a etapa que provavelmente parece loucura.
- **Fa√ßa com que todos sigam as etapas acima** para cada projeto que esteja al√©m de alguma complexidade super trivial e itere em um processo leve, tipo [RFC< /span>](https://en.wikipedia.org/wiki/Request_for_Comments?ref=yagasaki.dev/blog) para que funcione bem para sua organiza√ß√£o ou empresa.

**Por mais improv√°vel que possa parecer, o processo acima funciona e √© muito bem dimensionado**, desde um punhado de engenheiros at√© equipes de milhares. Ele aborda n√£o apenas quest√µes de visibilidade ou redu√ß√£o do d√©bito de tecnologia/arquitetura, mas tamb√©m de difus√£o de conhecimento e de maior engajamento dos engenheiros no dia a dia. Este √© o processo simples que recomendo a qualquer equipe de tecnologia de pequeno ou m√©dio porte, especialmente se estiver em fase de crescimento. √â tamb√©m o processo que usamos e repetimos com sucesso na Uber, passando de dezenas de engenheiros para alguns milhares.

## O poder de escrever coisas
Escrever e compartilhar essa escrita com outras pessoas cria responsabilidade. Tamb√©m quase sempre leva a decis√µes mais completas. Uma maneira simples de aumentar a qualidade do c√≥digo? Fa√ßa a revis√£o do c√≥digo por escrito, antes de mesclar. Uma maneira simples de fazer com que uma reuni√£o seja menos perda de tempo? Tenha uma agenda escrita antes da reuni√£o e, em seguida, escreva e envie as decis√µes e a√ß√µes posteriormente. Uma maneira simples de executar projetos com menos surpresas? Pe√ßa √† equipe que escreva o que est√° planejando fazer e compartilhe com outras pessoas.

N√≥s, engenheiros, odiamos desperdi√ßadores de tempo. A documenta√ß√£o √© frequentemente vista como uma dessas perdas de tempo, principalmente porque √© chata de fazer. O planejamento √© frequentemente visto como uma esp√©cie de documenta√ß√£o, portanto h√° uma tend√™ncia natural de simplesmente pular esta etapa para obter efici√™ncia. Eu gosto de inverter esse argumento sobre como economizar tempo.

**Se todos concordarem como o projeto deve ser feito, escrever a abordagem ser√° muito f√°cil.** Basta capturar o entendimento compartilhado sobre o que √© a abordagem, o que mudan√ßas na arquitetura ser√£o feitas, quais s√£o as partes complicadas. Algu√©m da equipe deve ser capaz de fazer isso em algumas horas, e os outros membros da equipe concordam depois de ler. Normalmente, vejo isso sendo menos direto. "_N√£o foi isso que eu quis dizer quando conversamos._" ou "_E esse importante caso extremo esquecemos?_" e "_Se mudarmos isso aqui, isso poder√° quebrar essa outra parte do sistema_" s√£o coisas que muitas vezes surgem ao escrever o plano. √â √≥timo ter essas discuss√µes antes de ter as mesmas realiza√ß√µes quando o projeto estiver na metade.

E quando as pessoas n√£o concordam com a forma como o projeto deve ser feito ou quando h√° muitas mudan√ßas? Isso j√° parece um projeto que levar√° muito mais tempo do que as pessoas pensam - pelo menos anotar as coisas deve dar uma imagem mais clara.

## Revisores e dissemina√ß√£o de conhecimento em toda a organiza√ß√£o
Embora escrever seja uma boa maneira de organizar os pensamentos, √© um exerc√≠cio muito diferente quando escrevemos para outra pessoa entender. √â uma boa ideia especificar quem precisa ler este documento e dar um joinha. Depois que o plano for redigido, a maneira mais segura de garantir que as pessoas realmente leiam o documento √© exigir que elas confirmem exatamente isso - por escrito, por meio, por exemplo, de um documento. um coment√°rio.

> _Oi, Yagasaki aqui, s√≥ interrompendo rapidinho, a abordagem que optei por utilizar esse m√©todo com a Kalify, que √© uma organiza√ß√£o open source, foi simplesmente criar issues nos scrumboards especificamente para isso, assim, toda a comunidade ter√° acesso, al√©m de poder comentar, abrir uma pull request diretamente por l√° e v√°rias outras intera√ß√µes que s√≥ agregam valor ao projeto e quem est√° dando manuten√ß√£o e orientando sobre a solu√ß√£o do problema._

A parte de enviar o plano de como esse projeto ser√° constru√≠do, para toda a organiza√ß√£o de engenharia, via e-mail, √© algo que pode parecer loucura. As pessoas muitas vezes se preocupam com a possibilidade de isso criar muito barulho. Isso √© verdade e n√£o. Os n√≠veis de ru√≠do certamente aumentar√£o. Felizmente, os filtros de e-mail s√£o f√°ceis de criar - basta facilitar a filtragem desses tipos de e-mail. Ao mesmo tempo, h√° muito menos planos de projetos sendo enviados, mesmo com um tamanho de engenharia na casa das centenas ou milhares, do que as pessoas normalmente esperam.

**O tipo de informa√ß√£o enviada √†s pessoas em uma organiza√ß√£o molda consideravelmente a cultura.** Ter uma organiza√ß√£o com uma cultura para enviar planos de engenharia a todos (por exemplo, por e-mail) e convidar qualquer pessoa que comente estabelece um tom de confian√ßa e responsabilidade. Durante meus primeiros meses na Uber, eu costumava ficar obcecado em ler documentos de planejamento de diversas equipes, citando aqueles em que eu tinha conhecimento de dom√≠nio relevante, por exemplo, na tecnologia. Nesses primeiros meses, aprendi muito mais sobre o que outras equipes trabalhavam do que em anos trabalhando em uma grande empresa onde essas informa√ß√µes n√£o eram vis√≠veis. At√© hoje, ainda analiso os planos que as equipes fazem, para ter uma no√ß√£o do que est√° acontecendo fora da minha pequena bolha.

Por fim, permitir que qualquer pessoa participe √© uma parte fundamental para manter um padr√£o de engenharia consistente em toda a organiza√ß√£o. Na Uber, tenho visto v√°rios casos de pessoas de um lado da organiza√ß√£o perceberem que outra equipe do outro lado da organiza√ß√£o est√° planejando fazer algo semelhante ao que fizeram, mas com uma abordagem muito diferente. Por exemplo, uma equipe dos EUA que est√° construindo um novo recurso pode n√£o ter considerado outras partes do mundo e uma equipe na √çndia apontando lacunas na sua abordagem de localiza√ß√£o. A transpar√™ncia, o autoequil√≠brio e a autocorre√ß√£o das equipes acontecem com bastante naturalidade.

## Adaptando o processo por meio de itera√ß√£o
Na Uber, um processo descrito aqui tem sido usado desde os primeiros anos. Os detalhes de como esse processo de planejamento e revis√£o funcionou foram refinados √† medida que a empresa crescia e amadurecia. O que come√ßou como um e-mail para cada engenheiro se transformou em listas de e-mail por dom√≠nio (backend, mobile, web) e modelos criados por engenheiros para ajudar a transmitir informa√ß√µes de uma forma mais consistente. √Ä medida que a empresa cresce e conta com milhares de engenheiros, mais ferramentas est√£o sendo constru√≠das para tornar o processo de pesquisa e aprova√ß√£o ainda mais f√°cil.

Uma parte interessante da itera√ß√£o que vi √© a evolu√ß√£o dos modelos. As pessoas que analisam muitas propostas de engenharia muitas vezes t√™m o mesmo tipo de perguntas. Perguntas como "_Qual √© a motiva√ß√£o para fazer este trabalho?_" ou "_Como isso ser√° testado?_" ou "_Ser√£o feitas altera√ß√µes na arquitetura aqui?_" eram perguntas muito comuns. Vendo a repeti√ß√£o deles, os engenheiros criaram modelos que s√£o continuamente atualizados para facilitar a leitura e a escrita desses planos. Para dar um exemplo, foi assim que os modelos de backend e frontend (m√≥vel/web) evolu√≠ram h√° cerca de um ano, desde quando mudamos para modelos gerados:

**Processo interno**
- Lista de aprovadores
- Resumo (sobre o que √© o projeto?)
- Mudan√ßas de arquitetura
- SLAs de servi√ßo
- Depend√™ncias de servi√ßo
- -Carregar e carregar teste de performance
- Preocupa√ß√µes com v√°rios data centers
- Considera√ß√µes de seguran√ßa
- Teste e sair da cama
- M√©tricas e monitoramento
- Considera√ß√µes sobre suporte ao cliente

**M√≥vel/Web**
- Lista de aprovadores
- Resumo (sobre o que √© o projeto?)
- IU e interface de usu√°rio Experi√™ncia do usu√°rio
- Mudan√ßas de arquitetura
- Intera√ß√µes de rede detalhadas
- Depend√™ncias da biblioteca
- Preocupa√ß√µes com seguran√ßa
- Teste e sair da cama
- An√°lise
- Considera√ß√µes sobre suporte ao cliente
- Acessibilidade

Iterar e personalizar de acordo com as necessidades da equipe de engenharia √© fundamental. No nosso caso, os modelos come√ßaram a incluir coisas importantes que nos interessavam. Coisas como confiabilidade, escala, seguran√ßa. Na Uber, criamos muitos servi√ßos menores, portanto, itens a serem considerados ao fazer isso - como testes de carga e desempenho ou SLAs - fazem parte desse dom√≠nio. Quando a acessibilidade se tornou um grande foco para dispositivos m√≥veis, essa se√ß√£o entrou no modelo. Voc√™ entendeu a ideia.

## Um processo que escala
Na Uber, chamamos esse processo de RFC - Request for Comments, dadas as muitas semelhan√ßas que ele tem com o [processo de publica√ß√£o de Request For Comments](https://en.wikipedia.org/wiki/Request_for_Comments?ref=blog.pragmaticengineer.com) em a comunidade tecnol√≥gica. O processo travou porque foi iniciado cedo ‚Äì quando a equipe de engenharia era pequena ‚Äì e ajudou a dimensionar o conhecimento e a eliminar silos, √† medida que a empresa continuava crescendo rapidamente. Ele cresceu notavelmente bem, de dezenas de engenheiros at√© poucos milhares. Come√ßando com alguns milhares de engenheiros, novos desafios surgem com esse tipo de processo, o que √© um bom problema por si s√≥.

Para evitar que tudo isso seja excessivamente te√≥rico, voc√™ pode ver nosso processo de RFC acontecer abertamente, verificando alguns de nossos projetos de c√≥digo aberto, como [BaseUI](https://github.com/uber-web/baseui?ref=blog.pragmaticengineer.com). BaseUI √© um sistema de design da web composto por componentes modernos, responsivos e vivos. Todas as RFCs s√£o [publicadas e revisadas aqui](https://github.com/uber-web/baseui/commits/master/proposals?ref=blog.pragmaticengineer.com) e [aqui](https://github.com/uber-web/baseui/commits/master/rfcs?ref=blog.pragmaticengineer.com). O desenvolvimento s√≥ come√ßa [ap√≥s a aprova√ß√£o da RFC](https://github.com/uber-web/baseui/projects/3?ref=blog.pragmaticengineer.com).

![](https://blog.pragmaticengineer.com/content/images/2018/09/Screen-Shot-2018-09-29-at-9.42.43-PM.png)

Ent√£o esse processo √© exclusivo da Uber? Longe disso. Grandes empresas de tecnologia, como Google, Facebook, Microsoft ou Amazon, criaram algo que se assemelha a algum n√≠vel de processo RFC. O Google chama isso de documentos de design e aqui est√° uma boa vis√£o geral [de como funciona](https://www.industrialempathy.com/posts/design-docs-at-google/?ref=blog.pragmaticengineer.com). Registros de decis√µes de arquitetura - [ADRs - Architecture Decision Record](https://github.com/joelparkerhenderson/architecture_decision_record?ref=blog.pragmaticengineer.com) - tamb√©m s√£o um bom formato para usar.

A escala de qu√£o completa deve ser a documenta√ß√£o, a quem os documentos s√£o enviados, qu√£o rigorosamente ela √© revisada ou qu√£o padronizada ela √© em diferentes organiza√ß√µes √© diferente para todas as empresas. Se voc√™ est√° em uma empresa de tecnologia onde o planejamento ainda √© ad hoc, sem uma forma estruturada de registro/distribui√ß√£o, uma das coisas que ajudar√° muito a escalar a engenharia √© ter um tipo de processo RFC em vigor desde cedo. Experimente e repita como voc√™ faz isso. √â assim que tudo sempre come√ßa.

--

Eu, como uma pessoa experiente na √°rea, falo que isso √© uma das melhores pr√°ticas que voc√™ pode adotar em sua empresa, seja ela
pequena, m√©dia ou grande. Acredito que isso √© um dos pilares para que voc√™ consiga escalar sua empresa de forma saud√°vel, sem
quebrar a cultura e a qualidade do produto.

O motivo de tudo isso ser bom, como o Gergely mencionou, √© o fato de que mesmo membros sem experi√™ncia alguma de codifica√ß√£o e o
b√°sico de l√≥gica de programa√ß√£o, conseguem ajudar e auxiliar no desenvolvimento daquela funcionalidade de maneira mais eficaz e
direta, abrindo ainda mais o leque de open source, no caso da Kalify, e obtendo mais contribui√ß√µes e melhorias para o projeto.]]></description>
            <link>https://yagasaki.vercel.app//articles/rfc-method</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/rfc-method</guid>
            <pubDate>Sun, 17 Dec 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[RestAPI vs GraphQL - Pr√≥s, Contras e Qual Usar?]]></title>
            <description><![CDATA[![Louis Hansel](https://images.unsplash.com/photo-1551632436-cbf8dd35adfa?q=80&w=2071&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

Antes de tudo, isso n√£o √© realmente uma disputa, analisando o [v√≠deo do Augusto Galego no Twitter](https://twitter.com/RealGalego/status/1729846868316770709) 
sobre o mesmo assunto, estou separando as ideias que de fato, fazem sentido pra mim referente a uma an√°lise de pr√≥s e contras. 

Ultimamente ando sim, usando muito RestAPI, mais do que j√° usei GraphQL na vida. Acredito que a √∫nica vez em que usei, foi
durante minha experi√™ncia na Stone para fazer comunica√ß√£o com bot e tudo mais, ent√£o, √© um assunto que de fato, eu preciso me
aprofundar, ainda mais que quero atingir a plenitude como desenvolvedor fullstack, por√©m, n√£o √© algo que eu sinta firmeza ainda.

Voc√™ desenvolvedor, tem todo o direito de questionar meus pr√≥s e contras, e tirar d√∫vidas, se assim for,
at√© por qu√™ eu n√£o sou nenhum especialista em GraphQL e utilizo bem mais o m√©todo de RestAPI no dia a dia. Ent√£o, vamos l√°. 

<!--truncate-->

**RestAPI** (Representational State Transfer API) √© uma abordagem arquitetural para criar servi√ßos web, fazer
a comunica√ß√£o entre back-end e front-end para consumir dados. Ele √© baseado no protocolo HTTP e utiliza os verbos 
HTTP (GET, POST, PUT, DELETE) para manipular recursos e representar o estado desses recursos por meio de
representa√ß√µes como JSON ou XML.

## Pontos Positivos do RestAPI:
**Simplicidade**: O RestAPI segue princ√≠pios simples e bem estabelecidos, como a utiliza√ß√£o de URIs (Uniform Resource Identifiers)
para identificar recursos e os verbos HTTP para manipular esses recursos. Isso torna a API f√°cil de entender e implementar.

**Suporte Universal**: RestAPIs s√£o amplamente suportadas e podem ser acessadas por qualquer cliente que seja capaz de fazer
requisi√ß√µes HTTP. Isso significa que a API pode ser consumida por diferentes tipos de aplicativos, como aplicativos web,
aplicativos m√≥veis e at√© mesmo por outros servi√ßos web.

**Escalabilidade**: RestAPIs s√£o altamente escal√°veis, permitindo o crescimento da base de usu√°rios e a expans√£o dos recursos de
forma eficiente. Como o RestAPI √© baseado no protocolo HTTP, ele pode ser facilmente distribu√≠do e escalado horizontalmente para
atender a um grande n√∫mero de solicita√ß√µes concorrentes.

**Cache**: RestAPIs oferecem suporte a recursos de cache embutidos no protocolo HTTP, como a utiliza√ß√£o adequada dos cabe√ßalhos de
cache. Isso permite que as respostas sejam armazenadas em cache em diferentes camadas, melhorando o desempenho e a efici√™ncia da
API.

## Pontos Negativos do RestAPI:
**Overfetching e Underfetching**: Em APIs Restful tradicionais, √© comum ocorrer overfetching (quando o cliente recebe mais dados
do que o necess√°rio) ou underfetching (quando o cliente precisa fazer v√°rias chamadas para obter todos os dados necess√°rios). Isso
pode levar a um aumento no tr√°fego da rede e no tempo de resposta.

**Rigidez**: APIs Restful podem se tornar r√≠gidas e dif√≠ceis de evoluir com o tempo. Isso ocorre porque qualquer mudan√ßa nos
recursos ou na estrutura da API pode afetar a compatibilidade com vers√µes anteriores e exigir atualiza√ß√µes nos clientes
existentes.

**Documenta√ß√£o**: APIs Restful geralmente exigem uma documenta√ß√£o detalhada para que os clientes possam entender corretamente os
recursos dispon√≠veis, os formatos de dados aceitos e como usar corretamente os verbos HTTP. A falta de uma documenta√ß√£o clara e
atualizada pode dificultar a ado√ß√£o e o uso da API. Nesse caso, recomendo o uso do Swagger.

**Falta de Padroniza√ß√£o**: Embora RestAPIs sigam princ√≠pios e diretrizes bem estabelecidos, a falta de uma padroniza√ß√£o rigorosa
pode levar a diferentes implementa√ß√µes e interpreta√ß√µes. Isso pode dificultar a interoperabilidade entre diferentes APIs e exigir
esfor√ßo adicional para integrar e consumir diferentes servi√ßos.

## E o que √© o RestFul?
API Rest e API Restful s√£o termos frequentemente usados de forma intercambi√°vel, mas h√° uma diferen√ßa sutil entre eles.

API Rest (ou simplesmente Rest) √© uma abordagem arquitetural que define um conjunto de princ√≠pios e diretrizes para o design de
servi√ßos web. Esses princ√≠pios incluem o uso adequado dos verbos HTTP (GET, POST, PUT, DELETE) para manipular recursos, a
utiliza√ß√£o de URIs (Uniform Resource Identifiers) para identificar recursos e a representa√ß√£o do estado desses recursos por meio
de formatos como JSON ou XML.

Por outro lado, API Restful (ou Restful API) refere-se a uma API que adere aos princ√≠pios e diretrizes do Rest de forma estrita.
Isso significa que uma API Restful segue rigorosamente o protocolo HTTP e todas as suas caracter√≠sticas, como a utiliza√ß√£o correta
dos verbos HTTP, o uso de c√≥digos de status adequados e a utiliza√ß√£o de URIs significativas e amig√°veis.

Em resumo, uma API Restful √© uma implementa√ß√£o espec√≠fica do Rest, seguindo estritamente seus princ√≠pios e diretrizes. Enquanto
uma API Rest pode aderir aos princ√≠pios do Rest, mas n√£o necessariamente de forma estrita.

Em termos pr√°ticos, a diferen√ßa entre API Rest e API Restful √© sutil e muitas vezes negligenciada. Ambos os termos s√£o usados para
descrever APIs que seguem o estilo Rest, mas a terminologia "Restful" √© frequentemente usada para enfatizar que a API adere
rigorosamente aos princ√≠pios e diretrizes do Rest.

# E quanto ao GraphQL? 
GraphQL √© uma linguagem de consulta para APIs e um tempo de execu√ß√£o para executar essas consultas com seus dados existentes. √â
uma alternativa √† abordagem tradicional de RESTful APIs, fornecendo uma maneira mais eficiente e flex√≠vel de buscar e manipular
dados.

## Pontos Positivos do GraphQL:
**Efici√™ncia**: Uma das principais vantagens do GraphQL √© que ele permite que o cliente especifique exatamente os dados
necess√°rios, evitando assim o problema de overfetching ou underfetching que ocorre com frequ√™ncia em APIs RESTful. Com GraphQL, o
cliente pode buscar apenas os campos necess√°rios para sua aplica√ß√£o, reduzindo a largura de banda e o tempo de resposta.

**Flexibilidade**: Com GraphQL, o cliente tem controle total sobre os dados que deseja buscar. Ele pode especificar os campos e
relacionamentos necess√°rios em uma √∫nica consulta e obter todas as informa√ß√µes em uma √∫nica chamada. Isso reduz a necessidade de
v√°rias chamadas para diferentes endpoints e simplifica a l√≥gica do cliente.

**Evolu√ß√£o de API**: GraphQL permite a evolu√ß√£o incremental de uma API sem quebrar a compatibilidade com vers√µes anteriores. Os
clientes podem adicionar novos campos √†s suas consultas sem afetar os aplicativos existentes. Isso proporciona uma experi√™ncia de
desenvolvimento mais flex√≠vel e facilita a ado√ß√£o de novos recursos.

**Ferramentas e Ecossistema**: GraphQL possui um ecossistema robusto de ferramentas e bibliotecas de suporte. Existem muitas
ferramentas dispon√≠veis para ajudar no desenvolvimento, como o GraphiQL, um IDE interativo que permite explorar e testar consultas
GraphQL, al√©m de bibliotecas em v√°rias linguagens de programa√ß√£o que facilitam a integra√ß√£o do GraphQL em aplicativos existentes.

## Pontos Negativos do GraphQL:
**Curva de Aprendizado**: Embora a ideia central do GraphQL seja simples, pode haver uma curva de aprendizado ao entender todos os
conceitos e padr√µes associados. Isso pode ser especialmente verdadeiro para desenvolvedores acostumados com abordagens RESTful
tradicionais.

**Overfetching em Recursos Existentes**: Embora o GraphQL seja eficiente para buscar apenas os campos necess√°rios, pode haver
casos em que os recursos existentes n√£o s√£o projetados para serem buscados dessa maneira. Isso pode levar a situa√ß√µes em que o
GraphQL ainda busca mais dados do que o necess√°rio, resultando em overfetching.

**Complexidade do Servidor**: Implementar e gerenciar um servidor GraphQL pode ser mais complexo do que uma API RESTful simples.
Isso ocorre porque o servidor GraphQL precisa resolver consultas complexas e gerenciar a l√≥gica de neg√≥cios para atender √†s
necessidades espec√≠ficas dos clientes.

**Caching**: O GraphQL n√£o possui um mecanismo de cache embutido, o que significa que os desenvolvedores precisam implementar sua
pr√≥pria camada de cache para melhorar o desempenho. Isso pode adicionar complexidade ao desenvolvimento e √† manuten√ß√£o da API.

# E qual escolher?
Em √∫ltima an√°lise, a escolha entre GraphQL e RestAPI depende das necessidades e requisitos do projeto. 

Sua equipe √© grande e n√£o tem comunica√ß√£o entre front-end e back-end? N√£o utiliza cache e n√£o quer sofrer
com overfetching? Recomendamos o GraphQL, claro, se os desenvolvedores estiverem habituados com isso.

Se a sua equipe n√£o est√° habituada, voc√™ precisa de uma API simples e f√°cil de entender, que n√£o vai te dar dor de cabe√ßa
que √© f√°cil de implementar e que voc√™ n√£o precisa de uma documenta√ß√£o extensa, recomendo o RestAPI. Mas, ainda
ser√° necess√°rio ambos os setores da aplica√ß√µes ter uma comunica√ß√£o para que n√£o haja overfetching e underfetching.

Claro que isso n√£o √© uma obriga√ß√£o, apenas, uma recomenda√ß√£o. N√£o leve isso como uma verdade absoluta, pois, cada
projeto √© um projeto, e cada um tem suas necessidades. D√∫vidas? Pode me questionar!]]></description>
            <link>https://yagasaki.vercel.app//articles/restapi-vs-graphql</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/restapi-vs-graphql</guid>
            <pubDate>Tue, 12 Dec 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Taekwondo - Eu me tornei faixa preta]]></title>
            <description><![CDATA[![Leslie Jones](https://images.unsplash.com/photo-1525198104776-f6e8a873f9b7?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

Antes de apresentar meu trabalho de conclus√£o de curso, que nada mais √© do que validar minha parte te√≥rica dentro do Taekwondo,
recomendo que voc√™ veja (em ingl√™s), [toda a minha trajet√≥ria no tatame](https://yagasaki.dev/taekwondo). Sei que isso n√£o tem nada a ver com programa√ß√£o, 
como eu tenho o costume de publicar aqui, mas deixo registrado.

<!--truncate-->

# Taekwondo Por Anderson Marlon Tomaz Alves

## Pref√°cio
Neste trabalho de conclus√£o, exploraremos os diversos fatores e benef√≠cios da pr√°tica do Taekwondo. Abordaremos a rica hist√≥ria da modalidade e os valores que permeiam tanto o tatame, por meio da hierarquia, t√©cnicas e desenvolvimento mental, quanto o ambiente externo, destacando a participa√ß√£o em a√ß√µes comunit√°rias e o comportamento do praticante diante das situa√ß√µes cotidianas.

Al√©m disso, este trabalho refletir√° sobre as experi√™ncias pessoais vivenciadas como atleta, proporcionando uma an√°lise profunda das transforma√ß√µes que o cen√°rio do Taekwondo promove nas pessoas e na percep√ß√£o delas sobre o papel do praticante.

Os seguintes temas tamb√©m estar√£o presentes:
‚Ä¢	Minha Experi√™ncia T√©cnica no Taekwondo
‚Ä¢	Taekwondo ‚Äì Uma abordagem cient√≠fica
‚Ä¢	Taekwondo ‚Äì A Filosofia da Arte Marcial
‚Ä¢	O Taekwondo como Ferramenta Pedag√≥gica no Desenvolvimento Integral dos Indiv√≠duos
‚Ä¢	O Taekwondo e seu Impacto Filantr√≥pico na Sociedade
‚Ä¢	A Gest√£o e Administra√ß√£o no Contexto do Taekwondo
‚Ä¢	Um roteiro de aula envolvendo aulos de 3 a 5 anos

Este trabalho visa oferecer uma vis√£o abrangente e aprofundada do universo do Taekwondo, abordando aspectos t√©cnicos, filos√≥ficos, pedag√≥gicos, sociais e administrativos associados √† pr√°tica dessa arte marcial.

## Agradecimentos
Primeiramente agrade√ßo a Deus, antes de tudo. Segundamente, agrade√ßo imensamente a cada um de voc√™s, expressando minha gratid√£o de forma individual e fixar o quanto voc√™s foram e s√£o importantes na minha evolu√ß√£o como atleta de Taekwondo:
Ao Gr√£o Mestre Sang Min Cho, pelo seu profundo reconhecimento por sua lideran√ßa inspiradora, por ter introduzido o Taekwondo no Brasil e sua dedica√ß√£o e por ter te conhecido pessoalmente.

Ao Gr√£o Mestre Daniel, agrade√ßo pela sabedoria transmitida e pelo exemplo de comprometimento com a arte marcial e com a nossa equipe, cada palavra de sabedoria reflete e molda meu pensamento e meu comportamento dentro e fora do tatame.

Aos Mestres S√©rgio Pacheco e Alberto Iha, meus agradecimentos pela orienta√ß√£o e pela maestria demonstrada no ensino do Taekwondo como aprendizados no dia a dia e fortifica√ß√£o do meu ser, do meu conhecimento e da minha motiva√ß√£o durante a minha importante passagem pelo Taekwondo, obrigado por fortificarem meu car√°ter e por terem me recebido de bra√ßos abertos na equipe.

Ao Mestre M√°rcio Eug√™nio, por ter me introduzido ao Taekwondo e pela contribui√ß√£o valiosa ao meu desenvolvimento no esporte, al√©m de compartilhar comigo sua sabedoria e sempre me incentivar a continuar dando o melhor de mim.

Aos Professores Dinelson Braga, M√°rio S√©rgio, David Brito, Maria Eduarda Neves, Matheus Iha, Lucas Camilo, Clara Pagotto e Nicole Caetano, expresso minha gratid√£o pelas li√ß√µes aprendidas e pelo apoio cont√≠nuo trabalho durante a minha caminhada no Taekwondo.

Agrade√ßo tamb√©m ao todos os pais e atletas que s√£o e que foram da Campinas Fighters por terem um peda√ßo significativo na evolu√ß√£o do meu ser dentro e fora do tatame, agrade√ßo por todo o carinho, cuidado, ensino e esfor√ßo que tiveram para chegar aonde eu cheguei e por acreditarem em mim.

E ao Michel Oshima, meu reconhecimento por ser uma fonte constante de inspira√ß√£o no Taekwondo, al√©m de ser uma motiva√ß√£o √© um ser que tem um peda√ßo nessa hist√≥ria por sempre acreditar em mim, no meu potencial e buscar sempre o meu melhor.

Cada um de voc√™s que desempenharam e ainda desempenham um papel fundamental em minha jornada no Taekwondo, sou grato por compartilhar esse caminho com indiv√≠duos t√£o not√°veis. Obrigado por sua dedica√ß√£o e por tornarem essa experi√™ncia enriquecedora e inesquec√≠vel.


## Minha Experi√™ncia T√©cnica no Taekwondo
Minha hist√≥ria come√ßou em 2014, aos 17 anos, quando estava em busca de um esporte para praticar. Amigos sugeriram Boxe, Muay Thai, mas quando descobri o Taekwondo n√£o quis saber de outro esporte.

Iniciei minha pr√°tica com o Mestre M√°rcio Eug√™nio e me formei at√© o 6¬∫ Gub. Ap√≥s sua partida para Indaiatuba, busquei o Professor Anderson Neneco, chegando ao 4¬∫ Gup. Em 2020, encontrei a Campinas Fighters, liderados pelos, atualmente Mestres, S√©rgio Pacheco e Alberto Iha, que me acolheram calorosamente com o devido conhecimento de Mestre M√°rcio Eug√™nio.

Sobre as minhas gradua√ß√µes
Em 2014 graduei do 10¬∫ Gub ao 8¬∫ Gub ‚Äì Pelo Mestre M√°rcio Eug√™nio
Em 2015 fui para 6¬∫ Gub ‚Äì Pelo Mestre M√°rcio Eug√™nio
Em 2016 fui para o 4¬∫ Gub ‚Äì Pelo Professor Anderson Neneco
Em 2022 fui para o 3¬∫ Gub ‚Äì Pela Campinas Fighters
Em 2023 fui para o 2¬∫ e 1¬∫ Gub ‚Äì Pela Campinas Fighters

### Sobre as minhas conquistas
**Pela equipe do M√°rcio Eug√™nio em 2014**
Fui vice campe√£o pela equipe do Mestre M√°rcio Eugenio no Campeonato Badboy organizado pela OTC em Campinas

**Pela equipe da Campinas Fighters em 2022**
Fui Campe√£o da Copa Am√©rica pela Campinas Fighters em Aruj√°, S√£o Paulo
Fui Campe√£o no Festival da Liga do Vale pela Campinas Fighters em S√£o Paulo

**Pela equipe da Campinas Fighters em 2023**
Fiquei em Terceiro lugar na Primeira Etapa do Campeonato Paulista em Campinas
Fui Campe√£o na Segunda Etapa do Campeonato Paulista em Boituva
Fui Vice Campe√£o na Terceira Etapa do Campeonato Paulista em Piracicaba
Fui Vice Campe√£o na Copa Am√©rica em Aruj√°
Fui Campe√£o no S√£o Roque Internacional em S√£o Roque

## Taekwondo - Uma Abordagem Cient√≠fica
Este artigo cient√≠fico explora o Taekwondo como uma arte marcial, examinando sua hist√≥ria, benef√≠cios para a sa√∫de e seu impacto na mente e no corpo dos praticantes. Al√©m disso, considera as aplica√ß√µes contempor√¢neas do Taekwondo, tanto como uma disciplina esportiva quanto como um meio para o desenvolvimento pessoal.

O Taekwondo √© uma arte marcial milenar que se originou na Coreia e tem ra√≠zes profundas na hist√≥ria e cultura desse pa√≠s. Traduzido literalmente, "Taekwondo" significa o caminho dos p√©s e das m√£os, indicando sua √™nfase na utiliza√ß√£o eficiente do corpo como uma unidade conjunta. Embora o Taekwondo seja frequentemente reconhecido por suas t√©cnicas impressionantes de chute, ele abrange muito mais do que isso. Este artigo explora o Taekwondo de uma perspectiva cient√≠fica, revelando seus benef√≠cios f√≠sicos e mentais, bem como seu papel na sociedade contempor√¢nea.

### Benef√≠cios para a Sa√∫de
O Taekwondo √© uma atividade f√≠sica completa que oferece uma s√©rie de benef√≠cios para a sa√∫de. Em termos de condicionamento f√≠sico, ele melhora a resist√™ncia cardiovascular, a flexibilidade, a for√ßa e o equil√≠brio. Os movimentos de chute desenvolvem a agilidade, equilibrio e a coordena√ß√£o, enquanto a pr√°tica constante aprimora a postura e a consci√™ncia corporal.

Al√©m dos benef√≠cios f√≠sicos, o Taekwondo tamb√©m promove a sa√∫de mental. A disciplina exigida pela pr√°tica regular ajuda a desenvolver a autodisciplina e a concentra√ß√£o. O treinamento enfatiza a import√¢ncia de controlar a mente e as emo√ß√µes, o que pode ser aplicado em v√°rias √°reas da vida.

### Impacto na Mente e no Corpo
O Taekwondo √© uma das poucas atividades f√≠sicas que podem ter um impacto t√£o profundo tanto na mente quanto no corpo. Atrav√©s da pr√°tica constante, os praticantes aprendem a superar desafios f√≠sicos e mentais. Esse processo de supera√ß√£o √© fundamental para o crescimento pessoal e pode aumentar a autoestima e a confian√ßa.

A concentra√ß√£o exigida pelo Taekwondo tamb√©m √© not√°vel. Durante o treinamento e a competi√ß√£o, os praticantes devem estar totalmente presentes, o que pode levar a um estado de foco e imers√£o profunda, onde o tempo parece desaparecer e a mente est√° completamente envolvida na atividade, gerando um foco absoluto para quem est√° praticando, seja as demonstra√ß√µes de movimento (poomsae) ou seja atrav√©s da luta.

### Aplica√ß√µes Contempor√¢neas
Hoje, o Taekwondo √© praticado em todo o mundo n√£o apenas como uma arte marcial, mas tamb√©m como um esporte competitivo. √â um esporte ol√≠mpico desde 2000, e as competi√ß√µes de Taekwondo atraem atletas de elite de todo o mundo.
Al√©m disso, o Taekwondo mant√©m seu valor como uma ferramenta de desenvolvimento pessoal. Muitas academias ensinam n√£o apenas as t√©cnicas de combate, mas tamb√©m os princ√≠pios √©ticos e filos√≥ficos subjacentes. Isso permite que os praticantes apliquem os ensinamentos do Taekwondo em suas vidas cotidianas, promovendo uma sociedade mais respeitosa e compassiva.

O Taekwondo √© muito mais do que uma simples arte marcial ou esporte. √â um caminho para o desenvolvimento f√≠sico, mental e espiritual. Suas ra√≠zes hist√≥ricas e filos√≥ficas, combinadas com seus benef√≠cios para a sa√∫de e impacto na mente e no corpo, fazem dele uma disciplina verdadeiramente √∫nica.
√Ä medida que o Taekwondo continua a se espalhar pelo mundo, √© importante lembrar seus valores fundamentais de respeito, disciplina e autoaperfei√ßoamento. Como uma ferramenta para o desenvolvimento pessoal e um esporte de alto desempenho, o Taekwondo continua a inspirar pessoas de todas as idades a buscarem um equil√≠brio saud√°vel entre mente e corpo, al√©m de buscarem a mentalidade que precisam para superar um desafio e ter mais estabilidade emocional.

## Taekwondo - A Filosofia da Arte Marcial
Este artigo filos√≥fico explora o Taekwondo como uma disciplina que vai al√©m das t√©cnicas de combate, mergulhando nas profundezas de sua filosofia. Ele examina os princ√≠pios fundamentais do Taekwondo, sua conex√£o com a filosofia oriental e como esses ensinamentos podem ser aplicados na vida cotidiana.

O Taekwondo, uma das mais antigas artes marciais do mundo, √© conhecido por seus impressionantes chutes e t√©cnicas de combate. No entanto, sob sua superf√≠cie f√≠sica encontra-se uma rica filosofia que tem ra√≠zes profundas na cultura oriental. Este artigo explora o Taekwondo sob uma luz filos√≥fica, revelando como seus princ√≠pios podem servir como um guia para viver uma vida significativa.

### Harmonia com o Universo
Um dos princ√≠pios fundamentais do Taekwondo √© a busca pela harmonia com o universo. Isso reflete a influ√™ncia da filosofia oriental, especialmente do tao√≠smo e do budismo, que enfatizam a conex√£o entre todos os seres vivos e o cosmos. Os praticantes de Taekwondo s√£o ensinados a respeitar a natureza e a buscar equil√≠brio em todos os aspectos de suas vidas.

### Yin e Yang
O conceito do yin e yang, que descreve a dualidade e a interdepend√™ncia de for√ßas opostas, desempenha um papel central no Taekwondo. Os praticantes aprendem a reconhecer as polaridades da vida e a encontrar equil√≠brio entre elas. Isso se traduz n√£o apenas em suas t√©cnicas de combate, mas tamb√©m em como eles enfrentam desafios e conflitos na vida cotidiana.
O s√≠mbolo do Yin e Yang est√° presente tamb√©m na bandeira da Cor√©ia do Sul, de forma diferenciada do habitual, como estamos acostumados a ver, como a representatividade do preto e do branco com seus lados dentro de cada, levando em considera√ß√£o que o bem tem um pouco do mal e o mal tamb√©m tem um pouco do bem.
O azul (parte de baixo), representa a for√ßa negativa do universo, isso na representatividade da bandeira, enquanto o vermelho (parte de cima), representa a for√ßa positiva.

### Respeito e Cortesia
Outro pilar do Taekwondo √© o respeito. Os praticantes s√£o ensinados a respeitar seus instrutores, colegas e oponentes. Isso vai al√©m de simples formalidades; √© uma express√£o do respeito pela humanidade como um todo. A cortesia √© valorizada como uma maneira de criar um ambiente harmonioso dentro e fora do dojang (tatame), ou sala de treinamento.

### Autoaperfei√ßoamento Constante
O Taekwondo tamb√©m enfatiza o conceito de autoaperfei√ßoamento constante. Os praticantes s√£o incentivados a buscar a excel√™ncia em tudo o que fazem, n√£o apenas nas artes marciais. Isso inclui o desenvolvimento f√≠sico, mental e espiritual. A jornada do Taekwondo nunca termina; √© uma busca eterna pela melhoria pessoal.

### Aplica√ß√£o na Vida Cotidiana
A filosofia do Taekwondo n√£o se limita √†s paredes do dojang. Ela pode ser aplicada na vida cotidiana de v√°rias maneiras. O respeito e a cortesia podem melhorar os relacionamentos interpessoais, enquanto a busca pelo equil√≠brio pode ajudar a lidar com o estresse do cotidiano e os desafios que a vida nos apresenta, bem como, os desafios dentro do tatame. O autoaperfei√ßoamento constante impulsiona a busca de objetivos pessoais e a autorreflex√£o, assim como o auto controle te capacita a tomar decis√µes mais s√°bias e ser uma pessoa paciente mediante ao cotidiano acelerado.

O Taekwondo √© muito mais do que uma simples arte marcial; √© uma filosofia de vida. Seus princ√≠pios de harmonia, yin e yang, respeito, cortesia e autoaperfei√ßoamento constante oferecem orienta√ß√£o para aqueles que buscam uma vida significativa e gratificante. Ao internalizar esses ensinamentos, os praticantes de Taekwondo podem n√£o apenas se tornar mestres das t√©cnicas de combate, mas tamb√©m mestres de si mesmos e de suas vidas, tomando decis√µes de forma consciente e visando al√©m do que apenas o bem estar pr√≥prio. O Taekwondo √©, em √∫ltima an√°lise, uma jornada em dire√ß√£o √† ilumina√ß√£o pessoal e √† realiza√ß√£o espiritual.

## O Taekwondo como Ferramenta Pedag√≥gica no Desenvolvimento Integral dos Indiv√≠duos

O Taekwondo, al√©m de ser uma arte marcial milenar, revela-se uma poderosa ferramenta pedag√≥gica para o desenvolvimento integral dos indiv√≠duos. Ao integrar aspectos f√≠sicos, mentais e √©ticos, o Taekwondo contribui para a forma√ß√£o de alunos n√£o apenas habilidosos em t√©cnicas de combate, mas tamb√©m cidad√£os conscientes e respons√°veis.

###  Desenvolvimento F√≠sico
A pr√°tica do Taekwondo promove o desenvolvimento f√≠sico por meio de exerc√≠cios que trabalham a flexibilidade, for√ßa, resist√™ncia e coordena√ß√£o motora. As t√©cnicas precisas exigem controle sobre o corpo, contribuindo para uma postura saud√°vel e para a preven√ß√£o de les√µes atrav√©s de aquecimentos e a pr√°tica cont√≠nua do esporte e corre√ß√£o durante os treinos.

### Desenvolvimento Mental
A disciplina mental √© uma caracter√≠stica essencial do Taekwondo. A necessidade de memorizar sequ√™ncias de movimentos, regras e valores √©ticos fortalece a capacidade cognitiva dos praticantes. Al√©m disso, a pr√°tica regular alivia o estresse, promovendo o equil√≠brio emocional.

### Educa√ß√£o √âtica e Moral
Os princ√≠pios do Taekwondo s√£o fundamentados em valores √©ticos e morais, como respeito, cortesia, integridade, perseveran√ßa, autocontrole e esp√≠rito indom√°vel. Estes s√£o transmitidos pelos mestres e instrutores, guiando os alunos n√£o apenas nas artes marciais, mas na vida cotidiana.

### Socializa√ß√£o e Respeito M√∫tuo
As academias de Taekwondo s√£o comunidades inclusivas que promovem a socializa√ß√£o entre os praticantes. O respeito m√∫tuo √© cultivado, independentemente de idade, g√™nero ou origem. A pr√°tica das t√©cnicas em duplas ou em grupo fomenta a coopera√ß√£o e o trabalho em equipe.

### Desenvolvimento da Autoconfian√ßa
O Taekwondo desafia os praticantes a superar obst√°culos, estabelecer metas e celebrar conquistas. Essa jornada de autodescoberta contribui significativamente para o desenvolvimento da autoconfian√ßa e da autoestima.

O Taekwondo, como ferramenta pedag√≥gica, transcende a mera instru√ß√£o de t√©cnicas de combate. Ao enfatizar o desenvolvimento f√≠sico, mental e √©tico, o Taekwondo prepara os alunos para enfrentar desafios, promovendo valores que perduram ao longo da vida. A pr√°tica constante dessa arte marcial n√£o apenas aprimora habilidades f√≠sicas, mas molda car√°teres, construindo cidad√£os conscientes e respons√°veis.

## O Taekwondo e seu Impacto Positivo na Sociedade
O Taekwondo √© muito mais do que uma arte marcial; √© uma filosofia de vida que busca promover valores essenciais para a constru√ß√£o de uma sociedade mais justa, pac√≠fica e resiliente. Origin√°rio da Coreia, o Taekwondo transcende fronteiras, impactando comunidades ao redor do mundo de maneira filantr√≥pica das seguintes maneiras:

### Educa√ß√£o e Disciplina
Uma das caracter√≠sticas fundamentais do Taekwondo √© a √™nfase na educa√ß√£o e disciplina. Mestres e instrutores desempenham um papel crucial na forma√ß√£o de jovens e crian√ßas, proporcionando-lhes n√£o apenas habilidades f√≠sicas, mas tamb√©m um conjunto de valores que inclui respeito, cortesia, integridade e dom√≠nio sobre si.

### Inclus√£o e Igualdade
O Taekwondo √© uma pr√°tica inclusiva, aberta a todas as idades, g√™neros e origens. Por meio da promo√ß√£o da igualdade, a arte marcial se torna um ve√≠culo para que pessoas de diferentes contextos se unam em prol de um objetivo comum: o aprimoramento pessoal e coletivo.

### Combate ao Bullying
A filosofia do Taekwondo desencoraja qualquer forma de agress√£o e incentiva a resolu√ß√£o pac√≠fica de conflitos. Nas academias, a cultura anti-bullying √© fortalecida, atrav√©s do respeito ao pr√≥ximo, a integridade e a quest√£o de disciplina, proporcionando um ambiente seguro onde os praticantes aprendem a lidar com as diferen√ßas de maneira respeitosa tanto dentro quanto fora do tatame.

### Responsabilidade Social
Muitas academias de Taekwondo se envolvem ativamente em iniciativas filantr√≥picas, seja por meio de campanhas beneficentes, projetos sociais ou aulas gratuitas para comunidades carentes, al√©m de contar com uma a√ß√£o comunit√°ria para divulga√ß√£o do esporte e apoio aos praticantes. Essas a√ß√µes demonstram o compromisso da comunidade de Taekwondo em contribuir positivamente para a sociedade.

### Desenvolvimento Sustent√°vel
Al√©m dos benef√≠cios sociais, o Taekwondo promove a sa√∫de f√≠sica e mental. A pr√°tica regular n√£o apenas melhora a condi√ß√£o f√≠sica, mas tamb√©m reduz o estresse e aumenta a concentra√ß√£o, contribuindo para um estilo de vida saud√°vel e equilibrado.

O Taekwondo √© uma ferramenta poderosa para promover valores fundamentais e criar mudan√ßas positivas na sociedade. √Ä medida que mais pessoas se envolvem nessa arte marcial, a filantropia se torna uma extens√£o natural de seus princ√≠pios. O compromisso com a educa√ß√£o, inclus√£o, combate ao bullying, responsabilidade social e desenvolvimento sustent√°vel faz do Taekwondo n√£o apenas uma pr√°tica esportiva, mas uma for√ßa transformadora para o bem.

## Gest√£o e Administra√ß√£o no Contexto do Taekwondo
A administra√ß√£o desempenha um papel vital no sucesso e na efic√°cia de qualquer organiza√ß√£o, incluindo as academias de Taekwondo. Este trabalho explora os aspectos administrativos que contribuem para o funcionamento eficiente e sustent√°vel de academias de Taekwondo, considerando desde a organiza√ß√£o interna at√© estrat√©gias para promover o esporte.

### Organiza√ß√£o Interna
A estrutura organizacional de uma academia de Taekwondo √© crucial para o seu desempenho. Abordando a hierarquia dentro da academia, as responsabilidades dos instrutores e a import√¢ncia da comunica√ß√£o eficaz para manter a coes√£o.
Dentro do tatame temos os auxiliares (Faixa vermelha e vermelha ponta preta) e os professores (Faixas Pretas) que s√£o respons√°veis pela administra√ß√£o dentro do tatame, assim como coordena√ß√£o da aula e suporte aos menos graduados.

### Gest√£o de Recursos
A administra√ß√£o eficaz de recursos, como espa√ßo f√≠sico, equipamentos e materiais, √© essencial para o funcionamento di√°rio da academia, assim como banheiros e bebedouros ou acesso a √°gua.

O recomend√°vel √© que se tenha um espa√ßo com tatames ou uma √°rea lisa e macia que evite les√µes por conta das atividades de corrida, pulo, quedas e chutes realizados durante os treinamentos.

Assim como equipamentos como raquete, aparador ou saco de areia para ser realizados os treinos de luta e t√©cnicas de chute e movimenta√ß√£o.

### Planejamento de Aulas e Programas 
A elabora√ß√£o de planos de aulas eficientes e a implementa√ß√£o de programas de treinamento s√£o fundamentais. Usando m√©todos de desenvolvimento de curr√≠culos que atendam √†s necessidades dos praticantes, incentivando a reten√ß√£o, realiza√ß√£o do objetivo daquela aula, seja para aperfei√ßoamento de Poomsae, melhoria em algum aspecto em espec√≠fico do Kyorugui ou at√© mesmo engajamento ou melhoria motora e do aspecto f√≠sico e a resist√™ncia de cada integrante.

### Marketing e Capta√ß√£o de Alunos
Estrat√©gias de marketing s√£o vitais para atrair novos praticantes. Explorando m√©todos para promover a academia, atrair alunos e reter membros, destacando a import√¢ncia do marketing digital e parcerias locais como academias, empresas de √°gua, com√©rcios locais, bancas e outros variantes.

Buscar optar por realizar as aulas em lugar p√∫blico como pra√ßas e bosques, incentivar√° outros membros a participar do projeto, visando demonstra√ß√µes de movimento e execu√ß√µes de chutes que atraiam novos integrantes para a pr√°tica.

A gest√£o eficaz desempenha um papel crucial no sucesso cont√≠nuo das academias de Taekwondo. Ao abordar aspectos internos, otimiza√ß√£o de recursos, planejamento curricular, eventos, e marketing, √© poss√≠vel criar um ambiente prop√≠cio ao crescimento e √† promo√ß√£o do esporte.

O setor administrativo e os membros que nele fazem parte, buscam inspirar uma abordagem proativa para fortalecer e expandir a presen√ßa e a divulga√ß√£o do Taekwondo em comunidades locais e al√©m.

## Roteiro de Aula de Taekwondo para Crian√ßas de 3 a 5 Anos
Objetivo da Aula: Introdu√ß√£o r√°pida e interativa ao Taekwondo, focando no desenvolvimento motor, equil√≠brio e no√ß√µes b√°sicas de respeito e disciplina.

Dura√ß√£o da Aula: Aproximadamente 45-90 minutos

Aquecimento (10 minutos):
Atividades de Aquecimento: Iniciando com uma breve corrida em volta do tatame durante alguns minutos, e depois, usar a pr√°tica de jogos simples, como "Pega-pega de faixa", para elevar a temperatura corporal e preparar os m√∫sculos.

Exerc√≠cios B√°sicos (15 minutos): 
Posi√ß√µes Fundamentais: Demonstra√ß√µes de posi√ß√µes b√°sicas e a postura que deve se ter durante uma luta.
Chutes Simples: Introdu√ß√£o a chutes suaves, como o "Chute Baixo", para desenvolver coordena√ß√£o e equil√≠brio. Utilizando tamb√©m da raquete e do aparador para fazer filas de chute.

T√©cnicas Divertidas (15 minutos): 
Pulo de Bamboles: Com bamboles sobre o ch√£o ou at√© mesmo usando das diferentes cores do tatame, introduzimos o aluno a correr em cores separadas e intercalando, auxiliando na coordena√ß√£o motora e velocidade.

Tamb√©m podemos usar os jogos com cores: Utiliza√ß√£o de pe√ßas do tatame coloridos para associar cores a diferentes movimentos.
Ou at√© mesmo pular sobre objetos: Tendo o foco de pensamentos e tomadas de decis√µes com mais agilidade e interatividade.

Hist√≥ria e Filosofia (5 minutos): 
Hist√≥ria do Taekwondo: Breve narrativa sobre a origem do Taekwondo adaptada para a compreens√£o infantil.
Valores do Taekwondo: Enfatizando valores como respeito, disciplina e amizade.

Relaxamento e Encerramento (5 minutos): 
Relaxamento: As crian√ßas alongam assim que encerram a aula para relaxar o m√∫sculo e evitar les√µes.

Cumprimento Final: As crian√ßas se despedem com um cumprimento, refor√ßando a import√¢ncia do respeito ao t√©rmino da aula e ao professor que acabou de dar a aula, al√©m de citar os valores do Taekwondo como Cortesia, Integridade, Perserveran√ßa, Domin√≠o Sobre Si, Esp√≠rito Indom√°vel e as promessas como Respeitar os Intrutores e Superiores, Nunca Fazer Mal Uso do Taekwondo, Ser Campe√£o da Liberdade e da Justi√ßa e Construir Mundo Mais Pac√≠fico.

Observa√ß√µes: Usamos da linguagem simples, incentivando a participa√ß√£o ativa atrav√©s de brincadeiras, mantendo a atmosfera l√∫dica para manter o interesse das crian√ßas.
Este roteiro pode ser adaptado conforme a din√¢mica do grupo e a disponibilidade de materiais.]]></description>
            <link>https://yagasaki.vercel.app//articles/taekwondo-black-belt</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/taekwondo-black-belt</guid>
            <pubDate>Sat, 09 Dec 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Frequently Asked Questions]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1591013078076-42ae16047f45?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80 "WebFactory Ltd")

Eu vi recentemente que muitas pessoas me procuram com as mesmas perguntas, como fa√ßo para conseguir um emprego, pode me ajudar 
com tal projeto, porque voc√™ √© desenvolvedor de Javascript, resolvi ent√£o separar essas perguntas e responder todos que me veio a mente.

## Como fa√ßo para conseguir um emprego?

Voc√™ √© um desenvolvedor j√∫nior? Possu√≠ experi√™ncia, sen√£o, leia sobre [Como conseguir experi√™ncia sendo J√∫nior/Iniciante](https://yagasaki.dev/blog/como-conseguir-experiencia-sendo-junior-iniciante). 

Eu entendi, preciso de experi√™ncia, mas acredito que meu Github n√£o √© 
bonito, pode dar uma olhada? Recomendo que voc√™ veja de como eu estive 
[Montando um perfil interessante e exemplar no GitHub](https://yagasaki.dev/blog/montando-um-perfil-interessante-e-exemplar-no-github). 

Se nenhuma dessas ideias de deu uma ajuda sobre o que voc√™ precisa, pe√ßa ajuda na [Comunidade de Desenvolvedores da Kalify Inc](https://discord.gg/jhSepmE7nN?ref=yagasaki.dev/blog).

Nenhuma pergunta √© idiota.

<!--truncate-->

## Voc√™ pode me ajudar com XYZ?

N√£o, eu recebo muitos pedidos e simplesmente n√£o tenho tempo para ajudar a todos, infelizmente, a maioria das coisas nem s√£o 
problemas e a a [Comunidade de Desenvolvedores da Kalify Inc](https://discord.gg/jhSepmE7nN) poder√° ajud√°-lo, a menos que voc√™ 
tenha algo incompleto - eu tento responder cada men√ß√£o que recebo no Twitter e, √†s vezes, dependendo do que for, responderei 
oferecendo assist√™ncia, mas isso √© raro e depende muito de qual √© o problema ou a informa√ß√£o que est√° sendo encaminhada para mim. 
Recomendo tentar entrar em contato comigo usando a comunidade.

## Por que voc√™ n√£o usa outra linguagem al√©m do Javascript?

Javascript √© meu espa√ßo seguro para mim, estou muito confort√°vel com ele e posso escrever quase tudo que n√£o envolva nada de 
especial sem ter que verificar nenhuma documenta√ß√£o mais complicada.

Eu poderia usar PHP, Python ou qualquer outra coisa que possa existir e eu realmente uso esses idiomas √†s vezes - quase que 
raramente, mas acabo pesquisando cada passo simples no Google porque simplesmente n√£o sei o que estou fazendo, √© como se voc√™ 
estivesse me pedindo para escrever isso em chin√™s.

Em conclus√£o, Javascript √© minha escolha porque sou r√°pido e posso fazer as coisas com relativa rapidez, sem complica√ß√µes, al√©m de
 ter sido a minha primeira linguagem que soube usar, sem achar que estava usando muito c√≥digo para fazer algo simples.

## Voc√™ trabalha com o que?

Sou Desenvolvedor de Software e especialista em Front-end. Fora do √¢mbito tecnol√≥gico, sou colunista no Onigiri Hardcore e atleta 
de Taekwondo na Campinas Fighters.

## Como fa√ßo para ajudar no open source?

Temos a Kalify Inc, com projetos abertos ao p√∫blico que voc√™ pode ajudar a contribuir, al√©m de ter a 
[Comunidade de Desenvolvedores da Kalify Inc](https://discord.gg/jhSepmE7nN?ref=yagasaki.dev/blog) que voc√™ pode entrar e conversar com outros 
desenvolvedores. Para ajudar a comunidade da Kalify Inc e seus projetos, 
leia sobre o [Plano de Carreira](https://kalify.vercel.app/#career) da Kalify Inc.

## Qual origem do nome Yagasaki?

Antes de tudo, n√£o sou asi√°tico, gosto da cultura japonesa e consumo bastante conte√∫do a respeito. Para saber mais, voc√™ pode ler 
um pouco sobre isso em [Primeiramente deixe-me apresentar, eu sou Anderson](https://yagasaki.dev/blog/primeiramente-deixe-me-apresentar-eu-sou-anderson)

## Qual √© a configura√ß√£o do seu computador?

Meu computador √© um B550M Aorus Elite, Ryzen 5 5600 de 3.50GHz, 32GB de RAM, 1TB de SSD, 500GB de HD e 256GB (OS) de SSD com uma 
NVIDIA GeForce RTX 4060 de 8GB, tenho um teclado da Redragon Lakshmi, Mouse Pulsefire Surge da HyperX, Headset Fifine Ampligame H6
 e Microfone Fifine Ampligame A2, al√©m de dois monitores da LG de 75Hz com 21.5' (22MP410-B).

Voc√™ pode ver tamb√©m as configura√ß√µes do meu [Oh-My-Zsh](https://gist.github.com/Yagasaki7K/3a1796fc99989b882bbf80f897edf97a), do meu 
[VSCode](https://gist.github.com/Yagasaki7K/7a908b1907714d936d21a568d1f83258) e do meu [Windows Terminal](https://gist.github.com/Yagasaki7K/9f058ea8ff2c2cee51ad9b32d3f844f9).

## Como voc√™ fez o seu site?

Meu site √© feito com Docusaurus, um gerador de sites est√°ticos, com ReactJS e Markdown, hospedado na Vercel. Utilizando SASS como 
estiliza√ß√£o. Por costume, em outros desenvolvimentos como Essentials e Onigiri Hardcore, utilizo o NextJS, Typescript e Styled 
Components com Firebase.

## Por que seu blog √© apenas em portugu√™s?

Escrevo somente em portugu√™s devido √† minha comunidade e as pessoas que me seguem pelo conte√∫do, que est√° em fase de aprendizado e 
que me acompanham em minhas postagens, dicas e conte√∫do compartilhado. 

Optar pelo ingl√™s para atingir o p√∫blico internacional
n√£o seria o ideal, j√° que que aqueles que visualizarem minhas publica√ß√µes j√° possuem conhecimento nesse sentido. Al√©m disso, h√° um
 suporte comunit√°rio em ingl√™s que supera significativamente o j√° dispon√≠vel em portugu√™s.]]></description>
            <link>https://yagasaki.vercel.app//articles/faq</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/faq</guid>
            <pubDate>Wed, 08 Nov 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como posso aprender programa√ß√£o em 2024]]></title>
            <description><![CDATA[![James Harrison](https://images.unsplash.com/photo-1587620962725-abab7fe55159?q=80&w=1931&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)

A programa√ß√£o √© uma habilidade valiosa e altamente procurada nos dias de hoje. Se voc√™ est√° interessado em ingressar nesse emocionante mundo da tecnologia, √© natural se perguntar por onde come√ßar. Este artigo explora as diferentes trilhas da programa√ß√£o, especificamente front-end, back-end e desenvolvimento mobile, destacando as vantagens e desvantagens de cada uma. Al√©m disso, discutiremos a decis√£o entre se tornar um especialista ou generalista em programa√ß√£o.

## Primeiros Passos na Programa√ß√£o
Antes de escolher um caminho espec√≠fico, √© fundamental aprender os conceitos b√°sicos da programa√ß√£o. Isso envolve compreender a l√≥gica de programa√ß√£o, aprender uma ou mais linguagens de programa√ß√£o, entender estruturas de dados e algoritmos. Felizmente, existem muitos recursos online, cursos e tutoriais dispon√≠veis para ajudar voc√™ a dar os primeiros passos. Inclusive existe o [roadmap](https://roadmap.sh?ref=yagasaki.dev/blog) para seguir um passo a passo mais funcional de uma determinada √°rea em espec√≠fico.

<!--truncate-->

### Front-End: O Que o Usu√°rio V√™
#### O que √© Front-End?
O desenvolvimento front-end envolve a cria√ß√£o da interface com a qual os usu√°rios interagem diretamente. Isso inclui tudo, desde o layout de um site at√© a forma como os bot√µes funcionam. As tecnologias front-end mais comuns incluem HTML, CSS e JavaScript.

**Vantagens do Front-End:**
- **Visibilidade Imediata:** Trabalhar no front-end permite que voc√™ veja instantaneamente o resultado do seu trabalho, pois lida com o que os usu√°rios veem.
- **Criatividade:** √â uma √≥tima escolha para pessoas com habilidades criativas, pois envolve design e experi√™ncia do usu√°rio.

**Desvantagens do Front-End:**
- **R√°pida Evolu√ß√£o:** As tecnologias front-end mudam rapidamente, exigindo constante aprendizado.
- **Limita√ß√£o de Complexidade:** Em projetos complexos, o front-end pode ter suas limita√ß√µes em termos de processamento e armazenamento de dados.

### Back-End: O C√©rebro Por Tr√°s das Opera√ß√µes
#### O que √© Back-End?
O desenvolvimento back-end est√° relacionado ao funcionamento dos bastidores de um site ou aplicativo. Isso inclui servidores, bancos de dados e a l√≥gica que permite que um sistema funcione.

**Vantagens do Back-End:**
- **Demanda Constante:** Back-end √© necess√°rio para qualquer aplicativo ou site, tornando os desenvolvedores back-end altamente procurados.
- **L√≥gica Complexa:** √â uma escolha excelente para quem gosta de resolver problemas complexos e l√≥gicos.

**Desvantagens do Back-End:**
- **Menos Vis√≠vel:** O trabalho no back-end √© menos vis√≠vel para os usu√°rios finais, o que pode ser menos gratificante para alguns.
- **Requer Conhecimento T√©cnico Avan√ßado:** Requer uma compreens√£o profunda de servidores, seguran√ßa e bancos de dados.

### Desenvolvimento Mobile: Mundos na Palma da M√£o
#### O que √© Desenvolvimento Mobile?
O desenvolvimento mobile envolve a cria√ß√£o de aplicativos para dispositivos m√≥veis, como smartphones e tablets. Voc√™ pode escolher entre desenvolvimento iOS (Apple) ou Android (Google).

**Vantagens do Desenvolvimento Mobile:**
- **Ampla Demanda:** Com o aumento constante no uso de dispositivos m√≥veis, a demanda por desenvolvedores mobile √© alta.
- **Acessibilidade:** Seus aplicativos podem chegar a uma ampla audi√™ncia, tornando-o acess√≠vel a muitas pessoas.

**Desvantagens do Desenvolvimento Mobile:**
- **Plataformas Diferentes:** Se voc√™ deseja criar aplicativos para ambas as principais plataformas, iOS e Android, precisa aprender duas linguagens de programa√ß√£o diferentes.
- **Aten√ß√£o aos Detalhes:** Pequenos erros podem levar a problemas significativos em aplicativos m√≥veis, tornando-o um campo que exige aten√ß√£o minuciosa.

### Especializa√ß√£o Vs. Generaliza√ß√£o
A decis√£o de se tornar um especialista em uma √°rea espec√≠fica ou um generalista que abrange v√°rias √°reas √© importante. A especializa√ß√£o envolve aprofundar seus conhecimentos em um campo espec√≠fico, tornando-se um especialista. Por exemplo, voc√™ pode se tornar um especialista em seguran√ßa cibern√©tica, intelig√™ncia artificial ou desenvolvimento front-end.

Por outro lado, a generaliza√ß√£o significa que voc√™ tem conhecimentos b√°sicos em v√°rias √°reas e pode trabalhar em v√°rias partes de um projeto. Isso pode ser ben√©fico em equipes menores ou ao iniciar sua pr√≥pria empresa.

Eu falei sobre isso anteriormente em [Front-end, Back-end, Fullstack, o que √© e para onde ir?](https://yagasaki.dev/blog/front-end-back-end-fullstack-o-que-e-e-para-onde-ir) e particularmente prefiro que escolha ser especialista ao inv√©s de generalista, isso te deixa mais destacado naquele seguimento do que qualquer outra pessoa gen√©rica que sabe apenas o b√°sico.

### Conclus√£o
A escolha de aprender programa√ß√£o √© um passo importante para entrar no mundo da tecnologia. Comece pelos conceitos b√°sicos e, em seguida, explore as diferentes trilhas, como front-end, back-end e desenvolvimento mobile. Considere suas prefer√™ncias pessoais, metas de carreira e demanda do mercado ao tomar sua decis√£o. E lembre-se, a programa√ß√£o √© uma habilidade em constante evolu√ß√£o, ent√£o esteja preparado para aprender continuamente, independentemente do caminho que escolher.

Se ainda estiver com d√∫vidas sobre o que foi esclarecido aqui, voc√™ pode ver esse artigo - [Front-end, Back-end, Fullstack, o que √© e para onde ir?](https://yagasaki.dev/blog/front-end-back-end-fullstack-o-que-e-e-para-onde-ir) - novamente citando ele - que eu criei, usando analogias para explicar qual √© a fun√ß√£o de cada √°rea. E bom, qualquer d√∫vida estou no Twitter/X, caso queira me procurar e tirar as devidas d√∫vidas.

Estamos tamb√©m no [Whatsapp][https://chat.whatsapp.com/KOgletvhYCvFIpuo9SNgGJ] com o nosso grupo de Baby Developers, para as pessoas que almejam se tornar programadores de qualidade e querem uma dica, um aux√≠lio e um guia, n√£o s√≥ meu, mas de uma enorme comunidade para ir seguindo o caminho das pedras e evoluindo com mais facilidade.]]></description>
            <link>https://yagasaki.vercel.app//articles/como-posso-aprender-programacao</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/como-posso-aprender-programacao</guid>
            <pubDate>Wed, 08 Nov 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Primeiros passos com Jest, framework de teste]]></title>
            <description><![CDATA[
![https://jestjs.io/](https://jestjs.io/pt-BR/img/opengraph.png)

O Jest √© um framework de teste JavaScript popular que √© usado para escrever testes unit√°rios, testes de integra√ß√£o e testes de ponta a ponta. Ele √© f√°cil de configurar e usar, e oferece uma variedade de recursos para ajudar os desenvolvedores a escrever testes de alta qualidade.

Para configurar o Jest, voc√™ precisa instalar o pacote jest no seu projeto:

`npm install jest --save-dev`

Isso instalar√° o Jest e seus m√≥dulos dependentes no diret√≥rio `node_modules` do seu projeto.

Em seguida, voc√™ precisa criar um arquivo `jest.config.js` no diret√≥rio raiz do seu projeto. Este arquivo √© usado para configurar o Jest para o seu projeto.

<!--truncate-->

O arquivo `jest.config.js` pode conter uma variedade de configura√ß√µes, mas as configura√ß√µes mais b√°sicas s√£o as seguintes:

```js
module.exports = {
  // O caminho para o diret√≥rio que cont√©m os arquivos de teste
  rootDir: './',
  // O caminho para o diret√≥rio que cont√©m os arquivos de c√≥digo fonte
  moduleNameMapper: {
    // Mapeia um caminho de m√≥dulo para outro caminho
    "^@/(.*)$": "<rootDir>/src/$1"
  },
  // O ambiente de teste a ser usado
  testEnvironment: 'node'
};
```

A configura√ß√£o acima especifica que o Jest deve procurar arquivos de teste no diret√≥rio `src/` do seu projeto. Ele tamb√©m especifica que o Jest deve usar o ambiente Node.js para executar seus testes.

Criando seu primeiro teste

Para criar seu primeiro teste, voc√™ precisa criar um arquivo com a extens√£o `.test.js` no diret√≥rio que cont√©m os arquivos de teste.

Por exemplo, se voc√™ tiver um arquivo index.js no diret√≥rio `src/`, voc√™ pode criar um arquivo `index.test.js` para test√°-lo.

O arquivo `index.test.js` pode conter uma variedade de testes, mas o teste mais b√°sico √© um teste que verifica se uma fun√ß√£o retorna o valor esperado.

Aqui est√° um exemplo de um teste b√°sico:

```js
// Importa a fun√ß√£o a ser testada
import { add } from './index';

// Cria um caso de teste
describe('add', () => {
  // Define o cen√°rio do caso de teste
  it('deve retornar a soma de dois n√∫meros', () => {
    // Chama a fun√ß√£o a ser testada
    const result = add(1, 2);

    // Verifica o resultado esperado
    expect(result).toBe(3);
  });
});
```

Este teste define um caso de teste chamado `add`. O caso de teste verifica se a fun√ß√£o `add()` retorna o valor esperado quando √© chamada com dois n√∫meros.

Para executar o teste, voc√™ pode usar o comando `jest`:

```bash
jest
```

Isso ir√° executar todos os testes em seu projeto.

## Conclus√£o

Este artigo forneceu uma introdu√ß√£o √† configura√ß√£o do Jest e √† cria√ß√£o de seu primeiro teste usando JavaScript. Para obter mais informa√ß√µes sobre o Jest, consulte a documenta√ß√£o oficial: [https://jestjs.io/en/](https://jestjs.io/en?ref=yagasaki.dev/blog)

Aqui est√£o algumas dicas adicionais para iniciantes no Jest:

- Use o comando `jest --watch` para executar os testes automaticamente sempre que voc√™ fizer uma altera√ß√£o no c√≥digo.
- Use o comando `jest --coverage` para gerar um relat√≥rio de cobertura de c√≥digo para seus testes.
- Use o comando `jest --verbose` para obter mais informa√ß√µes sobre os resultados dos testes.

Espero que este artigo tenha sido √∫til!

## Adicionais

Al√©m das dicas mencionadas no artigo, aqui est√£o algumas outras coisas que voc√™ pode fazer para melhorar seus testes com o Jest:

Use mocks para isolar suas depend√™ncias e evitar problemas de depend√™ncias cruzadas.
Use expect.extend() para criar seus pr√≥prios matchers personalizados.
Use jest.fn() para criar fun√ß√µes de mock.
Use jest.spyOn() para espionar fun√ß√µes existentes.
Use jest.setTimeout() para definir um limite de tempo para seus testes.
Use jest.retry() para tentar seus testes v√°rias vezes.

Ao usar essas dicas, voc√™ pode criar testes mais robustos e confi√°veis para sua aplica√ß√£o.]]></description>
            <link>https://yagasaki.vercel.app//articles/primeiro-passos-jest</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/primeiro-passos-jest</guid>
            <pubDate>Fri, 06 Oct 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Bun, o compilador JavaScript mais r√°pido do mundo √© lan√ßado oficialmente]]></title>
            <description><![CDATA[
![Cesar Carlevarino Aragon](https://images.unsplash.com/photo-1592811773343-9abf0b1a6920?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80)

Hoje fiquei desacreditado, √© 11 de Setembro de 2023 e recebi a not√≠cia de que dia 08 de Setembro a vers√£o 1.0 do Bun saiu, s√≥ n√£o soube disso, porque aqui no Brasil foi p√≥s-feriado e muita gente acabou emendando - inclusive eu. Mas vamos l√°, o que √© o Bun e porqu√™ ele vai revolucionar tanto em quest√£o de velocidade de compiladores.

Voc√™ √© j√∫nior e n√£o sabe o que √© um compilador ou at√© mesmo passou despercebido durante os estudos, vamos l√° que vou te explicar tudo direitinho.

Voc√™ pode ver a not√≠cia sobre o [lan√ßamento do Bun l√° no Onigiri Hardcore](https://onigirihardcore.com.br/bun-lana-verso-10-e-promete-revolucionar-o-desenvolvimento-web).

<!--truncate-->

## O que s√£o os compiladores?
Compiladores s√£o programas de computador que convertem c√≥digo-fonte escrito em uma linguagem de programa√ß√£o em c√≥digo-objeto escrito em uma linguagem de m√°quina ou seja, um exemplo para quem est√° familiarizado com Javascript, o Node √© um compilador Javascript. Ent√£o, ele ir√° pegar seu c√≥digo escrito em Javascript e simplesmente ler tudo aquilo e compilar, claro que para cada linguagem temos um compilador diferente, mas a quest√£o aqui √© vermos sobre o Bun e sua incr√≠vel velocidade referente aos demais no mundo do Javascript. Al√©m de tudo, os compiladores s√£o usados para aumentar a velocidade e a efici√™ncia de execu√ß√£o de programas. Eles tamb√©m podem ajudar a detectar e corrigir erros de c√≥digo.

## O que √© o Nodejs?
Node.js √© um runtime (compilador) JavaScript de c√≥digo aberto que pode ser usado para executar c√≥digo JavaScript fora do navegador. Ele √© baseado no motor JavaScript V8 do Google Chrome. O Node.js √© frequentemente usado para construir aplica√ß√µes web, mas tamb√©m pode ser usado para construir aplica√ß√µes de desktop, aplica√ß√µes m√≥veis e aplica√ß√µes de servidor.

## O que √© o Deno?
Deno, concorrente direto do Node - a√≠ que surge o trocadilho do nome - √© um runtime JavaScript e TypeScript moderno que √© seguro por design. Ele √© baseado no motor JavaScript V8 do Google Chrome, mas usa um mecanismo de seguran√ßa baseado em sandbox para proteger os aplicativos executados nele. O Deno √© frequentemente usado para construir aplica√ß√µes web seguras, mas tamb√©m pode ser usado para construir aplica√ß√µes de desktop, aplica√ß√µes m√≥veis e aplica√ß√µes de servidor.

## E afinal, o que √© o Bun?
Bun √© um runtime JavaScript e TypeScript moderno que √© r√°pido e eficiente. Ele √© baseado no motor JavaScript V8 do Google Chrome, mas usa um mecanismo de compila√ß√£o para melhorar o desempenho. O Bun √© frequentemente usado para construir aplica√ß√µes web r√°pidas e eficientes, mas tamb√©m pode ser usado para construir aplica√ß√µes de desktop, aplica√ß√µes m√≥veis e aplica√ß√µes de servidor.

## O resultado dos testes
Fiz um teste simples, usando o mesmo arquivo para os tr√™s compiladores e o resultado foi surreal. Nesse teste, usei uma matem√°tica simples, usando dez casas decimais e segui essa f√≥rmula para que ele pudesse trazer de resultado: ((a + b) * (c + d)) / (e + f) + g - h;

Claro que para as m√°quinas isso √© mam√£o com a√ß√∫car, mas para n√≥s, levaria mais do que um tempinho para solucionarmos isso, certo? Mas vamos l√°.

Pedi para ele me falar quanto tempo ele levou para executar, qual √© o tempo em que ele terminou aquilo - sem parar o rel√≥gio - e quanto tempo (abstra√ß√£o) ele levou para fazer isso nesse intervalo ou seja: TdE - TdF = TdR (Tempo de Execu√ß√£o menos o Tempo de Finaliza√ß√£o receberemos o Tempo de Resultado).

O resultado do Node foi que ele come√ßou em 17.3797 milisegundos, terminou o teste em 17.3852 milisegundos e o tempo que levou para resolver tudo isso foi de 0.0058 milisegundos. √â um resultado bastante significativo.

J√° o Deno (irm√£o do meio) come√ßou em 22 milisegundos, terminou em 22 milisegundos e o valor foi menor do que 0.0 milisegundos para retornar o resultado, como ele foi bem chato para nos trazer o valor completo, s√≥ tivemos esse valor por cima.

E ent√£o que surge o irm√£o mais novo, o Flesha da fam√≠lia. O Bun, levou 10.888466 milisegundos para come√ßar, 10.888736 milisegundos para finalizar e levou cerca de apenas 0.0002 milisegundos para resolver a matem√°tica.

![Test Results](https://user-images.githubusercontent.com/23272064/267136008-9c99d1eb-122e-4207-a16b-df7ed0328038.png)

## Avalia√ß√£o
Sim! Esse valor √© muito, mas muito r√°pido do que os dois comparados. Em quest√£o de velocidade, o Bun √© o primeiro, seguido pelo Node e pelo Deno. O mais incr√≠vel de tudo isso √© que o Bun est√° na vers√£o 1.0.0, enquanto o Node est√° na vers√£o 18.17.1 e o Deno na v.1.36.4.

Eu fiquei alucinado quando vi isso. Claro que, em termos de velocidade, os tr√™s runtimes s√£o muito r√°pidos. Mesmo o mais demorado, o Deno, gastou apenas 22 milissegundos para responder. Mas ver que o Bun √© capaz de fazer isso em 10 milissegundos √© simplesmente incr√≠vel.

Claro que fizemos um teste simples, mas ele √© suficiente para mostrar que o Bun √© muito mais r√°pido que qualquer outro compilador. Em grande escala, como nos v√°rios projetos que carregamos no Node, a diferen√ßa √© ainda mais significativa. Um projeto que leva cerca de 10, 15 segundos para ser executado no Node pode ser executado em apenas 1 segundo no Bun.

Em termos t√©cnicos, avaliando os resultados dos testes e os recursos de cada runtime, pode-se concluir que o Bun √© a melhor op√ß√£o para aplica√ß√µes web que exigem alta performance e efici√™ncia, o Node.js √© uma boa op√ß√£o para aplica√ß√µes web que n√£o exigem alta performance e o Deno √© uma boa op√ß√£o para aplica√ß√µes web seguras.

Agora por tr√°s das cortinas, eu n√£o digo nada se eu mudar meus projetos para o Bun. A vers√£o est√°vel dele foi lan√ßada ao p√∫blico e √© garantida como segura para uso em produ√ß√£o.

E voc√™? Vai mudar de compilador tamb√©m ou vai esperar um pouco? Comenta comigo l√° no Twitter!
]]></description>
            <link>https://yagasaki.vercel.app//articles/bun-e-sua-versao</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/bun-e-sua-versao</guid>
            <pubDate>Mon, 11 Sep 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[ContextAPI - Como criar, como usar e como alimentar para iniciantes]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1593663922663-34cbd6671eae?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1931&q=80 "Mark K√∂nig")

Neste artigo abordaremos um assunto bastante interessante no React chamado context, que disponibiliza uma maneira de passar os dados entre a √°rvore de componentes sem precisar passar props manualmente em cada n√≠vel.

Imagine o seguinte cen√°rio, voc√™ tem o nome de um usu√°rio em um componente, s√≥ pra gente ter uma no√ß√£o entre camadas, vamos
cham√°-los de A, B, C e D. Imagine que esse componente fez uma chamada de API no C, certo? N√≥s temos apenas o nome do usu√°rio l√° e
n√£o queremos ter que ficar repetindo essa chamada nos outros componentes, certo?

<!--truncate-->

## Ah, mas por que n√£o? Ou por que n√£o criamos no topo e vamos chamando at√© embaixo?
Vamos ao primeiro cen√°rio. Imagine que ao inv√©s de voc√™ fazer uma requisi√ß√£o pela p√°gina, voc√™ faz quatro para apenas uma p√°gina,
certo? Isso √© tranquilo quando se trata de um usu√°rio, mas j√° pensou se a nossa aplica√ß√£o tem mil acessos di√°rios? Isso seria
basicamente quatro mil requisi√ß√µes di√°ria e isso √© muita coisa para o banco de dados, isso sem contar as atualiza√ß√µes de p√°gina.

E por que n√£o criamos a aplica√ß√£o no topo e vamos chamando nas demais? Por um motivo quase que semelhante. N√£o tem necessidade de
voc√™ chamar nas camadas A, B e D, se o usu√°rio sequer passou por l√°, imagine que voc√™ s√≥ entrou na primeira p√°gina e saiu, certo?
E quando voc√™ vai ver, sem querer, voc√™ fez uma requisi√ß√£o na sub p√°gina que se quer o usu√°rio entrou, √© bem desgastante isso, n√£o
concorda? Ainda mais para quem vive de internet m√≥veis.

## Voltando ao Foco

Para facilitar essa comunica√ß√£o, seja de A para D e D para B, por exemplo, existe o Context API do React e a√≠ que entramos no
assunto. useContext, como funciona, de onde ele vem e como ele se alimenta. Em resumo, com o Context API podemos transitar esses
dados atrav√©s de componentes sem que ele sejam filhos diretos desse componente. 

E vamos com calma entendendo passo a passo dessa situa√ß√£o, porque at√© para mim foi muito complexo entender no come√ßo.

## Primeiro Passo

Primeiro, vamos importar e executar o m√©todo createContext

```jsx
import { createContext } from 'react'

const MyContext = createContext(null)
```

Inicialmente definimos ele como null, j√° que queremos ele vazio e n√£o queremos definir um tipo para ele ainda.

DICA: O retorno do createContext √© um componente, por isso √© legal salvar numa vari√°vel em PascalCase, as famosas `{  }`

## Segundo Passo

J√° que criamos ele vazio, como iremos adicionar dados a esse novo contexto que criamos?

Dentro do Provider definimos que esse contexto fornecer√° pros componentes descendentes, deixando isso na propriedade value.

```jsx
const MyContext = createContext(null)

export default function Parent() {
  const nameUser = {
    name: 'Yagasaki',
  }

  // Outro exemplo
  const nameUser = ['Yagasaki']

  // Mais um exemplo
  const nameUser = 'Yagasaki'

  return (
    <MyContext.Provider value={nameUser}>
      <ComponentA />
    <MyContext.Provider>
  )
}
```

Est√° permitido colocar qualquer tipo de dado dentro contexto, j√° que ele aceita qualquer tipo, isso inclui at√© mesmo fun√ß√µes.

## Terceiro Passo

Agora que sabemos como criar um contexto, como adicionar dados a ele, como faremos para usar esse contexto como a gente bem entender?

Infelizmente n√£o iremos usar esses dados fora do famoso pai-filho, ou seja, n√£o adianta um componente "dinossauro" tentar acessar
informa√ß√µes do componente "peixe" j√° que eles n√£o possuem nenhum parentes, √© diferente do famoso "dinossauro" para "galinha", deu
para entender a analogia? Componentes que est√£o fora da √°rvore deles n√£o possuem acesso, simples.

Mas como vamos acessar esses dados?

Primeiramente precisamos importa uma ou duas coisas, sendo: O Hook `useContext` do React e o Hook que a gente criou em outro
arquivo. Abaixo est√° um exemplo de como iremos usar o useContext a nosso favor.

```jsx
import { useContext } from 'react'

import MyContext from './MyContext.js'

export default function ComponentC() {
  const userContext = useContext(MyContext)

  return (
    <div>
      <p>{userContext.name}</p>
    </div>
  )
}
```

O seu retorno ser√° exatamente a mesma informa√ß√£o que inserimos ali em cima na propriedade `value`. Assim podemos obter o dado
diretamente do provider sem NENHUM componente intermedi√°rio! Economizando um esfor√ßo que seria praticamente enorme para transitar esse dado abaixo por todos os
componentes interm√©dios! Simplesmente DEMAIS!

DICA: Note que obtemos o valor do nome como uma propriedade de userContext, isso porque no exemplo, criamos como um objeto na propriedade value, e esse mesmo objeto foi retornado da execu√ß√£o do useContext. Se for outro tipo de dado, o retorno ser√° correspondente!

## Modificando o valor

Beleza, j√° criamos o provider, que vem do ingl√™s de provedor, aquele que prov√™ algo, providencia. Conseguimos inserir algo nele e acessamos ele atrav√©s de um componente distante, e agora? Agora vamos aprender a modificar esse valor, manipular essa informa√ß√£o. Lembra que eu mencionei acima que ele aceita QUALQUER tipo de dado, inclusive fun√ß√µes? Ent√£o, e se por exemplo a gente usasse um `useState` nele?

Voc√™ deve se perguntar porque iriamos querer fazer isso, certo? Imagine que voc√™ est√° numa p√°gina de edi√ß√£o de usu√°rio e quer que os dados desse usu√°rio j√° estejam preenchidos quando o usu√°rio entrar na p√°gina, como que a gente faz?

A ideia √© o seguinte, vamos isolar a vari√°vel que a gente est√° passando para a propriedade `value` para facilitar a leitura e deixar um pouco mais organizado, okay? Nada de muito novo que fizemos aqui, √© claro que estamos levando em considera√ß√£o que ele √© um objeto. Iremos apenas adicionar o valor do state e seu dispatch na vari√°vel providerValue e assim, inserimos no provider.

```jsx
const MyContext = createContext(null)

export default function Parent() {
  const [name, setName] = useState('Yagasaki')
  const providerValue = {
    name,
    setName,
  }

  return (
    <MyContext.Provider value={providerValue}>
      <ComponentA />
    </MyContext.Provider>
  )
}
```

Ficou confuso? O que fizemos a mais foi apenas adicionar o nome das duas vari√°veis que usamos no `useState` para assim que chamarmos de volta podermos manipular ele tamb√©m dentro do componente, caso ao contr√°rio, s√≥ precisariamos enviar o `name` e ele ficaria somente leitura, tendo que ser alterado apenas na p√°gina `Parent`

Dessa forma podemos alterar o valor da vari√°vel `name` a partir de qualquer componente que quisermos, como eu mencionei anteriormente, isso acaba sendo bem √∫til quando precisamos atualizar o valor de uma vari√°vel em ambos os lados, bacana n√©?

Olha como ficou o componente filho quando utilizamos o `useState` para passar a informa√ß√£o:

```jsx
import { useContext } from 'react'
import MyContext from './MyContext.js'

const ComponentA = () => {
  const userContext = useContext(MyContext)

  function handleChange(event) {
    const { newName } = event.target.value;

    if (true) {
      // Alguma verifica√ß√£o, se necess√°rio
    }

    userContext.setName(newName)
  }

  return (
    <div>
      <label>
        Usu√°rio: {userContext.name}
        <input type="text" value={userContext.name} onChange={handleChange}/>
      </label>
    </div>
  )
}

export default ComponentA
```

S√≥ tome cuidado com loops infinitos, em casos de formul√°rio, use o `form onSubmit={(e) => e.preventDefault()}`, assim, evitar√° de atualizar a p√°gina quando 
o usu√°rio clicar em enviar, por exemplo, e claro, caso esteja usando um form.

Fico muito agradecido que voc√™ tenha chegado at√© aqui, levou um pouco de tempo para construir esse artigo, j√° que tentei deixar o mais direto e bem explicado poss√≠vel para voc√™ entender de fato como funciona o Contexto, j√° que eu levei muito tempo para realmente entender como ele funciona.

Feedback no meu Twitter/X (@Yagasaki7K) s√£o sempre bem vindos e espero que voc√™ que se dedicou a ler e entender esse artigo tenha aprendido algo novo.

Muito obrigado!]]></description>
            <link>https://yagasaki.vercel.app//articles/descomplicando-context-react</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/descomplicando-context-react</guid>
            <pubDate>Tue, 05 Sep 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Guia Detalhado - Configura√ß√£o do Rocketchat no Azure com Funcionalidades Avan√ßadas]]></title>
            <description><![CDATA[
![](https://plus.unsplash.com/premium_photo-1674082012152-fb856017c4b1?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1974&q=80 "Unsplash+")

Este guia aborda o processo detalhado de instala√ß√£o e configura√ß√£o do Rocketchat em uma m√°quina virtual Ubuntu na plataforma Microsoft Azure - pode funcionar em outras plataformas, mas n√£o foi testado como Google Cloud Plataform, Heroku e outros - com foco em habilitar funcionalidades avan√ßadas como integra√ß√£o com um frame externo e configura√ß√µes de omnichannel.

## Instala√ß√£o da M√°quina Virtual no Azure

1. Acesse o portal Azure: https://portal.azure.com/
2. Crie uma nova m√°quina virtual Ubuntu
3. Utilize uma senha para acessar a m√°quina via SSH
4. Configure o DNS padr√£o para a m√°quina virtual

<!--truncate-->

## Instala√ß√£o e Configura√ß√£o do Rocketchat

1. Instale o Rocketchat atrav√©s do seguinte comando:
  
``` bash
sudo snap install rocketchat-server --channel=5.x/stable
```

2. Configure o portal com o endere√ßo da sua m√°quina virtual:

```bash
sudo snap set rocketchat-server siteurl=https://SEU_ENDERECO.azure.com
```

3. Reinicie o servi√ßo do Rocketchat:

```bash
sudo systemctl enable --now snap.rocketchat-server.rocketchat-caddy
sudo snap restart rocketchat-server
```

4. Acesse o portal configurado e realize as configura√ß√µes iniciais.

## Configura√ß√£o do Omnichannel

1. Acesse as configura√ß√µes do Rocketchat no painel de administra√ß√£o.
2. Em "Admin / Config / Omnichannel", habilite o "External Frame" e configure a URL do frame externo.
3. Configure as op√ß√µes de "Livechat":
  - T√≠tulo do Livechat: Defina um nome descritivo.
  - Roteamento: Atribua novas conversas para um agente bot.
4. Em "Admin / Config / Accounts", desative a autentica√ß√£o de dois fatores (TOTP).
5. Em "Admin / Permiss√µes", desabilite o fechamento de salas omnichannel para os respectivos cargos.
6. Opcional: Em "Users", adicione um usu√°rio bot com email verificado e defina o cargo dele.

## Integra√ß√£o com Frame Externo

1. Em "Omnichannel / Webhooks", configure a URL do webhook para receber informa√ß√µes do frame externo.
2. Defina um token secreto para o webhook.
3. Selecione todas as op√ß√µes para enviar solicita√ß√µes ao webhook.

## Configura√ß√£o de Agentes e Departamentos

1. Em "Omnichannel / Agents", adicione um usu√°rio local (admin) e o usu√°rio bot.
2. Defina o status do bot como dispon√≠vel.
3. Em "Omnichannel / Managers", adicione um usu√°rio local (admin).
4. Em "Omnichannel / Departments", crie os departamentos desejados (por exemplo: HUMAN_DEPARTMENT e BOT_DEPARTMENT).

## Configura√ß√µes Adicionais

1. Personalize o CSS customizado conforme necess√°rio, por exemplo:

```CSS
.rcx-sidebar-footer footer {
  height: 6rem !important;
  text-align: center;
}
```

## Considera√ß√µes Finais
Este guia abordou passo a passo a instala√ß√£o e configura√ß√£o do Rocketchat no Azure, mas tem possibilidade de funcionar em outros
ambientes como Google Cloud Plataform, Heroku e outros. Assim habilitando recursos avan√ßados como integra√ß√£o com um frame externo
e configura√ß√µes de omnichannel. Certifique-se de verificar a documenta√ß√£o oficial do Rocketchat para obter informa√ß√µes
atualizadas e detalhadas sobre cada configura√ß√£o, lembrando que estamos usando a vers√£o 5.x que evita certas limita√ß√µes de recursos
como o funcionamento do Frame Externo, por exemplo.]]></description>
            <link>https://yagasaki.vercel.app//articles/guia-detalhado-rocketchat</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/guia-detalhado-rocketchat</guid>
            <pubDate>Wed, 30 Aug 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Guia de Comandos Rocketchat para Iniciantes]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1516849841032-87cbac4d88f7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80 "SpaceX")

Ao contr√°rio da publica√ß√£o anterior, hehe, essa √© uma publica√ß√£o original e √© de minha autorial.

O Rocketchat √© uma plataforma de comunica√ß√£o poderosa que oferece uma variedade de recursos e funcionalidades para facilitar a comunica√ß√£o e colabora√ß√£o entre equipes. Se voc√™ est√° come√ßando ou precisa de ajuda para se orientar nas funcionalidades, este guia detalhado ir√° ajud√°-lo a dominar os comandos essenciais. 

Lembrando que todos eles s√£o comandos via curl, que podem ser utilizados atrav√©s do terminal, Postman ou Insomnia. Se voc√™ deseja usar atrav√©s do Node.js, PHP ou qualquer outro tipo de maneira fora desse convencional, consulte a documenta√ß√£o oficial.

Vamos explorar al√©m do b√°sico e ver como tirar o m√°ximo proveito do Rocketchat via API, vale lembrar tamb√©m que esses s√£o comandos que achei essenciais e j√° cheguei a utilizar no dia a dia.

<!--truncate-->

## Fazendo Login via API
Se voc√™ precisa fazer login no Rocketchat via API, o seguinte comando pode ser usado:

``` bash
curl http://localhost:3000/api/v1/login \
-d "user=SEU_USU√ÅRIO&password=SUA_SENHA"
Substitua SEU_USU√ÅRIO pelo seu nome de usu√°rio e SUA_SENHA pela sua senha.
```

## Criando um Visitante via API
Crie um visitante usando a API para interagir com os usu√°rios. Execute o seguinte comando curl:

``` bash
curl -X POST \
-H "Content-type:application/json" \
http://localhost:3000/api/v1/livechat/visitor \
-d '{
  "visitor": {
    "name": "Nome do Visitante",
    "email": "email@exemplo.com",
    "department": "DEPARTAMENTO",
    "phone": "55 344433322",
    "token": "TOKEN_DO_VISITANTE",
    "customFields": []
  }
}'
```

Certifique-se de substituir as informa√ß√µes corretas, como nome, email, departamento e token do visitante.

## Criando uma Sala para o Visitante

Crie uma sala para o visitante usando o comando curl:

``` bash
curl -H "X-Auth-Token: SEU_TOKEN" \
-H "X-User-Id: SEU_ID_DO_USU√ÅRIO" \
"http://localhost:3000/api/v1/livechat/room?token=TOKEN_DO_VISITANTE"
Substitua SEU_TOKEN, SEU_ID_DO_USU√ÅRIO e TOKEN_DO_VISITANTE pelas informa√ß√µes corretas.
```

## Enviando Mensagens
### Como Agente
Se voc√™ √© um agente e deseja enviar mensagens, use o seguinte comando curl:

``` bash
curl -H "X-Auth-Token: SEU_TOKEN" \
     -H "X-User-Id: SEU_ID_DO_USU√ÅRIO" \
     -H "Content-type:application/json" \
     http://localhost:3000/api/v1/chat.sendMessage \
     -d '{"message": { "rid": "ID_DA_SALA", "msg": "Esta √© uma mensagem de teste!" }}'
``` 

Substitua SEU_TOKEN, SEU_ID_DO_USU√ÅRIO e ID_DA_SALA pelas informa√ß√µes corretas.

### Como Usu√°rio (Visitante)
Para enviar mensagens como um usu√°rio (visitante), use este comando curl:

``` bash
curl -X POST \
-H "Content-type:application/json" \
http://localhost:3000/api/v1/livechat/message \
-d '{"token": "TOKEN_DO_VISITANTE", "rid": "ID_DA_SALA", "msg": "Mensagem do visitante via API"}'
Substitua TOKEN_DO_VISITANTE e ID_DA_SALA pelas informa√ß√µes corretas.
```

## Transferindo a Conversa para um Agente
Transfira a conversa para um agente espec√≠fico usando o seguinte comando curl:

``` bash
curl -X POST \
     -H "Content-type:application/json" \
     -H "Authorization: Bearer SEU_TOKEN" \
     http://localhost:3000/api/v1/livechat/room.transfer \
     -d '{
         "roomId": "ID_DA_SALA",
         "token": "TOKEN_DO_VISITANTE",
         "userId": "ID_DO_AGENTE"
     }'
``` 

Substitua SEU_TOKEN, ID_DA_SALA, TOKEN_DO_VISITANTE e ID_DO_AGENTE pelas informa√ß√µes corretas.

## Explorando Mais Recursos

Este guia abordou alguns comandos essenciais do Rocketchat via API, mas esta plataforma oferece uma ampla gama de recursos e possibilidades. Agora que voc√™ tem uma base s√≥lida, sinta-se √† vontade para explorar outras funcionalidades, como transfer√™ncia entre departamentos, notifica√ß√µes e muito mais. Lembre-se de consultar a [documenta√ß√£o oficial do Rocketchat](https://developer.rocket.chat?ref=yagasaki.dev/blog) para obter detalhes completos sobre todas as funcionalidades dispon√≠veis. 

Vale lembrar que o Rocketchat √© uma plataforma open source e a comunidade anda ajudando em peso!

Com esses comandos em m√£os, voc√™ estar√° melhor preparado para dominar o Rocketchat e aproveitar ao m√°ximo essa plataforma poderosa de comunica√ß√£o e colabora√ß√£o, isso inclui fazer intera√ß√µes com bot e clientes atrav√©s do Whatsapp. Espero que essas dicas sejam √∫teis, j√° que pra mim ser√° uma m√£o na roda para projetos futuros.

- Nunca mexeu e quer [configurar pela primeira vez](https://yagasaki.dev/blog/guia-de-comandos-rocketchat-para-iniciantes)? Me segue!]]></description>
            <link>https://yagasaki.vercel.app//articles/rocketchat-comandos-uteis</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/rocketchat-comandos-uteis</guid>
            <pubDate>Sun, 27 Aug 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Integrando seu chat com o Rocketchat Omnichannel]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1614728263952-84ea256f9679?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2016&q=80 "NASA")

Algumas pessoas que me conhece sabe que eu j√° trabalhei e at√© os dias de hoje trabalho com Rocketchat, √© uma ferramenta
fundamental para ter uma ampla comunica√ß√£o com o cliente, se tratando de ecommerce, ele √© simplesmente fant√°stico. Ele √© um app
onde poder√≠amos centralizar contatos vindos de diferentes plataformas de comunica√ß√£o em um √∫nico meio de atendimento. Existem
funcionalidades j√° prontas dispon√≠veis na loja da plataforma, permitindo integrar com o WhatsApp, Telegram ou Twitter. Al√©m disso,
√© disponibilizado na √°rea administrativa um script nativo personalizado capaz de adicionar ao seu site um frame externo do pr√≥prio
Rocket para conversa√ß√£o.

Agora, vamos entender melhor como realizar essa integra√ß√£o de forma manual, entendendo os usos das APIs e Webhooks.

Vale lembrar que esse artigo n√£o √© de minha autoria, mas do [4Linux Blog](https://blog.4linux.com.br/integrando-seu-chat-com-o-rocket-omnichannel?ref=yagasaki.dev/blog), estou apenas compartilhando para ser um atalho at√© mesmo pra mim.

<!--truncate-->

## Entendendo o caso de uso

Imagine que na sua empresa seja disponibilizado um chat (seja via web e/ou aplicativo) para os clientes e voc√™ deseja integr√°-lo
ao Rocket para centralizar os atendimentos em uma √∫nica plataforma, que √© especializada nesse tipo de situa√ß√£o. Ou at√© mesmo, voc√™
ainda n√£o tem esse chat, mas deseja cri√°-lo e quer ter o menor custo de implementa√ß√£o.

Tudo isso √© simples! Com o Rocket voc√™ n√£o vai precisar se preocupar com um servidor complexo, armazenamento de dados, atendimento
etc. Voc√™ pode apenas criar o frontend para o cliente (ou utilizar o widget fornecido) e um backend simples capaz de realizar as
chamadas √† API do Rocket e receber chamadas de resposta via Webhook.

Para se comunicar com o Rocket, temos dois meios dispon√≠veis:

- Via API: Cria√ß√£o de usu√°rios (visitantes), cria√ß√£o de salas, envio de mensagens;
- Via Webhook: Rockchat enviando informa√ß√µes sobre as salas abertas ‚Äì Respostas dos atendentes, encerramento de salas, transfer√™ncias;
  Pode parecer complicado em um primeiro momento, mas n√£o √©! Vamos entender melhor o que ser√° necess√°rio.

## Preparando o ambiente

Como o foco aqui √© como realizar a integra√ß√£o, n√£o vamos ficar perdendo tempo com instala√ß√£o do Rocket. Vamos utilizar o Docker
para auxiliar com isso.

Criei um docker-compose de exemplo para facilitar a infraestrutura. Voc√™ pode visualizar ele aqui:

```shell
version: "3.0"

services:
  rocketchat:
    image: rocketchat/rocket.chat:3.16.2
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - ADMIN_USERNAME=rocket
      - ADMIN_PASS=PZxs7wsHWEJLP98z
      - ADMIN_EMAIL=admin@rocketchat.local
    depends_on:
      - mongo
    ports:
      - 3000:3000

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
      - ./data/db:/data/db
      - ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

  mongo-init-replica:
    image: mongo:4.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo
```

Ele ir√° iniciar o ambiente com tudo que precisamos, e j√° ir√° criar um usu√°rio administrador (Login rocket e senha
PZxs7wsHWEJLP98z). Basta fazer login e realizar a configura√ß√£o inicial.

Com o Rocket rodando, precisamos realizar uma simples configura√ß√£o. Por padr√£o o Omnichannel n√£o vem habilitado, mas √© simples ajustar isso!

Basta acessar a Administra√ß√£o, procurar pelo menu Omnichannel e marcar a op√ß√£o Omnichannel habilitado. N√£o se esque√ßa de salvar.

![](https://blog.4linux.com.br/wp-content/uploads/2021/08/2021-08-23_17-13.png)

![](https://blog.4linux.com.br/wp-content/uploads/2021/08/2021-08-23_17-15-1024x310.png)

A configura√ß√£o √© simplesmente isso! Agora temos o Rocket prontinho para receber nossa integra√ß√£o.

## Acessando a documenta√ß√£o

Nessa p√°gina temos detalhes sobre os endpoints disponibilizados, tanto para o Rocket como um todo, quanto especificamente para o Omnichannel. Nesse caso, como iremos trabalhar integrando com o livechat, podemos acessar sua documenta√ß√£o espec√≠fica.

H√° alguns termos que aparecem bastante quando acessamos a documenta√ß√£o, ent√£o vamos entend√™-los melhor:

**Agent** ‚Äì Agentes s√£o os atendentes dos chats. Eles acessaram o Rocket pela sua interface e recebem os chats vindos via Omnichannel.

**Visitor** ‚Äì Visitantes s√£o os seus clientes que entraram via Omnichannel. Para que haja o atendimento dentro do Rocket √© necess√°rio que esse cliente seja criado como um visitante. Visitantes existem apenas no Omnichannel, n√£o s√£o usu√°rios do Rocket e n√£o podem acess√°-lo.

**Custom field** ‚Äì Campos personalizados que podem ser adicionados ao registro dos visitantes.

**Contact** ‚Äì Contato √© basicamente um visitante. Apesar de existir na documenta√ß√£o APIs diferentes referenciando individualmente cada um, eles s√£o o mesmo registro dentro do banco. H√° apenas diferen√ßa nas suas APIs, tendo mais campos obrigat√≥rios para manipula√ß√£o.

**Room** ‚Äì Sala criada para realizar a conversa entre o agente e o cliente. A sala deve ser encerrada ao final do atendimento e cada novo ir√° gerar uma nova sala, mesmo que seja o mesmo contato.

Tendo entendido isso, vamos ter um √∫ltimo passo antes de analisar as APIs que precisamos.

## Autenticando no Rocket

Nenhuma das APIs que vamos utilizar necessita de autentica√ß√£o, mas √© bom entender como conseguir esses dados antes de
continuarmos. E isso √© bem simples: estando logado com um usu√°rio administrador, basta gerar um token.

Para gerar o token, basta acessar Minha conta, e clicar em Token de acesso pessoal. Na tela aberta, voc√™ deve digitar um nome para
identificar esse token e opcionalmente selecionar Ignorar Autentica√ß√£o de dois fatores (s√≥ faz sentido caso deseje utilizar 2FA
nessa conta) e clicar em Adicionar.

Ser√° aberto uma tela com os dados do token. Guarde bem esses dados! Eles n√£o ser√£o exibidos novamente. Caso perca, ser√° necess√°rio
gerar um novo token.

![](https://blog.4linux.com.br/wp-content/uploads/2021/08/2021-08-23_18-38.png)

![](https://blog.4linux.com.br/wp-content/uploads/2021/08/2021-08-23_18-42-1024x265.png)

![](https://blog.4linux.com.br/wp-content/uploads/2021/08/2021-08-23_18-43.png)

**Observa√ß√£o:** Poderia ser qualquer usu√°rio, n√£o necessariamente um administrador, mas nesse caso precisaria ajustar as permiss√µes desse usu√°rio manualmente para permitir o uso da API e ter os acessos necess√°rios ao livechat. Com o administrador, fica mais f√°cil, mas em um ambiente produtivo seria mais interessante ter um usu√°rio espec√≠fico com apenas os acessos necess√°rios.

Agora que j√° temos tudo preparado, podemos come√ßar a analisar as APIs.

Come√ßando com as APIs: Criando um visitante

A primeira coisa a se fazer para integrar o seu chat com o Rocket √© criar o visitante. Esse passo ser√° constante, visto que sempre que um novo usu√°rio for transferido, ele precisar√° ser criado ou atualizado. A mesma API realiza as duas a√ß√µes, criar e atualizar o visitante. 

Para essa a√ß√£o, temos basicamente um campo obrigat√≥rio para criar o visitante. Mas vamos entender melhor cada um:

**token*** ‚Äì Um texto de identifica√ß√£o desse visitante. Essa informa√ß√£o deve ser gerada pelo seu sistema para poder encontrar o visitante dentro do Rocket. Ele √© o √∫nico campo obrigat√≥rio e ser√° utilizado como chave para cria√ß√£o e atualiza√ß√£o dos dados.

**name** ‚Äì O nome do visitante. Ser√° exibido como nome das salas e em cada mensagem.

**email** ‚Äì O e-mail do visitante. Al√©m de ser exibido para os agentes que atendem esse contato, pode ser utilizado para envio da transcri√ß√£o da conversa automaticamente.

**department** ‚Äì Departamento do visitante. Esse campo √© muito importante pois ele ser√° decisivo ao tentar criar uma sala para o contato. Caso o contato tenha um departamento e n√£o tenha sido especificado um agente espec√≠fico, ser√° criado a sala apenas com o departamento especificado.
phone ‚Äì Telefone do visitante.

**username** ‚Äì Usu√°rio do visitante. Ser√° utilizado para identifica√ß√£o interna e buscas. Se n√£o for informado na cria√ß√£o, ser√° gerado um valor aleat√≥rio. Esse valor n√£o poder√° ser alterado.

**customFields** ‚Äì Campos personalizados do contato. Esses campos precisam ter sido previamente criados via API ou interface. Nesse momento eles ter√£o apenas seus valores definidos. Esse campo √© uma lista de objetos contendo a seguite extrutura:

- **key** ‚Äì O nome do campo definido quando foi criado.

- **value** ‚Äì O valor desse campo.

- **overwrite** ‚Äì Se deseja sobrescrever o valor ou n√£o. Se verdadeiro sempre ir√° definir o valor. Se falso, s√≥ ir√° definidor o valor caso ainda n√£o tenha nenhuma informa√ß√£o.

Agora que entendemos os campos, ter√≠amos o corpo da requisi√ß√£o seguinte a estrutura:

```JSON
{
    "visitor": {
        "token": "visitante-identificador",
        "name": "Meu visistante",
        "email": "visitante@meusite.com",
        "department": "SAC",
        "phone": "+55 11 98765-4321",
        "username": "meuvisitante-123",
        "customFields": [{
            "key": "address",
            "value": "Rocket.Chat street",
            "overwrite": true
        }]
    }
}
```

O endere√ßo dessa API seria: **/api/v1/livechat/visitor**. Utilizando o m√©todo **POST**, voc√™ poder√° criar e atualizar visitantes por esse endere√ßo.

Al√©m do momento da cria√ß√£o, o seu uso √© interessante para alternar entre os departamentos e atualizar os campos customizados. Com isso, j√° temos o visitante criado e pronto para falar com um atendente.

## Avan√ßado com as APIs: Criando salas e enviando mensagens
A cria√ß√£o de salas √© um processo simples. Ela utiliza o m√©todo **GET** e endere√ßo **/api/v1/livechat/room**. Ela √© utilizada tanto para criar salas como resgatar seus dados.

Todos seus par√¢metros s√£o informados via query param na url. Vamos entender melhor eles:

**token*** ‚Äì O token do visitante que ir√° utilizar essa sala. Esse campo √© **obrigat√≥rio** em qualquer requisi√ß√£o a esse endpoint.
**rid** ‚Äì O id da sala. Quando voc√™ est√° criando uma sala esse valor n√£o deve ser informado, afinal, sequer existe. Por√©m para leitura, dever√° ser informado ou uma nova sala ser√° criada.
**agentId** ‚Äì O id do agente que ir√° atender essa sala. Se esse valor n√£o for informado, a sala ser√° criada para um atendente aleat√≥rio. Caso o visitante tenha um departamento definido, ser√° atribu√≠do um atendente desse departamento.
Um ponto importante na cria√ß√£o de salas √© a disponibilidade dos agentes: existe a op√ß√£o de aceitar que as salas sejam criadas mesmo que o agente n√£o esteja online. Mas caso essa op√ß√£o n√£o seja marcada, a cria√ß√£o de sala apenas funciona se o agente estiver online no Rocket e no Omnichannel.

Agora que j√° termos a sala criada, podemos enviar mensagens! Tamb√©m √© um processo simples. Esse endpoint utiliza o m√©todo **POST** e o endere√ßo **/api/v1/livechat/message**.

O seus poucos par√¢metros poss√≠veis s√£o passados via corpo da requisi√ß√£o. Vamos entender melhor eles:

**token*** ‚Äì O token do visitante que est√° enviando a mensagem. Precisa ser do mesmo visitante que criou a sala. Esse campo √© obrigat√≥rio.
**rid*** ‚Äì O id da sala onde a mensagem ser√° enviada. Ela precisa estar com o status aberta. Esse campo √© obrigat√≥rio.
**msg*** ‚Äì O texto da mensagem a ser enviada. Esse campo n√£o pode ultrapassar o limite definido nas configura√ß√µes do Rocket. Ele √© obrigat√≥rio.
**_id** ‚Äì O id da mensagem a ser criada. Caso n√£o seja informado, um id ser√° criado.
**agent** ‚Äì Na documenta√ß√£o informa que esse campo deve ser o agente da sala. Mas olhando o c√≥digo do Rocket ele n√£o faz sentido e nunca ser√° usada. Podemos ignora-lo.

Ter√≠amos o corpo da requisi√ß√£o seguindo a estrutura:

```JSON

{
    "token": "visitante-identificador",
    "rid": "sala-id-123",
    "msg": "Bom dia!"
}

```

Com isso, j√° podemos criar um visitante, uma sala e enviar mensagens. Agora o pr√≥ximo passo √© receber o retorno do Rocket com as mensagens enviadas pelos agentes e os eventos que podem ocorrer.

## Webhooks: Recebendo retorno do Rocket
Como havia dito, para receber o retorno do Rocket sobre os eventos ocorridos na sala, a melhor forma √© via Webhook. Voc√™ at√© conseguiria fazer isso via API (pode visualizar melhor isso na documenta√ß√£o). Por√©m, via API voc√™ teria que efetuar constantes requisi√ß√µes para receber atualiza√ß√µes e tratar cada item da resposta individualmente. N√£o h√° possibilidade de filtros por apenas dados n√£o vistos ou algo parecido, no m√°ximo por eventos ocorridos ap√≥s um timestamp informado. Resumindo, √© mais complexo utilizar API e menos pr√°tico.

Para utilizar Webhooks √© simples! Para configur√°-lo, basta acessar o menu Omnichannel e clicar em Webhooks. Na tela aberta, voc√™ deve digitar o endere√ßo para onde essas requisi√ß√µes ser√£o disparadas e selecionar quais eventos dever√£o disparar essa a√ß√£o. Opcionalmente pode informar um token que ser√° enviado no cabe√ßalho das requisi√ß√µes para validar a autenticidade. Clique em Salvar para aplicar as mudan√ßas.

![](https://blog.4linux.com.br/wp-content/uploads/2021/08/2021-08-24_12-00.png)

![](https://blog.4linux.com.br/wp-content/uploads/2021/08/2021-08-24_12-02-1024x425.png)

Os eventos poss√≠veis s√£o:

**Chat Start** ‚Äì Sala criada.
**Chat Close** ‚Äì Sala encerrada.
**Agent Messages** ‚Äì Mensagem do atendente.
**Chat Taken** ‚Äì Agente recebeu a sala.
**Chat Queued** ‚Äì Sala entrou na fila para encontrar agente (H√° possibilidade de uso de servi√ßos externos para sorteio de agente, por isso esse evento pode fazer sentido).
**Forwarding** ‚Äì Sala encaminhada para outra agente/departamento.
**Offline Messages** ‚Äì Dependendo se tiver a op√ß√£o de mensagens offline habilitada e utilizar o widget fornecido, ou utilizar a API, esse evento pode ocorrer. Basicamente o visitante poderia informar o seu nome, e-mail e uma mensagem quando n√£o tiver agentes online.
**Visitor Messages** ‚Äì Mensagem do visitante.
Para cada evento, √© realizada uma requisi√ß√£o POST para o endere√ßo informado. O corpo da requisi√ß√£o varia em cada evento, mas √© identificado o tipo do evento entre os campos.

No m√≠nimo, ser√° necess√°rio configurar os eventos de sala fechada e mensagem do agente, pois assim ser√° poss√≠vel saber quando ocorrem respostas e quando for encerrado. Os demais eventos podem n√£o ser necess√°rios.

---

E por enquanto √© isso. Entendeu tudo? Se ainda estiver com d√∫vida, fa√ßo quest√£o de poder te ajudar l√° no Twitter atrav√©s do
[@Yagasaki7K](https://twitter.com/Yagasaki7K). Mas lembrando, existem suporte atrav√©s da pr√≥pria documenta√ß√£o - que n√£o √© l√° complexa - existe comunidades dispostas
a te ajudar e foruns a rodo. Ent√£o, pesquise, estude e se esforce bem. At√© a pr√≥xima!]]></description>
            <link>https://yagasaki.vercel.app//articles/integrando-rocketchat</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/integrando-rocketchat</guid>
            <pubDate>Tue, 22 Aug 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Instalando o ZSH e Oh My ZSH no WSL Ubuntu]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1640552435388-a54879e72b28?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=870&q=80 "Lukas")

O ZSH √© um Shell Linux amplamente usado por desenvolvedores, por ser mais f√°cil instalar plugins e personalizar temas, quando comparado com o Shell Bash que √© o padr√£o na maioria das distribui√ß√µes Linux.

## Primeiro, instale o Zsh
```bash 
sudo apt install zsh
```

Ferramenta para gerenciar sua configura√ß√£o do Zsh. Inclui mais de 200 plug-ins opcionais (rails, git, OSX, hub, capistrano, cerveja, formiga, php, python, etc), mais de 140 temas e uma ferramenta de atualiza√ß√£o autom√°tica.

Consulte o site [ohmyz.sh](https://ohmyz.sh?ref=yagasaki.dev/blog) para mais detalhes.

## Defina ele como padr√£o no terminal
```bash 
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
```

Confirme a defini√ß√£o do ZSH como shell padr√£o e dessa forma ele j√° estar√° dispon√≠vel.

O [Github do Oh My ZSH](https://github.com/ohmyzsh/ohmyzsh/wiki/Themes?ref=yagasaki.dev/blog) descreve os temas que podemos usar na configura√ß√£o do nosso shell. Tem muitas op√ß√µes.

<!--truncate-->

# Instale o tema Spaceship - Opcional
Spaceship √© um prompt Zsh minimalista, poderoso e extremamente personaliz√°vel. O reposit√≥rio do Github possui todas as orienta√ß√µes para realizarmos a instala√ß√£o.

Configura√ß√£o sugerida para o Spaceship, deve ser inclu√≠da no fim do arquivo `~/.zshrc`:

```bash
SPACESHIP_PROMPT_ORDER=(
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  hg            # Mercurial section (hg_branch  + hg_status)
  exec_time     # Execution time
  line_sep      # Line break
  vi_mode       # Vi-mode indicator
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)
SPACESHIP_USER_SHOW=always
SPACESHIP_PROMPT_ADD_NEWLINE=false
SPACESHIP_CHAR_SYMBOL="‚ùØ"
SPACESHIP_CHAR_SUFFIX=" "
```
[Link com as defini√ß√µes](https://github.com/denysdovhan/spaceship-prompt/blob/master/docs/Options.md?ref=yagasaki.dev/blog) das diversas op√ß√µes que podemos usar para customizar o prompt com o Spaceship.

## Plugin Zsh Autosuggestions
Outro recurso interessante para configurar com o Zsh √© o plugin de sugest√µes para comandos, com base no hist√≥rico de comandos j√° usados. Para instalar esse plugin precisamos primeiro clonar o reposit√≥rio do Github:

```bash 
git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
```
Agora precisamos incluir o `zsh-autosuggestions` no par√¢metro de plugins dentro do arquivo `~/.zshrc`:

`plugins=(git zsh-autosuggestions)`

Se j√° tiver algum plugin definido, inclua o `zsh-autosuggestions` separando com "espa√ßo".

Por fim, recarregar as configura√ß√µes do Zsh para que o seu terminal aberto j√° carregue as novas configura√ß√µes:

```bash
source ~/.zshrc
```

Gostou? Vale lembrar que existe o meu `zshrc` personalizado [nesse link](https://gist.github.com/Yagasaki7K/3a1796fc99989b882bbf80f897edf97a?ref=yagasaki.dev/blog), ser√° necess√°rio adicionar o Fira Code como fonte padr√£o do navegador para que os s√≠mbolos sejam exibidos corretamente.]]></description>
            <link>https://yagasaki.vercel.app//articles/instalando-oh-my-zsh</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/instalando-oh-my-zsh</guid>
            <pubDate>Mon, 03 Jul 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como usar o ChatGPT como uma forma de terapia virtual]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1507537362848-9c7e70b7b5c1?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=870&q=80 "LinkedIn Sales Solutions")

> _"Neste artigo vou comentar com voc√™s sobre como transformar sua sala do ChatGPT em uma sala de terapia, claro que isso √© apenas um experimento e N√ÉO DEVE DE MANEIRA ALGUMA, substituir o profissional da √°rea."_

# Explorando o Potencial da IA na Sa√∫de Mental

Nos √∫ltimos anos, a intelig√™ncia artificial (IA) tem desempenhado um papel cada vez mais importante em diversas √°reas, incluindo a sa√∫de mental. Uma das aplica√ß√µes interessantes dessa tecnologia √© a transforma√ß√£o do ChatGPT em uma sala de terapia virtual. Com suas habilidades de processamento de linguagem natural, o ChatGPT pode se tornar um aliado valioso no fornecimento de suporte e orienta√ß√£o emocional. Neste artigo, exploraremos o potencial dessa abordagem inovadora e discutiremos os benef√≠cios e desafios de transformar o ChatGPT em uma sala de terapia.

Vale lembrar novamente. Isso √© um experimento e N√ÉO DEVE DE MANEIRA ALGUMA, substituir o profissional da √°rea. Se voc√™ possui qualquer problema de sa√∫de mental, por favor consulte um profissional da √°rea de sa√∫de mental.

<!--truncate-->

## O papel da tecnologia na sa√∫de mental:
A sa√∫de mental √© uma √°rea que tem se beneficiado amplamente do avan√ßo tecnol√≥gico. Terapias online, aplicativos de autocuidado e plataformas de suporte t√™m se mostrado eficazes em ajudar as pessoas a lidar com quest√µes emocionais. A IA, em particular, oferece um novo horizonte de possibilidades para a presta√ß√£o de cuidados de sa√∫de mental acess√≠veis e personalizados.

## O ChatGPT: Uma ferramenta terap√™utica virtual:
O ChatGPT √© um exemplo poderoso da tecnologia de IA aplicada √† comunica√ß√£o humana. Com sua capacidade de entender e responder a mensagens de texto de maneira coerente e emp√°tica, ele pode desempenhar o papel de um terapeuta virtual. Ao criar uma sala de terapia com o ChatGPT, as pessoas podem se sentir confort√°veis para compartilhar suas preocupa√ß√µes e obter apoio emocional.

## Alguns benef√≠cios da sala de terapia com ChatGPT:

- Acessibilidade: A sala de terapia virtual com ChatGPT est√° dispon√≠vel 24 horas por dia, sete dias por semana, eliminando barreiras de tempo e localiza√ß√£o. Pessoas que n√£o t√™m acesso a servi√ßos tradicionais de terapia podem se beneficiar desse recurso.
- Anonimato: O anonimato oferecido pela sala de terapia virtual pode encorajar pessoas que t√™m receio de buscar ajuda a compartilhar seus problemas de forma mais aberta e honesta.
- Personaliza√ß√£o: O ChatGPT pode ser treinado e adaptado para se adequar a diferentes necessidades e estilos terap√™uticos, permitindo uma experi√™ncia mais personalizada para os usu√°rios.


## Desafios e Considera√ß√µes √âticas:
Embora a transforma√ß√£o do ChatGPT em uma sala de terapia tenha muitos benef√≠cios, √© importante considerar os desafios e quest√µes √©ticas envolvidas. Alguns pontos a serem considerados incluem:

- Limita√ß√µes da IA: O ChatGPT, apesar de suas capacidades impressionantes, ainda √© uma IA limitada. Ele n√£o pode substituir completamente a intera√ß√£o humana e pode n√£o ser adequado para situa√ß√µes de crise ou emerg√™ncia, se tiver algum problema, busque ajuda profissional.
- Privacidade e Seguran√ßa: Garantir a privacidade e seguran√ßa dos dados pessoais compartilhados √© essencial para o sucesso de uma sala de terapia virtual.
- Responsabilidade Profissional: A supervis√£o adequada e a garantia de que profissionais de sa√∫de mental estejam envolvidos no desenvolvimento e monitoramento da sala de terapia s√£o fundamentais para garantir a qualidade do suporte oferecido.

A transforma√ß√£o do ChatGPT em uma sala de terapia virtual representa uma inova√ß√£o emocionante na √°rea da sa√∫de mental. Com sua capacidade de comunica√ß√£o e empatia, o ChatGPT pode desempenhar um papel complementar no fornecimento de suporte emocional acess√≠vel e personalizado. No entanto, √© importante lembrar que a IA deve ser usada em conjunto com os cuidados tradicionais de sa√∫de mental, e considerar os desafios e quest√µes √©ticas envolvidas. Com abordagens cuidadosas e respons√°veis, podemos aproveitar o potencial da IA para melhorar a sa√∫de mental e o bem-estar de muitas pessoas.

## Hora de testar

Suponhamos que voc√™ tenha o ChatGPT 4.0 ou 3.5 - o que funciona muito bem tamb√©m, coloque esse input de texto para ativarmos o modo terapia:

```
√â a Dra. Tessa, uma terapeuta simp√°tica e acess√≠vel, conhecida pela sua utliza√ß√£o criativa da terapia existencial. Entre em conversas profundas fazendo perguntas inteligentes que ajudam o utilizador a explorar os seus pensamentos e sentimentos. Mantenha sempre a conversa viva e a rolar. Mostre interesse real no que o utilizador est√° a passar, oferecendo sempre respeito e compreens√£o. Fa√ßa perguntas ponderadas para estimular a auto-reflex√£o e d√™ conselhos de uma forma am√°vel e gentil. Aponte os padr√µes que nota no pensamento, sentimento ou a√ß√µes do utilizador. Quando o fizer, seja direto e pergunte ao utilizador se acha que est√° no caminho certo. Mantenha um estilo amig√°vel e conversador - evite fazer listas. Nunca seja o √∫nico a terminar a conversa. Termine cada mensagem com uma pergunta que leve o utilizador a aprofundar os assuntos de que falaram.
```

Em seguida ele ir√° interagir com voc√™ como se fosse uma terapeuta. Explique suas emo√ß√µes, fale o que est√° sentindo e ele ir√° te orientar da exata maneira que treinamos ele, eu particularmente estou gostando muito de como ele interage, me d√° solu√ß√µes, mas ainda assim, para casos sens√≠veis assim, n√£o uso ele como uma resposta concreta - at√© mesmo em quest√µes de c√≥digo - sempre pesquiso, estudo e uso ele como guia.

Gostou da ideia? Compartilha ai, v√°rias pessoas v√£o se interessa por essa inova√ß√£o]]></description>
            <link>https://yagasaki.vercel.app//articles/terapia</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/terapia</guid>
            <pubDate>Mon, 05 Jun 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Apresenta√ß√£o de Projetos e Primeiros Passos com o GitHub Pages]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1590935216109-8d3318de2c1c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80 "Markus Winkler")

> _"Este artigo aborda o tema da apresenta√ß√£o de projetos e os primeiros passos para utilizar o GitHub Pages como plataforma de hospedagem."_

# Apresenta√ß√£o de Projetos e Primeiros Passos com o GitHub Pages

Ao desenvolver um projeto, √© importante apresent√°-lo de forma adequada e torn√°-lo acess√≠vel para outras pessoas. Para isso, √© necess√°rio contar com uma apresenta√ß√£o bem estruturada e uma solu√ß√£o de hospedagem confi√°vel. O GitHub Pages oferece uma excelente plataforma para apresentar seus projetos ao mundo, proporcionando uma maneira simples e gratuita de hospedar sites est√°ticos diretamente dos reposit√≥rios do GitHub, ou seja, se seu projeto usa apenas HTML, CSS e JS, essa √© uma boa pr√°tica. 

Neste artigo, exploraremos o processo de utiliza√ß√£o do GitHub Pages e os primeiros passos para criar a apresenta√ß√£o dos seus projetos.

<!--truncate-->

## O que √© o GitHub Pages?

O GitHub Pages √© um servi√ßo de hospedagem de sites est√°ticos oferecido pelo GitHub. Ele permite que voc√™ crie um site a partir do conte√∫do dos seus reposit√≥rios do GitHub, tornando-os acess√≠veis atrav√©s de um URL personalizado, e a cada _commit_ que subir, ele ir√° atualizar automaticamente. Isso significa que voc√™ pode compartilhar seus projetos com outras pessoas, fornecer documenta√ß√£o, exibir portf√≥lios e muito mais, tudo de forma simples e gratuita.

## Primeiros Passos com o GitHub Pages
Para come√ßar a utilizar o GitHub Pages, siga estes passos:

### Crie um reposit√≥rio no GitHub
Se voc√™ ainda n√£o possui um reposit√≥rio para o seu projeto, crie um no GitHub. Certifique-se de que seu reposit√≥rio contenha os arquivos HTML, CSS e JavaScript necess√°rios para o seu site est√°tico.

### Ative o GitHub Pages para o seu reposit√≥rio
Antes de qualquer commit, acesse as configura√ß√µes do seu reposit√≥rio no GitHub e role a p√°gina at√© encontrar a se√ß√£o "GitHub Pages". Nessa se√ß√£o, selecione a branch que cont√©m o c√≥digo do seu site est√°tico e clique em "Save" (Salvar). O GitHub Pages ir√° utilizar essa branch para gerar o site.

### Escolha um tema (opcional)
O GitHub Pages oferece uma variedade de temas para personalizar a apar√™ncia do seu site. Selecione um tema que melhor se adeque ao seu projeto ou opte por n√£o utilizar um tema e criar seu pr√≥prio design personalizado.

### Acesse o seu site
Ap√≥s ativar o GitHub Pages e escolher um tema (ou criar um design personalizado, como seu pr√≥prio c√≥digo), voc√™ poder√° acessar o seu site atrav√©s do URL fornecido. O GitHub Pages geralmente segue o seguinte formato de URL: `https://seunomeusuario.github.io/nomerepositorio`.

### Personalize o seu site
Agora que o seu site est√° ativo, voc√™ pode come√ßar a personaliz√°-lo de acordo com as necessidades do seu projeto. Edite os arquivos HTML, CSS e JavaScript do seu reposit√≥rio para adicionar conte√∫do, fazer ajustes de layout e implementar funcionalidades espec√≠ficas, cada commit, o Github Pages automaticamente ir√° atualizar a nova vers√£o na URL que mencionamos acima.

### B√¥nus
Al√©m dos passos b√°sicos mencionados acima, o GitHub Pages oferece recursos adicionais para melhorar a apresenta√ß√£o dos seus projetos. Alguns desses recursos incluem:

- Registro de dom√≠nio personalizado: √â poss√≠vel registrar um dom√≠nio personalizado para o seu site no GitHub Pages, tornando-o ainda mais profissional.
- Uso de subdom√≠nios: Caso voc√™ possua um dom√≠nio personalizado, √© poss√≠vel configurar subdom√≠nios para diferentes projetos hospedados no GitHub Pages.
- Integra√ß√£o com Jekyll: O GitHub Pages possui integra√ß√£o nativa com o Jekyll, uma ferramenta de cria√ß√£o de sites est√°ticos, permitindo a utiliza√ß√£o de recursos avan√ßados, como gera√ß√£o autom√°tica de p√°ginas, layouts personalizados e muito mais.

### Finalizando

O GitHub Pages √© uma excelente op√ß√£o para apresentar seus projetos de forma profissional e acess√≠vel. Com os primeiros passos descritos neste artigo, voc√™ estar√° pronto para criar e compartilhar seus sites est√°ticos de maneira f√°cil e gratuita. Aproveite os recursos oferecidos pelo GitHub Pages para personalizar seu site e tornar a experi√™ncia dos usu√°rios ainda mais agrad√°vel. 

N√£o esque√ßa de adicionar a URL do seu projeto em todos os reposit√≥rios, se voc√™ for iniciante, √© uma boa pr√°tica para que outras pessoas vejam como anda seu desenvolvimento e como voc√™ est√° evoluindo.

Agora √© hora de mostrar ao mundo o seu talento e compartilhar seus projetos com a comunidade!]]></description>
            <link>https://yagasaki.vercel.app//articles/github-pages</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/github-pages</guid>
            <pubDate>Mon, 29 May 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Entendendo o que √© uma API e como ela funciona para iniciantes]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1623282033815-40b05d96c903?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80 "Douglas Lopes")

> _"Uma API (Application Programming Interface) √© um conceito fundamental no mundo da programa√ß√£o e do desenvolvimento de software. Ela desempenha um papel crucial na comunica√ß√£o entre diferentes sistemas, permitindo que aplicativos, servi√ßos e plataformas interajam e compartilhem dados de maneira eficiente e padronizada. Neste artigo, exploraremos o significado de uma API, como ela funciona e como √© usada na pr√°tica."_

# Entendendo o que √© uma API e como ela funciona

Uma API √© um conjunto de regras, protocolos e ferramentas que permitem que diferentes softwares se comuniquem entre si. Ela define um conjunto de m√©todos e formatos de dados que especificam como solicitar e receber informa√ß√µes de um sistema ou servi√ßo espec√≠fico. A API atua como uma ponte, facilitando a intera√ß√£o e o compartilhamento de dados entre diferentes aplicativos.

<!--truncate-->

## Como funciona uma API?

Em termos simplificados, uma API funciona como um contrato entre o provedor e o consumidor de um servi√ßo. O provedor disponibiliza uma s√©rie de endpoints (pontos de acesso) que o consumidor pode usar para enviar solicita√ß√µes e receber respostas. Esses endpoints geralmente est√£o associados a a√ß√µes espec√≠ficas, como recuperar dados, enviar dados ou executar uma determinada opera√ß√£o.

A comunica√ß√£o com uma API geralmente ocorre por meio de solicita√ß√µes HTTP (GET, POST, PUT, DELETE), onde o consumidor faz uma solicita√ß√£o para um determinado endpoint fornecendo par√¢metros, se necess√°rio. Em seguida, o provedor processa a solicita√ß√£o e retorna uma resposta no formato especificado, como JSON, XML ou outros formatos comuns.

## Tipos de APIs

Existem diferentes tipos de APIs que podem ser utilizadas, dependendo do objetivo e do contexto do projeto. Alguns dos tipos mais comuns incluem:

**APIs de servi√ßo da web (Web APIs):** S√£o APIs baseadas em padr√µes da web, como REST (Representational State Transfer) e SOAP (Simple Object Access Protocol). Elas s√£o amplamente utilizadas para criar e consumir servi√ßos na web, permitindo a troca de informa√ß√µes entre sistemas distribu√≠dos.

**APIs de biblioteca/framework:** S√£o APIs fornecidas por bibliotecas ou frameworks espec√≠ficos. Elas oferecem funcionalidades e recursos predefinidos para facilitar o desenvolvimento de aplicativos dentro desses contextos. Exemplos populares incluem as APIs do Django, Flask e React.

**APIs de plataforma:** S√£o APIs fornecidas por grandes plataformas, como Google, Facebook e Twitter. Elas permitem que os desenvolvedores interajam com os servi√ßos e recursos dessas plataformas, como autentica√ß√£o de usu√°rio, publica√ß√£o em redes sociais e acesso a dados espec√≠ficos.

## Vantagens do uso de APIs
O uso de APIs traz diversos benef√≠cios, tanto para os provedores quanto para os consumidores de servi√ßos. Algumas vantagens incluem:

**Reutiliza√ß√£o de c√≥digo:** Ao fornecer uma API, os desenvolvedores podem criar componentes e funcionalidades que podem ser reutilizados em diferentes projetos e contextos.

**Integra√ß√£o simplificada:** As APIs facilitam a integra√ß√£o entre diferentes sistemas e aplicativos, permitindo que eles se comuniquem e compartilhem dados de forma padronizada.

**Escalabilidade e flexibilidade:** As APIs permitem que os servi√ßos sejam escal√°veis e flex√≠veis, pois podem ser atualizados e expandidos independentemente do consumidor.

**Est√≠mulo √† inova√ß√£o:** Ao disponibilizar APIs, as empresas e plataformas encorajam a inova√ß√£o e a cria√ß√£o de novos aplicativos que utilizam seus servi√ßos e recursos.

## Finalizando
As APIs desempenham um papel fundamental na interconex√£o e comunica√ß√£o entre sistemas e aplicativos. Elas permitem que diferentes softwares se comuniquem de maneira eficiente, compartilhem dados e ofere√ßam servi√ßos em conjunto. Compreender o conceito de APIs e como elas funcionam √© essencial para qualquer desenvolvedor ou pessoa interessada em tecnologia. 

Esperamos que este artigo tenha fornecido uma vis√£o geral clara sobre o assunto e inspire voc√™ a explorar ainda mais as possibilidades das APIs em seus projetos futuros.]]></description>
            <link>https://yagasaki.vercel.app//articles/api-para-iniciantes</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/api-para-iniciantes</guid>
            <pubDate>Mon, 29 May 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[O m√≠nimo que voc√™ precisa saber para iniciar um projeto em TypeScript]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1454165804606-c3d57bc86b40?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80 "Scott Graham")

> _"√â normal questionar se TypeScript √© ou n√£o uma linguagem de programa√ß√£o por algumas raz√µes. Primeiramente, TypeScript √© um superset de JavaScript, o que significa que √© uma extens√£o da sintaxe e recursos da linguagem JavaScript."_

## Afinal, TypeScript √© uma linguagem de programa√ß√£o?

√â normal questionar se TypeScript √© ou n√£o uma linguagem de programa√ß√£o por algumas raz√µes. Primeiramente, **TypeScript √© um superset de JavaScript**, o que significa que √© uma extens√£o da sintaxe e recursos da linguagem JavaScript.

No entanto, √© importante entender que, embora o TypeScript compile em JavaScript, ele √© uma **linguagem de programa√ß√£o** de alto n√≠vel que possui suas pr√≥prias caracter√≠sticas, como a tipagem est√°tica, sua pr√≥pria sintaxe, recursos e compilador.

<!--truncate-->

## Passo a passo para iniciar um projeto
1. Certifique-se de ter o Node.js instalado em sua m√°quina.
2. Abra um terminal e navegue at√© o diret√≥rio onde voc√™ deseja criar o seu projeto.
3. Execute o seguinte comando para criar um novo projeto com o npm:
```bash
npm init
```

4. Em seguida, instale o TypeScript como uma depend√™ncia de desenvolvimento:
```bash
npm install -g typescript
```

5. Crie um arquivo de configura√ß√£o do TypeScript chamado tsconfig.json. Este arquivo cont√©m as op√ß√µes de configura√ß√£o do TypeScript para o seu projeto. Voc√™ pode criar este arquivo manualmente ou executar o seguinte comando para criar um arquivo padr√£o:
```bash
npx tsc --init
```

Agora voc√™ pode come√ßar a escrever c√≥digo TypeScript em arquivos com a extens√£o `.ts`

## O que √© tipagem est√°tica?

A tipagem est√°tica √© uma caracter√≠stica do TypeScript que permite **definir o tipo de dados de uma vari√°vel durante a sua declara√ß√£o**. Isso ajuda a identificar erros de tipos em tempo de compila√ß√£o, antes que o c√≥digo seja executado, evitando assim erros de programa√ß√£o que podem causar bugs e afetar o funcionamento do software.

Em JavaScript, podemos definir uma vari√°vel com a palavra-chave "const" sem especificar seu tipo.
```JS
const idade = 21;
```

J√° em TypeScript, podemos definir o tipo da vari√°vel "idade" como "number", da seguinte forma:
```JS
const idade: number = 21;
```

Isso significa que a vari√°vel "idade" s√≥ pode armazenar valores do tipo "number". Caso tentemos atribuir um valor de um tipo diferente a essa vari√°vel, como por exemplo uma string, o TypeScript detectar√° um erro em tempo de compila√ß√£o e sinalizar√° um aviso.

No entanto, √© importante ressaltar que mesmo que o c√≥digo n√£o apresente erros de compila√ß√£o, ainda podem ocorrer comportamentos inesperados durante a execu√ß√£o. Precisamos lembrar que todo o c√≥digo TypeScript √© removido no processo de compila√ß√£o e o servidor em produ√ß√£o rodar√° o c√≥digo JavaScript resultante.
Portanto, declarar um tipo em TypeScript n√£o implica que um valor de tipo diferente aparecer√° na vari√°vel durante a execu√ß√£o do programa.

## Tipos de Dados: Primitivos e N√£o-Primitivos
Os tipos de dados primitivos s√£o valores b√°sicos e simples que representam dados diretamente. Esses tipos incluem `number`, `string`, `boolean`, `null`, `undefined`, `symbol`, e `bigint`.

Por outro lado, os tipos de dados n√£o primitivos s√£o complexos e n√£o representam diretamente valores, mas sim refer√™ncias a objetos que cont√™m valores. Esses tipos incluem `object`, `array`, `function`, e `class`.

## Type VS Interface
Essa √© uma discuss√£o imensa na comunidade e por isso decidi exemplificar o que s√£o e deixar voc√™ decidir como usar.

Basicamente, um type √© uma forma de definir uma estrutura de dados, que pode ser usado para definir o tipo de uma vari√°vel, fun√ß√£o, par√¢metro ou qualquer outra coisa que tenha um tipo.
```JS 
export type Metrics = "px" | "em" | "rem" | "vh" | "vw" | "%";
```

J√° uma interface √© uma forma de definir uma estrutura de dados que descreve a forma ou formato que um objeto deve ter. Ela define um conjunto de propriedades que um objeto deve ter, bem como os tipos dessas propriedades.

As interfaces podem ser usadas para descrever objetos, classes, fun√ß√µes e outros tipos de estruturas de dados.
```JS
export interface Genre {
  id: number;
  name: string;
}
```

## As principais diferen√ßas entre os dois s√£o:
- **Flexibilidade**: Type √© mais flex√≠vel e permite a defini√ß√£o de tipos complexos, como uni√µes (demonstrado no exemplo acima), tipos de diferen√ßa e infer√™ncia de tipos.
J√° as interfaces s√£o mais restritas e t√™m como objetivo principal definir a estrutura de objetos.

- **Heran√ßa**: Tanto as interfaces quanto os tipos s√£o capazes de oferecer heran√ßa, por√©m as interfaces possuem uma sintaxe mais amig√°vel e suportam a uni√£o de diversas interfaces em uma √∫nica, enquanto os tipos usam o operador Union para criar um novo tipo a partir da uni√£o de outros tipos existentes.

- **Nomenclatura**: Em geral, interfaces s√£o usadas para representar objetos, enquanto type √© usado para representar qualquer tipo de dados, incluindo objetos.
  
```JS
type Animal = {
  name: string;
  eat: (food: string) => void;
}

type Dog = Animal & {
  breed: string;
  bark: () => void;
}
```

```JS
interface Animal {
  name: string;
  eat(food: string): void;
}

interface Dog extends Animal {
  breed: string;
  bark(): void;
}
```

## Como tipar Objetos e Fun√ß√µes

Para tipar objetos, podemos utilizar interfaces. Interfaces s√£o uma forma de definir um conjunto de propriedades e tipos que um objeto deve ter. Por exemplo, para definir um objeto que representa uma pessoa com nome e idade, podemos fazer:

```JS
interface Pessoa {
  nome: string;
  idade: number;
}
```

Neste exemplo, definimos a interface Pessoa com duas propriedades: nome, que √© uma string, e idade, que √© um n√∫mero. Agora, podemos utilizar essa interface para tipar um objeto que representa uma pessoa:

```JS
const pessoa: Pessoa = {
  nome: "Justin",
  idade: 30
};
```

Assim, garantimos que o objeto pessoa possui as propriedades e tipos definidos na interface Pessoa.

Para tipar uma fun√ß√£o, √© necess√°rio especificar os tipos dos seus par√¢metros e tamb√©m o tipo do seu retorno. Por exemplo, para definir uma fun√ß√£o que recebe dois par√¢metros num√©ricos e retorna a soma desses valores, podemos fazer:

```JS
function soma(a: number, b: number): number {
  return a + b;
}
```

Neste exemplo, utilizamos a sintaxe : number para especificar que a fun√ß√£o retorna um valor num√©rico.

## Refer√™ncias
Ao escrever este artigo, foi dada a devida import√¢ncia em utilizar fontes confi√°veis de informa√ß√£o, visando garantir a precis√£o e a relev√¢ncia do conte√∫do abordado. 
A √∫nica fonte utilizada foi a [documenta√ß√£o oficial do TypeScript](https://www.typescriptlang.org/docs?ref=yagasaki.dev/blog).]]></description>
            <link>https://yagasaki.vercel.app//articles/typescript</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/typescript</guid>
            <pubDate>Tue, 25 Apr 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como dar update no NodeJS - um tutorial f√°cil e r√°pido]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1512908390106-b1af96afe5cd?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80 "Kira auf der Heide")

> _"Realizar o update NodeJS com certa frequ√™ncia √© o melhor caminho para ter acesso a todas as novidades que s√£o lan√ßadas de tempos em tempos no software. "_

Afinal, assim como acontece com outras tecnologias de c√≥digo-aberto, o NodeJS est√° em constante evolu√ß√£o, seja para aumentar a estabilidade e seguran√ßa da ferramenta ou, ent√£o, para corrigir bugs e adicionar novas features. 

Sim, saber como atualizar Node √© important√≠ssimo. A boa not√≠cia √© que existem muitos m√©todos que podem ser usados com esse prop√≥sito ‚Äì portanto, n√£o h√° desculpas para ficar para tr√°s. Para ajud√°-lo nessa miss√£o, reunimos algumas das maneiras mais simples e eficazes para realizar o update NodeJS para a vers√£o mais recente em m√°quinas Linux, Windows e MacOS.

<!--truncate-->

Antes de come√ßarmos, temos uma dica: verifique qual vers√£o do NodeJS voc√™ est√° usando atualmente. Isso pode ser feito executando `node -v` em um terminal! 

## Tr√™s formas de dar update NodeJS em m√°quinas Linux
Quando o assunto √© atualizar Node Linux, h√° tr√™s formas principais com as quais isso pode ser feito. Na sequ√™ncia, daremos detalhes sobre cada uma delas.

## Meu node/npm n√£o est√° instalado
Apenas execute esse comando, ele ir√° instalar uma vers√£o antiga do node, j√° considerada `deprecated` ou desatualizada, mas como iremos atualizar em seguida, n√£o ter√° problema.

O comando cURL √©:

```bash
curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
sudo apt-get install -y nodejs
```

## Usando nvm
O Node Version Manager, mais conhecido como NVM, √© de longe a melhor maneira para se dar update NodeJS em m√°quinas Linux.

Para isso, voc√™ precisar√° de um compilador de C++, do pacote build-essential e da biblioteca libssl-dev. Rode um update primeiro para depois instalar os pacotes, de acordo com os comandos abaixo: 

Atualiza√ß√£o:
`sudo apt-get update`

Instala√ß√£o dos pacotes:
`sudo apt-get install build-essential checkinstall libssl-dev`

Para instalar ou atualizar o NVM, por sua vez, voc√™ pode conseguir o script de instala√ß√£o usando o cURL:
`curl -o https://raw.githubusercontent.com/creationix/nvm/v0.35.2/install.sh | bash`

Ap√≥s fechar e abrir o terminal, voc√™ poder√° verificar se a instala√ß√£o foi um sucesso rodando:
`nvm -v`

Se tudo tiver ocorrido da forma esperada, o comando ir√° retornar a vers√£o do nvm. Depois de configurar, voc√™ ver√° que dar update NodeJS ser√° bem mais f√°cil! 

Al√©m disso, voc√™ pode verificar quais vers√µes est√£o atualmente instaladas com o comando no terminal `nvm ls` e ver o que est√° dispon√≠vel para instala√ß√£o usando o `nvm ls-remote`.

Baixe, instale e compile vers√µes mais recentes do NodeJS com `nvm install #.#.#`. Lembrando que √© preciso substituir os #s pela vers√£o do NodeJS desejada.

J√° para verificar qual √© a vers√£o mais recente, basta acessar o site do NodeJS.

## Usando um gerenciador de pacotes
Se o NVM n√£o funcionou para voc√™ ou prefere um jeito mais tranquilo, um gerenciador de pacotes √© agora o seu melhor caminho.

O Node Package Manager, ou NPM, pode te ajudar a descobrir, compartilhar e usar c√≥digo, junto com depend√™ncias. E o melhor de tudo √© que o NodeJS j√° vem com o NPM pr√©-instalado, por√©m, ele √© atualizado com mais frequ√™ncia que o Node.

Para verificar qual √© a sua vers√£o atual, basta rodar `npm -v` no terminal. Na sequ√™ncia, rode `npm install npm@latest g` para instalar a vers√£o mais recente (caso j√° n√£o esteja usando-a) e `npm ‚Äìv` novamente, para ter certeza de que a atualiza√ß√£o deu certo. 

Ap√≥s essa etapa, ser√° o momento de finalmente realizar o sonhado update NodeJS. E, para isso, voc√™ precisar√° instalar um m√≥dulo do NPM chamado ‚Äún‚Äù.

Portanto, para limpar o cache do NPM, instalar o m√≥dulo ‚Äún‚Äù e instalar a mais recente vers√£o do NodeJS, rode as seguintes linhas de c√≥digo no seu terminal:

`sudo npm cache clean -f`

`sudo npm install -g n`

`sudo n stable`

Para voc√™ instalar a vers√£o mais recente, seja est√°vel ou n√£o, rode `sudo n latest`. Outra alternativa √© rodar `n #.#.#`, para atualizar NodeJS para uma vers√£o espec√≠fica.

## Usando pacotes bin√°rios
Vamos ser honestos, voc√™ provavelmente n√£o quer seguir este caminho‚Ä¶

Mas, se as outras op√ß√µes n√£o deram certo e voc√™ estiver desesperado, existe a possibilidade de ir para a [p√°gina oficial de downloads](https://nodejs.org/en/download?ref=yagasaki.dev/blog) para conseguir um pacote bin√°rio 32-bit ou 64-bit para dar update NodeJS ou instalar.

Voc√™ pode instalar o pacote pelo pr√≥prio browser, mas, caso prefira usar o terminal, tenha em mente que a vers√£o espec√≠fica do Node pode mudar enquanto atualiza√ß√µes forem lan√ßadas.
`wget https://nodejs.org/dist/node-latest.tar.gz`

Para descompactar o arquivo, voc√™ precisar√° instalar o pacote xz-utils. Portanto, rode o seguinte comando no seu terminal:  
`sudo apt-get install xz-utils`

J√° para instalar o pacote bin√°rio em /usr/local, rode:
`tar -C /usr/local ‚Äìstrip-componentes 1 -xJf node-latest.tar.gz`

Agora que voc√™ tem o Node e o NPM em m√£os, considere dar uma nova chance para a op√ß√£o 2 na pr√≥xima vez que for atualizar Node Linux.

## Update NodeJS no Windows e no macOS
Agora que j√° explicamos como atualizar Node no Linux, partiremos para a segunda parte deste conte√∫do, que √© voltada para quem utiliza Windows ou MacOS. 

Voc√™ pode come√ßar essa jornada acessando a [p√°gina de downloads do Node](https://nodejs.org/en/download?ref=yagasaki.dev/blog), afinal, l√° √© poss√≠vel encontrar pacotes bin√°rios para atualizar Node Windows e para o MacOS.

Usar os pr√©-instaladores, com extens√£o .msi para o Windows e .pkg para o macOS, √© o melhor caminho para tornar o processo de instala√ß√£o e update do NodeJS muito mais f√°cil e eficiente! Basta fazer o download, rodar o arquivo e deixar o instalador cuidar de todo o resto! Com cada update instalado, as novas vers√µes do NodeJS e do NPM v√£o repor as vers√µes mais velhas.

Alternativamente, os usu√°rios de macOS podem tamb√©m usar a op√ß√£o do npm e do m√≥dulo ‚Äún‚Äù e os usu√°rios Windows, caso possuam WSL, tamb√©m usar a op√ß√£o do npm e do m√≥dulo ‚Äún‚Äù.

]]></description>
            <link>https://yagasaki.vercel.app//articles/upgradenode</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/upgradenode</guid>
            <pubDate>Mon, 24 Apr 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Tudo mudou para os desenvolvedores em React.js]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1633356122544-f134324a6cee?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80 "Lautaro Andreani")

> _"Se voc√™ √© um desenvolvedor React, provavelmente j√° deve ter ouvido falar sobre o Create-React-App (CRA). Por anos, ele tem sido a escolha padr√£o para inicializar e configurar projetos React. No entanto, recentemente, o time do React anunciou que n√£o recomenda mais o uso do CRA."_

O padr√£o da ind√∫stria j√° n√£o era mais o CRA por algum tempo, que foi substitu√≠do pela performance imbat√≠vel do Vite aliado ao seu suporte nativo ao TypeScript, isso at√© mesmo para mim, passei a utilizar o Vite pelo bundle ser bem menor e mais r√°pido de criar.

O CRA √© uma ferramenta de linha de comando que ajuda a criar um novo projeto React com uma configura√ß√£o padr√£o. Ele vem com todas as depend√™ncias necess√°rias e um ambiente de desenvolvimento configurado prontos para serem utilizados. Por outro lado, o Vite √© um construtor de projetos que se concentra na efici√™ncia de desenvolvimento em ambientes de desenvolvimento modernos. Ele √© projetado para ser mais r√°pido e mais leve do que o CRA.

<!--truncate-->

Mas por que o Vite est√° se tornando a nova escolha padr√£o para projetos React? Vamos dar uma olhada em algumas das principais diferen√ßas entre essas duas ferramentas.

- Mais r√°pido e mais leve do que o Create-React-App
- Usa o esbuild para compila√ß√£o, que √© significativamente mais r√°pido do que o webpack
- Permite que os desenvolvedores construam e recarreguem projetos mais rapidamente
- Projetado para trabalhar com outras tecnologias modernas, como o TypeScript e o Vue.js (Vite e Vue.js t√™m o mesmo criador, Evan You)
- Possui um ambiente de desenvolvimento mais moderno e atualizado
- Suporta HMR (Hot Module Replacement) para atualiza√ß√µes de m√≥dulo mais r√°pidas durante o desenvolvimento
- Permite importa√ß√µes din√¢micas com melhor suporte a tipos para otimiza√ß√£o de carregamento de m√≥dulos
- Oferece uma experi√™ncia de desenvolvimento mais suave e produtiva em geral.

Outra diferen√ßa importante √© a forma como eles lidam com a inicializa√ß√£o do projeto. O CRA cria uma configura√ß√£o padr√£o para o projeto, o que significa que voc√™ tem menos controle sobre a estrutura do projeto, tendo que ejet√°-lo para fazer qualquer configura√ß√£o personalizada. O Vite permite que voc√™ escolha como deseja configurar seu projeto, dando aos desenvolvedores mais flexibilidade e controle.

Em resumo, o Vite se tornou a escolha padr√£o para projetos React. Ele √© mais r√°pido, mais leve e mais flex√≠vel do que o CRA, e √© projetado para trabalhar com outras tecnologias modernas. Se voc√™ ainda n√£o experimentou o Vite, agora √© a hora de dar uma chance e ver como ele pode ajudar a melhorar sua efici√™ncia de desenvolvimento.]]></description>
            <link>https://yagasaki.vercel.app//articles/reactcra</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/reactcra</guid>
            <pubDate>Tue, 18 Apr 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como contribuir para projetos de c√≥digo aberto ‚Äì um guia para iniciantes]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1603912699214-92627f304eb6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1025&q=80 "Clay Banks")

> _"√Ä medida que avan√ßamos tecnologicamente, mais e mais produtos e servi√ßos est√£o sendo transformados em servi√ßos prontos para software. E muitos deles est√£o sendo feitos de c√≥digo aberto."_

Esse √© um artigo √© adaptado por mim e traduzido diretamente do ingl√™s: [https://www.freecodecamp.org/news/how-to-contribute-to-open-source-projects-beginners-guide/](https://www.freecodecamp.org/news/how-to-contribute-to-open-source-projects-beginners-guide?ref=yagasaki.dev/blog)

A maioria dos desenvolvedores e empresas depende de ferramentas e softwares de c√≥digo aberto para fazer seus produtos funcionarem. E acho que voc√™ vai concordar comigo que o n√∫mero de contribui√ß√µes para o c√≥digo aberto realmente cresceu ultimamente ‚Äì n√£o apenas para desenvolvedores individuais, mas tamb√©m de empresas.

O motivo disso? √â criar uma manuten√ß√£o, solu√ß√µes e desenvolver features de uma forma t√£o r√°pida com a comunidade que todo mundo vai ter um pedacinho naquela cria√ß√£o e isso faz uma baita diferen√ßa.

<!--truncate-->

Minhas primeiras contribui√ß√µes para a comunidade de c√≥digo aberto foram durante os projetos da KalifyInc e isso come√ßou em torno de 2015 mais ou menos, fora outros eventos como o Hackathon da AMBEV e muitos outros.

Agora, se voc√™ est√° lendo este artigo √© porque quer fazer parte da grande comunidade de c√≥digo aberto ‚Äì mas talvez n√£o saiba por onde come√ßar? Bem, voc√™ est√° no lugar certo.

Neste guia abordaremos:

- O que exatamente √© c√≥digo aberto?
- Como voc√™ pode come√ßar a contribuir?
- O que voc√™ deve esperar?

Bem, neste artigo vamos cobrir tudo isso e muito mais.

Vamos come√ßar!

## O que √© c√≥digo aberto?

Em palavras simples, podemos descrever um projeto de c√≥digo aberto como um c√≥digo-fonte disponibilizado ao p√∫blico para visualiza√ß√£o, uso, modifica√ß√£o e distribui√ß√£o sob uma licen√ßa permissiva.

Como exemplo para explicar isso, vamos usar um cen√°rio de sala de aula. Um professor pode compartilhar um documento em uma plataforma como o Google Docs. Nesta plataforma os alunos podem editar o documento e at√© fazer c√≥pias pr√≥prias. Mas sempre que fazem edi√ß√µes, precisam ser aprovadas pelo professor antes de refletir sobre o documento novamente. Assim, ele saber√° quais s√£o as mudan√ßas no documento original e dever√£o ser aprovadas para n√£o afetar a ideia original.

√â assim que funciona o c√≥digo-fonte aberto: depois que ele se torna p√∫blico e voc√™ precisa adicionar um recurso ou fazer altera√ß√µes, o propriet√°rio precisa aprovar as altera√ß√µes adicionadas e public√°-las para que outras pessoas vejam.

Os projetos de c√≥digo aberto mais bem-sucedidos s√£o resultado de contribui√ß√µes de pessoas com todos os n√≠veis de habilidade ‚Äì e n√£o apenas habilidades de codifica√ß√£o, mas tamb√©m outras habilidades como reda√ß√£o, tradu√ß√µes, documenta√ß√£o e assim por diante.

Sempre que algu√©m corrige um erro de digita√ß√£o, adiciona um alerta sobre um poss√≠vel aviso do compilador, corrige um bug ou at√© mesmo adiciona documenta√ß√£o detalhada a um projeto, h√° progresso. Se pegarmos todas essas pequenas contribui√ß√µes de diferentes pessoas com diferentes habilidades e as juntarmos, grandes coisas podem acontecer.

Assim como Vincent van Gogh disse:

> Grandes coisas s√£o feitas por uma s√©rie de pequenas coisas reunidas.

## Por que voc√™ deve contribuir para o c√≥digo aberto

Contribuir para projetos de c√≥digo aberto pode ser uma forma gratificante de aprender, ensinar, compartilhar e construir experi√™ncia.

Existem muitas raz√µes pelas quais voc√™ deve contribuir para um projeto de c√≥digo aberto, como:

- Para melhorar o software em que voc√™ confia e/ou usa diariamente.
- Para encontrar um mentor, se precisar de um.
- Para aprender novas habilidades ou melhorar as existentes.
- Para compartilhar suas habilidades.
- Para obter um conhecimento muito mais profundo sobre o software que voc√™ est√° usando.
- Para construir sua reputa√ß√£o e ajudar a crescer sua carreira.
- Al√©m disso, √© divertido e lhe d√° satisfa√ß√£o pessoal, de dever cumprido.

## Guia passo a passo sobre como contribuir para o c√≥digo aberto
Quando dizemos contribuir para o c√≥digo aberto, isso n√£o significa necessariamente que voc√™ precisa saber codificar. Existem diferentes maneiras pelas quais voc√™ pode contribuir, mesmo que n√£o seja um programador - mas ter algumas habilidades de codifica√ß√£o ajudar√° voc√™ (e os projetos) muito.

Algumas contribui√ß√µes comuns podem ser feitas atrav√©s de:

- Adicionar uma descri√ß√£o √† documenta√ß√£o de um projeto para detalhar um determinado ponto, geralmente chamado de arquivo README (consulte este guia sobre [como escrever um bom arquivo README](https://yagasaki.dev/blog/montando-um-perfil-interessante-e-exemplar-no-github#o-que-colocar-no-seu-readme)).
- Dando orienta√ß√£o sobre um projeto espec√≠fico e como us√°-lo.
- Adicionando sa√≠da de amostra para mostrar como o c√≥digo funciona.
- Escrever tutoriais detalhados para o projeto.
- Adicionando tradu√ß√£o para um projeto.
- Responder a perguntas sobre um projeto (como no StackOverflowFlow, comunidade no Discord ou Reddit)
- Voc√™ pode se oferecer para orientar outro colaborador.
- Voc√™ pode corrigir erros de digita√ß√£o e organizar a pasta de trabalho do projeto corretamente.

Todas essas formas, e muitas outras, contam para contribui√ß√µes. Agora, o que exatamente voc√™ deve saber antes de come√ßar a contribuir para um projeto de sistema operacional?

## O que saber antes de contribuir para um projeto de sistema operacional

Assim como esperamos que cada produto de c√≥digo aberto seja diferente, as comunidades tamb√©m s√£o. Cada comunidade tem suas pr√≥prias regras e ter√° diferentes diretrizes e pap√©is, e se voc√™ tiver sorte, alguns tamb√©m dar√£o recompensas depois que voc√™ contribuir.

Mas, apesar de tudo isso, existem alguns recursos comuns que se aplicam a todos os projetos de SO, e √© sobre isso que vamos falar:

Em um projeto t√≠pico de SO, teremos as seguintes pessoas:

- **Autor** - Esta √© a pessoa que criou o projeto. Eles t√™m o poder de atribuir novas fun√ß√µes a outros membros para ajudar na manuten√ß√£o do projeto.
- **Propriet√°rio** - O propriet√°rio tem propriedade administrativa do projeto (e pode ser a mesma pessoa que o autor)
- **Mantenedores** - Essas pessoas s√£o respons√°veis por conduzir a vis√£o e os objetivos do projeto. Geralmente s√£o pessoas que se sentem respons√°veis pela dire√ß√£o do projeto e que se empenham em melhor√°-lo.
- **Contribuidores** - Os contribuidores adicionam ao projeto de uma forma ou de outra. Eles seguem o mesmo processo de revis√£o de c√≥digo, est√£o sujeitos aos mesmos requisitos de estilo de c√≥digo e assim por diante.
- **Membros/usu√°rios da comunidade** - Esses membros valiosos da comunidade podem fornecer feedback sobre recursos, relat√≥rios de bugs e muito mais.

## Deve ter elementos em todos os projetos de SO

Quando se fala em um projeto de SO, eles s√£o categorizados de v√°rias formas dependendo da estrutura, tipo de plataforma do produto, linguagem de programa√ß√£o utilizada, se √© patrocinado ou totalmente independente, e muito mais.

Todas essas informa√ß√µes devem ser descritas com a ajuda das orienta√ß√µes e informa√ß√µes:

**Licen√ßa**
Se um projeto n√£o possui uma licen√ßa de c√≥digo aberto, ele n√£o √© de c√≥digo aberto. A licen√ßa ajuda a proteger colaboradores e usu√°rios. Empresas e desenvolvedores experientes geralmente n√£o tocam em um projeto sem essa prote√ß√£o. Se voc√™ est√° se perguntando como obter um e escolher o correto para o seu projeto, confira o site oficial da licen√ßa do sistema operacional: [https://choosealicense.com/](https://choosealicense.com?ref=yagasaki.dev/blog).

**Arquivo README**
Este √© um manual que explica como iniciar um projeto. Ele lista os requisitos para contribuir com o projeto, as etapas a serem seguidas para contribuir com o projeto, etc... Um bom README deve conter tudo o que um colaborador em potencial gostaria de saber sobre o projeto. Se voc√™ j√° tem um projeto e est√° tentando escrever um bom arquivo README, este guia ser√° √∫til: [Como escrever um bom arquivo README](https://yagasaki.dev/blog/montando-um-perfil-interessante-e-exemplar-no-github#o-que-colocar-no-seu-readme).

**Diretrizes de Contribui√ß√£o**
S√£o diretrizes que ajudam as pessoas que contribuem com o projeto a saber exatamente o que se espera delas. E mesmo que n√£o seja obrigat√≥rio, √© sempre uma boa pr√°tica adicionar um. Se voc√™ precisar de ajuda para escrever um ou entender o que isso implica, o site oficial do sistema operacional tem um guia de modelo para ajud√°-lo: [Modelo de diretrizes do colaborador em ingl√™s](https://opensource.com/life/16/3/contributor-guidelines-template-and-tips?ref=yagasaki.dev/blog)

**C√≥digo de Conduta**
Um c√≥digo de conduta √© um documento que estabelece suas expectativas sobre como seus colaboradores e participantes se comportam. Adotar e fazer cumprir um c√≥digo de conduta pode ajudar a criar um ambiente positivo e acolhedor para sua comunidade. O guia do sistema operacional explica mais sobre o que isso implica: [https://opensource.guide/code-of-conduct/](https://opensource.guide/code-of-conduct?ref=yagasaki.dev/blog).

Como indiv√≠duo ou organiza√ß√£o executando um projeto Open-Source, trata-se de criar uma comunidade onde as pessoas possam crescer juntas. Isso significa que voc√™ ter√° que desenvolver um ambiente amig√°vel onde as pessoas possam compartilhar ideias, trabalhar em desafios e at√© mesmo conversar aleatoriamente em algum momento.

Existem algumas op√ß√µes aqui, e voc√™ pode usar ferramentas como:

**Issue Tracker**
√â aqui que voc√™ acompanha seu trabalho no GitHub e como o desenvolvimento acontece. Caso haja algum problema, um colaborador pode criar um problema e vincul√°-lo a uma solicita√ß√£o pull e outros colaboradores podem optar por tentar corrigi-lo. Ent√£o, depois de consertado, √© fechado.

**Pull Requests**
Eles permitem que voc√™ informe outras pessoas sobre as altera√ß√µes que voc√™ enviou para uma branch em um reposit√≥rio no GitHub. Depois que uma pull request √© aberta, voc√™ pode discutir e revisar as poss√≠veis altera√ß√µes com o colaborador e adicionar confirma√ß√µes de acompanhamento antes de serem mescladas na ramifica√ß√£o base.

**Canal de bate-papo**
Embora n√£o seja obrigat√≥rio, voc√™ pode considerar uma boa pr√°tica fazer parte de um canal da comunidade de SO. Destina-se especificamente para as pessoas compartilharem suas ideias e conversarem. Algumas das m√≠dias mais comuns para esse fim incluem Slack e Discord.

Ent√£o, agora voc√™ tem uma ideia do que √© um projeto de sistema operacional e o que esperar ao contribuir para um. Passando para a parte mais importante, como saber para qual projeto contribuir?

## Como encontrar um projeto de c√≥digo aberto para contribuir
Contribuir funciona em todos os n√≠veis, n√£o h√° necessidade de pensar demais em como voc√™ far√° isso. Em vez disso, pense em alguns dos projetos que voc√™ j√° usa e como pode alter√°-los ou melhor√°-los.

A pesquisa mostrou que cerca de 30% das contribui√ß√µes casuais s√£o documenta√ß√£o, corre√ß√µes de erros de digita√ß√£o ou at√© mesmo tradu√ß√µes.

No in√≠cio prometi compartilhar alguns dos projetos que me ajudaram quando dei minha primeira contribui√ß√£o. Boa sorte, se voc√™ √© um contribuidor de primeira viagem ‚Äì o que todo mundo √© em algum momento ‚Äì aqui est√£o alguns links que o ajudar√£o a come√ßar no mundo do c√≥digo aberto e que s√£o da Kalify Inc:

- [Essentials](https://github.com/Yagasaki7k/website-essentials)
- [Onigiri Hardcore](https://github.com/Yagasaki7k/website-onigirihardcore)
- [FindYourPet](https://github.com/Yagasaki7k/website-findyourpet)

E caso voc√™ queira encontrar mais, voc√™ pode acessar nossa [ala de projetos](https://kalify.vercel.app/#projects)

No mundo do software de c√≥digo aberto, os problemas s√£o relatados e corrigidos rapidamente. Portanto, uma boa maneira de dar o pontap√© inicial √© assumir um problema e tentar trabalh√°-lo imediatamente.

## Como escolher um projeto de c√≥digo aberto
Depois de encontrar o projeto com o qual deseja contribuir, √© hora de fazer uma pequena verifica√ß√£o. Certifique-se de que ele atenda aos seguintes crit√©rios para que voc√™ saiba que ser√° um bom projeto para trabalhar:

- Verifique se tem um arquivo de licen√ßa.
- Verifique quando foi feito o √∫ltimo commit. Isso ajudar√° voc√™ a saber se os mantenedores est√£o ativos e tamb√©m fornecer√° uma estimativa de quanto tempo levar√° para responder √† sua contribui√ß√£o.
- Procure o n√∫mero de contribuintes.
- Verifique com que frequ√™ncia as pessoas fazem commits.
  
Se voc√™ vir muitas atividades recentes, isso √© um bom sinal ‚Äì significa que a comunidade est√° ativa e os mantenedores tamb√©m.

Agora, se a primeira "verifica√ß√£o" der certo, prossiga para verificar tamb√©m os seguintes pontos:

- Tem alguma issue em aberto? Se sim, isso pode ser um bom sinal, voc√™ ter√° por onde come√ßar.
- Quanto tempo leva para os mantenedores responderem? Isso ser√° determinado pela frequ√™ncia com que os problemas s√£o fechados e os PRs mesclados.
- Existe uma discuss√£o ativa sobre um assunto?
- Os problemas est√£o sendo fechados regularmente?
- Quantas pull requests existem abertas?
- H√° quanto tempo as solicita√ß√µes pull mais recentes foram mescladas?
- Os mantenedores agradecem as pessoas por contribu√≠rem?

Se esse processo de verifica√ß√£o final for aprovado, voc√™ estar√° pronto para come√ßar sua contribui√ß√£o.

## O que considerar antes de ir para o c√≥digo aberto

Sei que voc√™ est√° empolgado e pronto para arrasar no mundo dos projetos open source, mas sabe o que procurar em um projeto?

Como mencionado acima, existem diferentes maneiras pelas quais voc√™ pode contribuir. Mas antes de fazer sua primeira contribui√ß√£o √© bom observar algumas coisas sobre o projeto que voc√™ vai escolher, como:

**Qual linguagem de programa√ß√£o o projeto usa?**
A tecnologia mais fundamental por tr√°s de qualquer aplicativo √© a linguagem de programa√ß√£o que ele usa. Algumas das linguagens mais populares no GitHub s√£o JavaScript, Typescript, Python, Java, Ruby e PHP ‚Äì mas existem muitas outras.
H√° uma infinidade de projetos que podem atender √†s suas habilidades e interesses. Portanto, basta encontrar um em que voc√™ se sinta confort√°vel trabalhando.

**Tipo de projeto**
Depois de escolher o idioma com o qual deseja trabalhar, voc√™ tamb√©m precisar√° escolher o tipo de projeto de sua prefer√™ncia. Basta dar uma olhada e escolher um projeto ou um tema que lhe interesse.
Depois de encontrar um projeto, voc√™ realmente deseja fazer contribui√ß√µes. E voc√™ far√° isso enviando pull request. Vamos falar sobre isso agora.

## O que √© um pull request?
Lembra do exemplo sobre o Google Docs? Bem, uma pull request √© semelhante, s√≥ que desta vez trata-se de c√≥digo.

Podemos descrever uma pull request como quando um contribuidor envia altera√ß√µes ‚Äì seja c√≥digo, documenta√ß√£o ou outro lugar ‚Äì e pede a um mantenedor para verificar, certificar-se de que est√° tudo bem e, em seguida, mesclar com o projeto base.

Ent√£o, como voc√™ envia um?

## Como enviar uma pull request
Se voc√™ est√° nesta fase, significa que encontrou um projeto e est√° pronto para dar sua contribui√ß√£o. Ent√£o, vamos falar sobre como realmente enviar uma pull request.

### Etapas para enviar um PR / Pull Request
- Fork o reposit√≥rio

No canto superior direito, voc√™ ver√° o termo "fork". Tudo o que voc√™ precisa fazer √© clicar nele e ter√° criado uma c√≥pia do mesmo projeto em sua conta.

![image](https://user-images.githubusercontent.com/23272064/232479601-7ff986e5-2fbf-4578-ae11-8ddc82a24d0b.png)

Ap√≥s esta opera√ß√£o a URL do projeto mudar√° para:

`https://github.com/<YourUserName>/projectname`

**Clone o projeto em sua m√°quina local**
Para que voc√™ execute esta etapa, voc√™ deve ter o Git instalado localmente em sua m√°quina. Caso contr√°rio, consulte os documentos oficiais do Git sobre como come√ßar. Copie a URL do projeto bifurcado e prossiga para sua m√°quina local onde voc√™ abrir√° o git bash e prossiga com o comando abaixo:

`git clone https://github.com/<YourUserName>/<projectname>`
Isso criar√° uma c√≥pia do projeto em sua m√°quina local. Agora que voc√™ clonou o reposit√≥rio, precisaremos fazer duas coisas:

A primeira √© fazer as altera√ß√µes/contribui√ß√µes necess√°rias e confirmar essas altera√ß√µes. Depois de fazer suas altera√ß√µes e adicionar novos arquivos, √© hora de adicionar essas altera√ß√µes em uma ramifica√ß√£o separada antes de envi√°-las para o controle remoto.

Mas, primeiro vamos criar uma ramifica√ß√£o. No seu git bash, altere o caminho no diret√≥rio do seu reposit√≥rio. Para fazer isso use este comando: `cd project folder name`

Agora, para criar uma ramifica√ß√£o, usaremos o comando: `git checkout -b nome-da-sua-nova-filial`

Aqui est√° um exemplo: `git checkout -b lary-mak`

√â hora de adicionar as novas altera√ß√µes ao branch que criamos. Para ver todas as altera√ß√µes que voc√™ fez, usaremos o comando:
`git status`

O comando listar√° todas as altera√ß√µes feitas. Para adicion√°-los usaremos o git add, que adicionar√° todos os arquivos ao nosso branch. `git add *`

Vamos adicionar uma mensagem de commit, explicando brevemente o que adicionamos: `git commit -m "<mensagem aqui>"`

### Empurre as altera√ß√µes para a base remota
Agora que tudo est√° definido, √© hora de deixar nosso mantenedor saber o que adicionamos. Isso √© poss√≠vel pressionando as altera√ß√µes com este comando:`git push origin <add-your-branch-name>` substituindo `<add-your-branch-name>` pelo nome do branch que voc√™ criou anteriormente, no meu caso ser√° `git push origin yagasaki`.

**Enviar altera√ß√µes**
Se voc√™ acessar seu reposit√≥rio no GitHub e atualizar a p√°gina, ver√° um bot√£o Compare and pull request. Clique nesse bot√£o.
Em breve, o mantenedor ir√° mesclar todas as suas altera√ß√µes no branch master deste projeto (a menos que precisem de altera√ß√µes suas). Voc√™ receber√° um e-mail de notifica√ß√£o assim que as altera√ß√µes forem mescladas.

Criar um pull request tem algumas vantagens, como:

- Ele permite que voc√™ contribua para outro reposit√≥rio sem precisar de privil√©gios administrativos para fazer altera√ß√µes no reposit√≥rio.
- Ele permite que outras pessoas revisem suas altera√ß√µes e sugiram corre√ß√µes, acr√©scimos, edi√ß√µes e assim por diante.
- Ele d√° aos administradores do reposit√≥rio controle sobre o que √© adicionado ao reposit√≥rio do projeto.
  
Parab√©ns ü•≥üéâ,
Voc√™ acabou de concluir o fork padr√£o: clonar -> editar -> pull request e isso resume sua primeira contribui√ß√£o. 

Voc√™ usar√° isso frequentemente como colaborador! Ent√£o, o que vem a seguir?

## O que vem depois do seu primeiro pull request?
Isso n√£o marca o fim! Agora √© s√≥ encontrar mais projetos e continuar contribuindo. Al√©m disso, fique atento ao m√™s dedicado a contribui√ß√µes de c√≥digo aberto todos os anos, administrado pela Digital Ocean, para ter a chance de ganhar alguns presentes incr√≠veis.

Mais uma coisa para falar um pouco mais antes de terminarmos. Ou seja, por que contribuir com o open source √© gratificante.

## Benef√≠cios de Contribuir para o C√≥digo Aberto
- As pessoas que contribuem para um projeto de c√≥digo aberto conhecem a tecnologia em um n√≠vel muito mais profundo do que simplesmente usando a tecnologia.
- Voc√™ pode concentrar seus esfor√ßos em adicionar e alavancar recursos que beneficiar√£o os neg√≥cios com base na experi√™ncia com o que funciona e o que n√£o funciona no mundo real.
- Ele constr√≥i sua moral e reputa√ß√£o. As pessoas que contribuem para projetos de c√≥digo aberto t√™m acesso √†s percep√ß√µes e experi√™ncias de outros membros da comunidade.
- Contribuir para o c√≥digo aberto fornece uma vis√£o clara do futuro de um projeto
- Se voc√™ estiver no GitHub, grande parte das coisas que voc√™ faz nessa plataforma s√£o p√∫blicas. Use isso a seu favor, sempre fazendo o seu melhor ao contribuir e se comunicar com outros colaboradores.

## Por que voc√™ deve contribuir para o c√≥digo aberto como desenvolvedor
- Isso ajudar√° a aprimorar suas habilidades de codifica√ß√£o e melhorar a escrita de c√≥digo limpo.
- Isso ajuda a comunidade e seus colegas a conhec√™-lo. Esse reconhecimento pode lhe trazer muitas oportunidades em sua carreira.
- Ele ajuda voc√™ a aprender mais sobre gerenciamento de projetos e pode deix√°-lo inspirado para iniciar seu pr√≥prio projeto.

## VAMOS NESSA!
Como mencionei, o c√≥digo aberto est√° aberto para todos participarem. Existem muitas oportunidades que voc√™ pode aproveitar e aprender algo novo. Tudo que voc√™ precisa √© decidir come√ßar e come√ßar.

**O C√ìDIGO ABERTO EST√Å ESPERANDO POR VOC√ä**

Se voc√™ leu at√© aqui, eu realmente aprecio isso.
Compartilhe sua opini√£o, serei grato pelo seu feedback!

Conecte-se comigo no [Twitter](https://twitter.com/Yagasaki7K) | [Linkedin](https://linkedin.com/in/andersonmarlon) | [GitHub](https://github.com/Yagasaki7K) | [Discord](https://discord.gg/jhSepmE7nN)

Aproveite! ‚ù§]]></description>
            <link>https://yagasaki.vercel.app//articles/open-source</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/open-source</guid>
            <pubDate>Mon, 17 Apr 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como transformar seu website em um Progressive Web Application (PWA)]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1581291518633-83b4ebd1d83e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 "Kelly Sikkema")

Imagine que voc√™ precisa de um aplicativo para solucionar um problema, mas ele precisa estar tanto como um aplicativo, seja
no mobile, seja desktop. Voc√™ pode criar um aplicativo nativo para cada plataforma, mas isso pode ser um pouco caro e
demorado. Ent√£o, voc√™ pode criar um PWA (Progressive Web Application), que √© um aplicativo web que pode ser instalado em
qualquer dispositivo, seja ele mobile ou desktop.

<!--truncate-->

## Mas afinal, o que √© um PWA?

Um PWA √© um aplicativo web que pode ser instalado em qualquer dispositivo, seja ele mobile ou desktop. Ele √© constru√≠do com
tecnologias web modernas, como HTML, CSS e JavaScript, e pode ser instalado em qualquer dispositivo e a experi√™ncia que eu
tive foi simplesmente sensacional, o motivo? Transformei o Essentials em PWA e agora ele est√° dispon√≠vel para instala√ß√£o em
qualquer dispositivo, at√© mesmo como um aplicativo no desktop, o que facilita e muito de manter-se atualizado e sem depender
de um navegador ou acessar a p√°gina para ficar lembrando de instalar novos programas.

A ideia final √© transformar v√°rios de nossos produtos assim, dessa maneira, eliminamos a necessidade de usarmos o Electron
por exemplo para criar aplicativos desktop, pois o PWA √© apenas um conversor simples que √© gerado ao fazer a build da
ferramenta. Enquanto no Electron, ele seria um novo aplicativo, uma nova abordagem, remontar o c√≥digo, pensar em uma nova
arquitetura, etc.

## T√°, mas como voc√™ criou o PWA?

Existem v√°rias maneiras de desenvolver um PWA, como eu sou focado em Javascript, acabei usando um pacote espec√≠fico para o
framework que eu estava utilizando, no caso o `next-pwa` para atender a necessidade do Essentials que √© desenvolvido em
Next.JS, mas saiba que existem v√°rios pacotes que podem fazer isso, pra entender como eles funcionam, √© s√≥ voc√™ ler com calma
a documenta√ß√£o de cada um deles. No caso do VueJS, voc√™ pode usar o `vue-plugin-pwa` e no React, voc√™ pode seguir direto a
[documenta√ß√£o](https://create-react-app.dev/docs/making-a-progressive-web-app?ref=yagasaki.dev/blog).

O que eu fiz? Inicialmente eu instalei o pacote `next-pwa` e adicionei ele no `next.config.js`:

```js
const withPWA = require('next-pwa')

module.exports = withPWA({
  pwa: {
    dest: 'public',
  },
})
```

Depois disso, eu adicionei o arquivo `manifest.json` na pasta `public`:

```json
{
  "name": "Essentials",
  "short_name": "Essentials",
  "start_url": "/",
  "display": "standalone",
  "background_color": "#ffffff",
  "theme_color": "#ffffff",
  "description": "Essentials √© uma ferramenta para gerenciar seus projetos de forma simples e r√°pida.",
  "icons": [
    {
      "src": "/android-chrome-192x192.png",
      "sizes": "192x192",
      "type": "image/png"
    },
    {
      "src": "/android-chrome-512x512.png",
      "sizes": "512x512",
      "type": "image/png"
    }
  ]
}
```

E ap√≥s isso, com a ajuda do `next-pwa`, eu n√£o preciso criar manualmente o `service-worker.js` ou `sw.js`, ele √© gerado
quando eu pe√ßo a build do projeto, ent√£o eu s√≥ precisei rodar a build e o arquivo foi gerado automaticamente, claro, eu tive
que colocar todos os detalhes, adicionar os tamanhos de imagens `192x192` e `512x512` e o tipo de imagem que √© `png` e
pronto, al√©m de claro, definir no theme_color (aonde vai ficar a cor do cabe√ßalho do aplicativo) e voil√†, o PWA j√° estava
funcionando.

N√£o consegui testar localmente, claro, porque ele depende de estar em produ√ß√£o pra funcionar, por conta da comunica√ß√£o que
ele tem com o navegador para gerar o aplicativo, mas voc√™ pode ver atrav√©s do [Essentials](https://webessentials.com.br?ref=yagasaki.dev/blog) que isso funciona e √© muito
gratificante como uma ferramenta t√£o pequena pode ser t√£o √∫til. Se tiver dificuldades para ver como ele funciona, voc√™ pode ver a nossa [documenta√ß√£o sobre o aplicativo](https://webessentials.com.br/download?ref=yagasaki.dev/blog). E fiquei ainda mais com a sensa√ß√£o de dever cumprido, em saber que um aplicativo que foi desenvolvido
para web pode se transformar em aplicativo e acessar v√°rios dispositivos, comportar v√°rias situa√ß√µes sem ter que adaptar inteiramente o c√≥digo, fazer toda a transforma√ß√£o, mudar a arquitetura, enfim, foi uma experi√™ncia demais.

## Por que voc√™ deveria transformar seu Web App em PWA?
- O PWA permite que sua aplica√ß√£o tenha um modo offline por meio da configura√ß√£o de um service worker. D√° um pouco de trabalho e exige dedica√ß√£o, mas funciona muito bem!
- Normalmente os PWAs ocupam menos espa√ßo no celular do usu√°rio, pois o navegador s√≥ guarda o cache da sua aplica√ß√£o.
- Ele pode te ajudar a economizar em requisi√ß√µes! Sim, voc√™ pode configurar o seu service worker para interceptar requisi√ß√µes. Caso os dados da requisi√ß√£o j√° estejam guardados no cache, ele vai pegar os seus dados por meio do service worker e retornar sem fazer a requisi√ß√£o.
- Construir um app PWA √© muito mais f√°cil que construir um app nativo, seja ele realmente nativo como os apps em Swift (Objective C), Android Studio (Java), ou seja ele um framework h√≠brido, como React Native ou Ionic. Isso se d√° pelo fato de que, na verdade, um PWA √© apenas um web app adicionado em fullscreen na tela inicial do seu celular por meio de um navegador j√° instalado.
- A diferen√ßa entre um app nativo e um PWA √© quase irreconhec√≠vel (caso o layout dele seja bem feito). √â √≥timo para testar aquele famoso MVP da sua startup.
- Voc√™ n√£o precisa passar pela burocracia das lojas, principalmente da Apple Store para subir atualiza√ß√µes. √â s√≥ subir.

## Desvantagens

Se voc√™ quer que seu app tenha algum recurso que envolva a c√¢mera do celular e seu p√∫blico alvo possui iOS, desista do PWA. No Android funciona bem, voc√™ consegue acessar a c√¢mera do dispositivo tanto em legacy mode (usando o app nativo da c√¢mera do celular) ou direto pelo app (caso seu servidor tenha https).

J√° o Safari (√∫nico app capaz de adicionar PWA √† tela inicial no iOS,) s√≥ permite acesso √† c√¢mera em modo legacy. Nesse caso, seria interessante criar um PWA em android e um app nativo para iOS. Ou utilizar um framework como React Native para fazer um app h√≠brido.

**Push Notifications**
Novamente, o Safari possui limita√ß√µes quanto a push notifications, √© como se voc√™ tivesse que desenhar dois c√≥digos de push diferentes: um para todo mundo, outro para a apple. √â simplesmente irritante.

Nos casos em que voc√™ quer apenas oferecer uma interface mobile mais interessante para o usu√°rio, j√° possui um layout feito para ser responsivo, vale √† pena tentar implementar o PWA.]]></description>
            <link>https://yagasaki.vercel.app//articles/pwa</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/pwa</guid>
            <pubDate>Fri, 24 Mar 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Introdu√ß√£o ao Git e GitHub para iniciantes]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1618401471353-b98afee0b2eb?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1188&q=80 "Roman Synkevych üá∫üá¶")

> _"Git √© um sistema de **controle de vers√£o** distribu√≠do que permite que v√°rias pessoas trabalhem juntas em um projeto. Ele permite que voc√™ acompanhe as altera√ß√µes em seus arquivos, reverta a um estado anterior, ramifique-se em diferentes vers√µes e trabalhe em colabora√ß√£o com outros desenvolvedores."_

GitHub √© uma plataforma de hospedagem de c√≥digo fonte baseado no Git que permite que voc√™ armazene, compartilhe e gerencie seu c√≥digo-fonte. √â uma plataforma muito popular e amplamente utilizada para desenvolvimento colaborativo.

Neste guia, vamos apresentar os principais conceitos e comandos do Git e GitHub para ajud√°-lo a come√ßar a usar essas ferramentas no desenvolvimento de seus projetos.

<!--truncate-->

## Instala√ß√£o
Antes de come√ßar a trabalhar com Git e GitHub, voc√™ precisar√° instal√°-los em sua m√°quina. Existem v√°rias maneiras de fazer isso, dependendo do seu sistema operacional. Aqui est√£o alguns links √∫teis para ajud√°-lo a come√ßar:

- [Git](https://git-scm.com/downloads?ref=yagasaki.dev/blog)
- [GitHub Desktop](https://desktop.github.com?ref=yagasaki.dev/blog)

## Configura√ß√£o inicial

Ap√≥s a instala√ß√£o do Git, voc√™ precisar√° fazer algumas configura√ß√µes iniciais. Isso inclui definir seu nome e endere√ßo de e-mail, que ser√£o usados para identificar voc√™ em suas contribui√ß√µes ao projeto.

Para configurar seu nome e endere√ßo de e-mail, abra o terminal e execute os seguintes comandos:

```TypeScript
git config --global user.name "Seu nome aqui"
git config --global user.email "Seu e-mail aqui"
```

## Comandos b√°sicos do Git
Aqui est√£o alguns dos comandos b√°sicos do Git que voc√™ precisar√° conhecer para come√ßar a trabalhar com o sistema de controle de vers√£o:

### git init
O comando git init √© usado para inicializar um novo reposit√≥rio Git em um diret√≥rio existente. Isso cria um novo subdiret√≥rio oculto chamado .git, que cont√©m todos os arquivos necess√°rios para o controle de vers√£o.

### git add

O comando git add √© usado para adicionar um arquivo ao √≠ndice (tamb√©m conhecido como √°rea de prepara√ß√£o) para o controle de vers√£o. Voc√™ pode adicionar um arquivo espec√≠fico ou adicionar todos os arquivos em um diret√≥rio usando o . caractere.

```TypeScript
git add arquivo.txt
git add .
git commit
```
### git commit
O comando git commit √© usado para criar uma nova revis√£o no hist√≥rico de vers√£o. Ele grava uma mensagem de confirma√ß√£o que descreve as altera√ß√µes que voc√™ fez.

```TypeScript
git commit -m "Adicionando arquivo.txt"
git status
```
### git status

O comando git status √© usado para ver o status atual do seu reposit√≥rio. Ele informa quais arquivos est√£o em rastreamento, quais arquivos foram modificados e quais arquivos est√£o prontos para serem confirmados.

```TypeScript
git status
git log
```
### git log
O comando git log √© usado para exibir o hist√≥rico de confirma√ß√µes em seu reposit√≥rio. Ele mostra informa√ß√µes como a mensagem de confirma√ß√£o, o autor, a data e a hora da confirma√ß√£o.

```TypeScript
git log
```

## Comandos b√°sicos do GitHub
Aqui est√£o alguns dos comandos b√°sicos do GitHub que voc√™ precisar√° conhecer para come√ßar a trabalhar com a plataforma:

### git clone

O comando git clone √© usado para clonar um reposit√≥rio remoto para o seu computador local. Isso permite que voc√™ baixe o c√≥digo-fonte completo do projeto para sua m√°quina e trabalhe nele localmente.

```TypeScript
git clone https://github.com/usuario/nome-do-repositorio.git
git push
```

### git push

O comando git push √© usado para enviar as altera√ß√µes locais para um reposit√≥rio remoto. Isso atualiza o reposit√≥rio remoto com as suas altera√ß√µes locais.

```TypeScript
git push origin nome-do-branch
git pull
```
### git pull

O comando git pull √© usado para atualizar o reposit√≥rio local com as altera√ß√µes do reposit√≥rio remoto. Isso √© √∫til quando outras pessoas est√£o trabalhando no mesmo projeto e voc√™ precisa garantir que possui as vers√µes mais atualizadas dos arquivos.

```TypeScript
git pull origin nome-do-branch
git branch
```
### git branch 

O comando git branch √© usado para exibir as ramifica√ß√µes (tamb√©m conhecidas como branches) em seu reposit√≥rio local. As ramifica√ß√µes permitem que voc√™ trabalhe em diferentes vers√µes do projeto ao mesmo tempo.

```TypeScript
git branch
git checkout
```
### git checkout 

O comando git checkout √© usado para alternar entre diferentes ramifica√ß√µes em seu reposit√≥rio local.

```TypeScript
git checkout nome-do-branch
```

## Conclus√£o

Este guia apresentou os principais conceitos e comandos do Git e do GitHub para ajud√°-lo a come√ßar a us√°-los em seus projetos. Lembre-se de que h√° muito mais a aprender sobre essas ferramentas, mas com estes comandos b√°sicos, voc√™ j√° pode come√ßar a trabalhar com controle de vers√£o e colabora√ß√£o em equipe.]]></description>
            <link>https://yagasaki.vercel.app//articles/git-github</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/git-github</guid>
            <pubDate>Wed, 15 Mar 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como usar o uTorrent para iniciantes]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1451187580459-43490279c0fa?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1172&q=80 "NASA")

> _"Lembrando que esse conte√∫do √© para fins educativos, e o uso dele √© inteiramente de sua responsabilidade"_

## O que √© o uTorrent?

O uTorrent √© um programa de compartilhamento de arquivos P2P (Peer-to-Peer) que permite que voc√™ baixe arquivos de outros usu√°rios. O uTorrent √© um dos programas de compartilhamento de arquivos mais populares do mundo, e √© usado por milh√µes de pessoas em todo o mundo, ele atualmente √© respons√°vel por mais de 1/3 de todo o tr√°fego de download na internet e √© o programa respons√°vel pelo compartilhamento de jogos, filmes, m√∫sicas e outros arquivos.

<!--truncate-->

## Passos a seguir

O que precisamos fazer de inicio para come√ßarmos a usar o torrent? Escolher um respons√°vel por captar esse conte√∫do, e o uTorrent √© um dos melhores programas para isso, se voc√™ for do que opta por projetos open source, pode utilizar o BitTorrent tamb√©m.

Para quem estiver no computador, LEIA TUDO, n√£o me responsabilizo por voc√™ baixar Opera, Norton ou qualquer antivirus que venha junto com o instalador por apenas voc√™ clicar "Next" atr√°s de "Next" sem ler o que est√° escrito.

Entre em um dos sites deles e fa√ßa o download do programa, se for em computador. 

- [uTorrent](https://www.utorrent.com/intl/pt/downloads/win?ref=yagasaki.dev/blog)
- [BitTorrent](https://www.bittorrent.com/downloads/complete?ref=yagasaki.dev/blog)
  
Se for em celular, busque pelo aplicativo na loja de aplicativos do seu celular e fa√ßa o download.

## Usando o uTorrent

Agora que voc√™ j√° tem o programa instalado, vamos aprender a us√°-lo.

O torrent, nada mais √© que um link (magn√©tico) que voc√™ se comunica com outros computadores para receber todas as informa√ß√µes do aplicativo, programa, jogo, filme, m√∫sica, etc. que voc√™ deseja baixar. E ele faz uma conex√£o em t√∫nel com outros computadores que tamb√©m est√£o baixando o mesmo arquivo, e assim, cada um desses computadores, te d√° um pedacinho daquele arquivo completo, facilitando em se comunicar e em trocar informa√ß√µes, tornando o arquivo mais r√°pido de ser adquirido, quanto mais seeds (sementes) tiver no link magn√©tico, mais r√°pido ele vai baixar, porque n√£o depende de apenas um servidor, tornando uma linha reta, mas sim de comunica√ß√µes com todos os outros que tamb√©m baixaram o mesmo arquivo e acelerando ainda mais o download.

Vamos l√°, atrav√©s de qualquer site, voc√™ consegue adquirir um link magn√©tico, ou at√© mesmo gerar um para arquivos que voc√™ deseja compartilhar, mas lembrando, quanto mais seeds, mais r√°pido. 

Ser√° algo semelhante a isso:

```
magnet:?xt=urn:btih:0e392fe0359a83defed331dbbba5719211ff78b&dn=Atmos.x264-SMURF%5Brartv%5D&tr=http%3A%2F%2Ftracker.trackerfix.com%3A80%2Fannounce&tr=udp%3A%2F%2F9.rarbg.me%3A2730&tr=udp%3A%2F%2F9.rarbg.to%3A2870&tr=udp%3A%2F%2Ftracker.slowcheetah.org%3A14720&tr=udp%3A%2F%2Ftracker.fatkhoala.org%3A13790
```

√â confuso, mas √© importante apenas para o programa conseguir ler esse link.

E como voc√™ manda isso para o aplicativo? Basta acessar qualquer navegador e pedir para abrir esse link (estando em um computador) ou pe√ßa para adicionar um Torrent atrav√©s do celular e insira o link.

Ap√≥s alguns minutos, ele come√ßar√° a se comunicar com uma rede de computadores que j√° possui esse mesmo arquivo e vai come√ßar a fazer o download. √â importante que depois que termine o download, voc√™ n√£o delete aquele gerador (exceto em dispositivo m√≥vel), pois ele ir√° continuar a se comunicar com novos computadores para facilitar os pr√≥ximos download, ajudando ainda mais a comunidade que disponibilizou esse arquivo e te tornando mais um seed.

E √© isso, bem simples, r√°pido e f√°cil.

D√∫vidas? Entre em contato comigo no [Twitter](https://twitter.com/yagasaki7k?ref=yagasaki.dev/blog) que vou tentar te ajudar da melhor maneira poss√≠vel.]]></description>
            <link>https://yagasaki.vercel.app//articles/torrents-para-iniciantes</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/torrents-para-iniciantes</guid>
            <pubDate>Mon, 06 Mar 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Recebendo mensagens de commit no Discord (Webhook)]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1584344794229-b3cfd1622f21?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=871&q=80 "Photo by Markus Spiske on Unsplash")

> _"Comunica√ß√£o com sua equipe ou grupo de amigos que est√£o desenvolvendo √© um pequeno passo para alcan√ßar ainda mais o sucesso. Com o Webhook do Discord, isso fica mais f√°cil, todo mundo sabe o que acontece e quando acontece e claro, tudo direitinho"_

Imagine que voc√™ est√° trabalhando em um projeto com sua equipe e voc√™ precisa enviar uma mensagem para o grupo toda vez que um commit √© feito no reposit√≥rio. Isso √© poss√≠vel com o Webhook do Discord. E qual √© a vantagem disso? COMUNICA√á√ÉO. Seja para receber informa√ß√µes do commit, seja para informar a equipe - sem precisar ficar indo at√© o Github - para informar que uma pull request foi aberta, informar que uma issue foi fechada, essas coisas ...

## O que √© Webhook?

Webhook √© um recurso que permite que voc√™ receba mensagens de eventos de terceiros. Ou seja, no nosso caso, iremos receber mensagens do Github e enviar pelo Discord automaticamente, sem precisar de muitas permiss√µes e sem precisar ficar indo at√© o Github para ver o que aconteceu, al√©m de ser uma forma de comunica√ß√£o r√°pida e direta, sem ter que ficar dando permiss√£o pra tudo.

<!--truncate-->

## Configurando

Primeiro, voc√™ precisa criar um Webhook no Discord. Para isso, voc√™ precisa ter permiss√£o de administrador no servidor. Depois, v√° em Configura√ß√µes do Servidor > Integra√ß√£o > Webhooks e clique em Criar Webhook. Voc√™ pode dar um nome e uma imagem para o Webhook, mas n√£o √© obrigat√≥rio. Depois, voc√™ vai receber um link para o Webhook, que ser√° algo como `https://discord.com/api/webhooks/1234567890/1234567890`. Esse link √© o que voc√™ vai usar para enviar as mensagens.

Agora, voc√™ precisa criar o Webhook no Github. Para isso, v√° em Settings > Webhooks > Add webhook. Voc√™ vai precisar de um nome para o Webhook, o link que voc√™ recebeu do Discord e um segredo. O segredo √© uma senha que voc√™ vai usar para validar que a mensagem que est√° chegando √© realmente do Github, a n√£o ser que voc√™ compartilhou isso com outra pessoa, mas n√£o √© necess√°rio essa senha. Adicione o link que recebeu e no final coloque `/github`, ficando algo como `https://discord.com/api/webhooks/1234567890/1234567890/github` isso √© extramente importante. Depois, voc√™ vai precisar selecionar os eventos que voc√™ quer receber. No nosso caso, vamos selecionar apenas o Push. Depois, troque o Content Type por Application/JSON e clique em Update Webhook.

Agora, voc√™ precisa fazer um commit no reposit√≥rio para testar se est√° tudo funcionando. Depois, voc√™ vai receber uma mensagem no Discord. Se voc√™ n√£o receber, verifique se voc√™ configurou tudo corretamente e se voc√™ tem permiss√£o de administrador no servidor do Discord.

Para receber mais informa√ß√µes como issue e pull request, voc√™ dever√° colocar para ouvir todos os eventos daquele reposit√≥rio ao inv√©s de apenas o Push. Para isso, v√° em Settings > Webhooks > Edit e selecione todos os eventos.

Percebeu como √© f√°cil configurar um simples webhook? Mas atente-se, pessoas mal intencionadas podem enviar outro tipo de mensagem para o seu servidor se tiverem acesso a esse link, ent√£o tome cuidado. Abaixo, vou deixar um exemplo de como ficou o primeiro push que fiz no reposit√≥rio do Onigiri Hardcore l√° no servidor da Kalify.

<p align="center"><img src="https://user-images.githubusercontent.com/23272064/219360650-94538eef-075e-45e1-bba4-6aa4db759ea5.png" alt="Webhook Discord"/></p>
]]></description>
            <link>https://yagasaki.vercel.app//articles/discord-webhook</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/discord-webhook</guid>
            <pubDate>Wed, 15 Feb 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Rodando Docker no Windows sem Docker Desktop]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1595587637401-83ff822bd63e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=901&q=80 "Dominik L√ºckmann")

> _"Essa publica√ß√£o aborda como fazer isso no Windows 10, mas deve funcionar com Windows 11 e qualquer WSL que suporte a execu√ß√£o do Docker. Digo "deveria" porque n√£o experimentei pessoalmente todas as distros, mas n√£o h√° nada sobre isso que indique que n√£o funcionar√° em outras distros."_

Anteriormente eu havia escrito um artigo no [TabNews](https://www.tabnews.com.br/Yagasaki/instalando-o-docker-no-wsl-2-sem-o-docker-desktop?ref=yagasaki.dev/blog) sobre como fazer para rodar o Docker no Windows sem a necessidade do Docker Desktop. Hoje, novamente, alguns meses depois, trago uma melhoria dessa evolu√ß√£o. E muito mais instru√≠da para que voc√™ n√£o fique perdido em como rodar a aplica√ß√£o por debaixo dos panos.

<!--truncate-->

O processo para rodar cont√™ineres Windows √© muito f√°cil, voc√™ precisa primeiro habilitar essa funcionalidade. Fa√ßa isso em um terminal administrativo usando PowerShell:

```powershell
Enable-WindowsOptionalFeature -Online -FeatureName Containers
```

Voc√™ provavelmente vai precisar reiniciar. Se ele reclamar, voc√™ pode precisar primeiro habilitar a funcionalidade de Hyper-V:

```powershell
Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
```

Ent√£o instale o Docker. Estou usando o [Scoop](https://scoop.sh?ref=yagasaki.dev/blog), porque ele j√° traz tamb√©m o `dockerd.exe` atrav√©s do Windows, sem precisar de intera√ß√£o direta no WSL, mas voc√™ pode usar outro m√©todo se preferir, baixando esses execut√°veis diretamente no site do Docker. O Rancher Desktop trar√° o `docker.exe`, mas n√£o o `dockerd.exe`, ent√£o n√£o √© suficiente para este passo, mesmo que voc√™ o tenha instalado.

Lembrando que o Scoop √© usado fora de um terminal administrativo.

_Pra ganhar o docker.exe e o dockerd.exe_

```powershell
scoop install docker
```

Ent√£o, em um terminal administrativo (WSL por exemplo), instale e configure o servi√ßo do Docker:

_Cria o Servi√ßo NT Docker_

```powershell
dockerd --register-service
```

_Configura o servi√ßo para iniciar manualmente assim ele n√£o inicia com o Windows_

```powershell
Set-Service docker -StartupType Manual
```

_Inicia o servi√ßo_

```powershell
Start-Service docker
```

_Checa se o pipe foi criado_

```powershell
Get-Item //./pipe/docker_engine
```

_Verifica se o Docker est√° funcionando no terminal de admin_

```powershell
docker info
```

At√© esse momento voc√™ precisou de um terminal administrativo para usar o Docker, mas agora vamos permitir que seu usu√°rio fa√ßa o acesso por um terminal normal. O Docker usa o named pipe `//./pipe/docker_engine` para se comunicar. Alguns tutoriais indicam mexer nas ACLs deste pipe, mas isso n√£o √© o ideal. A melhor op√ß√£o √© alterar o arquivo de configura√ß√£o do Docker e deix√°-lo controlar o acesso, assim (de novo no terminal administrativo):

_Configura o Docker para funcionar com o usu√°rio atual sem precisar de um terminal admin_

```powershell
mkdir $env:ProgramData\docker\config
@{ group = "docker-users" } | ConvertTo-Json | Out-File $env:ProgramData\docker\config\daemon.json
```

_Coloca usu√°rio atual no grupo `docker-users`, se ele j√° n√£o existe e j√° est√° l√°_

```powershell
$dockerUsers = Get-LocalGroup docker-users -ErrorAction SilentlyContinue
if (!($dockerUsers)) {
    dockerUsers = New-LocalGroup docker-users
    Add-LocalGroupMember -Group $dockerUsers -Member $(whoami)
} else {
    if (!(Get-LocalGroupMember $dockerUsers | ? { $_.Name -eq $(whoami) })) {
        Add-LocalGroupMember -Group $dockerUsers -Member $(whoami)
    }
}
```

_Reinicia o servi√ßo do Docker_

```powershell
Stop-Service docker
Start-Service docker
```

E a partir da√≠ voc√™ j√° pode usar o Docker direto pelo terminal n√£o-administrativo:

```powershell
docker info
docker ps
docker build ...
```

Lembrando que voc√™ n√£o vai poder usar o Rancher (ou qualquer outro runtime de cont√™ineres) enquanto o servi√ßo do Docker estiver rodando. Para us√°-lo, pare o servi√ßo primeiro:

```powershell
Stop-Service docker
```

E, quando for usar cont√™ineres Windows, primeiro inicie o servi√ßo:

```powershell
Start-Service docker
```

## Consigo instalar o Docker via CLI usando WSL diretamente?

Sim, caso voc√™ utilize o WSL, voc√™ ir√° adicionar o docker as depend√™ncias da apt

```bash
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
```

Em seguida, voc√™ ir√° instalar a √∫ltima vers√£o do Docker

```bash
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
```

E depois voc√™ poder√° verificar se o Docker est√° instalado corretamente

```bash
docker --version
```

√â isso. Muito simples, n√©? Espero que tenha ajudado.

Caso voc√™ ainda queira revisar a primeira vers√£o [desse artigo](https://www.tabnews.com.br/Yagasaki/instalando-o-docker-no-wsl-2-sem-o-docker-desktop?ref=yagasaki.dev/blog).]]></description>
            <link>https://yagasaki.vercel.app//articles/docker-desktop</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/docker-desktop</guid>
            <pubDate>Wed, 01 Feb 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Montando um perfil interessante e exemplar no GitHub]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1618401471353-b98afee0b2eb?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=888&q=80 "Roman Synkevych üá∫üá¶")

> _"Muitas pessoas possuem o Github, mas n√£o entendem o real peso, a real import√¢ncia de manter seu portf√≥lio, sua porta de entrada bem atualizada e chamativa para qualquer um olhar e se impressionar com o que voc√™ desenvolve."_

Por esses dias, vejo muitos desenvolvedores j√∫niors ou at√© mesmo algu√©m em busca de um est√°gio que se quer possu√≠ um perfil no Github ou nem est√° atualizado, bem estruturado ou com um bom README. E isso √© um grande problema, pois o Github √© uma das plataformas mais utilizadas por empresas para analisar o perfil de um candidato, e se voc√™ n√£o possui um perfil bem estruturado, voc√™ pode perder uma imensa oportunidade de emprego.

Usando como base o meu pr√≥prio perfil, vou ensinar algumas t√©cnicas que utilizo e que me auxiliarem a chegar aonde cheguei, claro, tem muita coisa que pode estar faltando e √© importante, n√£o sou uma verdade absoluta, mas √© um come√ßo.

<!--truncate-->

Antes de come√ßarmos a configurar, qual √© o seu foco? Atingir p√∫blicos nacionais ou internacionais?

Se o foco for apenas o pessoal do Brasil, deixei em portugu√™s, mas se o foco for internacional, deixe tudo em ingl√™s, literalmente TUDO, nomes de reposit√≥rios, descri√ß√µes dos projetos, os READMEs, o subt√≠tulo de seu perfil, TUDO. Pois √© uma forma de voc√™ se comunicar com o mundo, e isso √© muito importante.

Fa√ßa um ou o outro, nunca os dois.

## Por onde come√ßar?

Vamos come√ßar com o lado esquerdo do nosso Github

<p align="center"><img src="https://user-images.githubusercontent.com/23272064/215121507-571c8c33-8f2f-4f0a-8bd1-227474d4b0a8.png" alt="Github/Yagasaki7K"/></p>

O que √© ideal? Novamente lembrando, n√£o sou o dono da verdade, s√£o apenas recomenda√ß√µes que sigo para que meu perfil seja bem visualizado.

Se estou em busca de um emprego, o ideal √© ter uma √≥tima foto de perfil mostrando seu profissionalismo ou seu carisma, uma foto de fam√≠lia, uma foto que n√£o mostre quem de fato voc√™ √©, acaba que n√£o ajudando a definir se DE FATO, o perfil √© seu. Depois que j√° estiver empregado, voc√™ pode colocar uma foto de fam√≠lia, de viagem, de anime, n√£o tem problema algum, √© mais para transmitir conforto em quem v√™ seu perfil e enxerga a humanidade em voc√™.

Vale lembrar que muitos - mas n√£o todos - recrutadores possuem a mentalidade de que se voc√™ n√£o tem uma foto de perfil, voc√™ n√£o √© uma pessoa confi√°vel ou que possa estar se passando por outra pessoa, ent√£o, se voc√™ n√£o tem uma foto de perfil, coloque uma foto sua, mesmo que n√£o seja a melhor, mas que mostre quem voc√™ √©.

E depois, coloque o que est√° buscando, o que voc√™ faz ou o seu real foco, alguns exemplos a seguir s√£o: "Desenvolvedor Front-end / React, Next, Vue" ou "DBA com MongoDB e MySQL". Isso ajuda na busca, na seguimenta√ß√£o do que voc√™ est√° procurando, qual √© o seu verdadeiro foco.

## O que colocar no seu README?

<p align="center"><img src="https://user-images.githubusercontent.com/23272064/215122919-c585f9f7-fb75-4cce-a0ab-d12c531651e3.png" alt="Github/Yagasaki7K"/></p>

Inicialmente como j√° definimos a nossa linguagem de comunica√ß√£o (Ingl√™s ou Portugu√™s), vamos nos apresentar. Opcionalmente, ou seja, n√£o √© obrigat√≥rio, voc√™ pode colocar um banner como o cabe√ßalho (1500x500), nele voc√™ pode falar sobre algo que gosta na tecnologia ou at√© mesmo se apresentar como um .gif, informando coisas que gosta, se est√° procurando uma oportunidade ou n√£o, mas n√£o √© obrigat√≥rio, √© apenas uma forma de chamar a aten√ß√£o de quem est√° vendo seu perfil.

Logo abaixo, voc√™ se apresenta, como "Bem-vindo ao meu perfil", "Oi, meu nome √© Fulano", ou um t√≠tulo seu README, enfim, √© uma forma de voc√™ se apresentar para quem est√° vendo seu perfil de uma maneira simp√°tica.

Depois, voc√™ pode colocar um resumo sobre voc√™, os setores de empresas em que j√° trabalhou para mostrar que em quest√£o empresarial, voc√™ n√£o possu√≠ um nicho espec√≠fico ou fala sobre voc√™ de uma forma bem breve, mas intuitiva.

<p align="center"><img src="https://user-images.githubusercontent.com/23272064/215125149-c2a9139d-b0ad-4151-87ac-86302ed0c4ca.png" alt="Github/Yagasaki7K"/></p>

Depois disso, fale sobre voc√™, fale sobre alguns projetos que voc√™ carrega no peito, mas apenas indicativo, nada de fazer um mural sobre isso, sen√£o teremos muita informa√ß√µes. Separe as tecnologias que voc√™ sabe, as tecnologias que est√° aprendendo, as tecnologias que j√° trabalhou e as tecnologias que pretende aprender, assim a pessoa tem uma no√ß√£o maior do n√≠vel da carreira que est√° seguindo, os passos que est√° tomando e as diretivas que est√° seguindo. Informe tamb√©m sobre o que est√° buscando, qual √© o seu foco, se est√° em busca de uma mentoria, deixe explicito suas inten√ß√µes.

N√£o acho interessante informar sobre coisas que gosta de fazer como ler, jogar, ouvir m√∫sica, pois isso √© algo pessoal, e n√£o √© algo que vai te ajudar a ser contratado de alguma maneira, at√© hoje n√£o vi como um ponto positivo durante uma entrevista. Mas se mesmo assim quiser colocar, use essa se√ß√£o.

E depois informe algumas curiosidades sobre voc√™, mas de novo, focado no √¢mbito da tecnologia, projetos a parte que j√° fez, algo que j√° desenvolveu fora da trilha que est√° seguindo e seria interessante, cursos que j√° fez, palestras que j√° participou, enfim, algo que te fa√ßa ser lembrado de uma forma positiva.

Voc√™ pode inserir links de publica√ß√µes, como eu fiz a respeito de artigos que j√° escreveu, ou artigos que gostam e leva como inspira√ß√£o, n√£o √© obrigat√≥rio, mas √© uma forma de voc√™ mostrar que voc√™ √© uma pessoa que est√° sempre em busca de conhecimento e que est√° sempre se atualizando.

## Coisas que n√£o recomendo

Colocar muitas informa√ß√µes e transformar o seu README como um curr√≠culo n√£o √© ideal, j√° que existem muitas informa√ß√µes que n√£o s√£o relevantes para o recrutador, como por exemplo, colocar informa√ß√µes sobre o seu estado civil, se voc√™ tem filhos, se voc√™ tem animais de estima√ß√£o, se voc√™ gosta de ler, se voc√™ gosta de jogar, enfim, essas informa√ß√µes n√£o s√£o relevantes para o recrutador, ent√£o, recomendo n√£o colocar.

Encher de figurinhas, como se estiv√©ssemos na √©poca do Orkut s√≥ mostra o quanto desorganizado visualmente √© voc√™, deixar aquela cobrinha comendo commits n√£o √© nenhum pouco interessante? O motivo? Voc√™ consome um bloco de tamanho para reservar para algo nada visualmente atrativo e que n√£o traz nenhuma informa√ß√£o relevante para o recrutador.

--

Existem v√°rias maneiras de se apresentar, n√£o existe um m√©todo √∫nico, mas o recomendado √© voc√™ ver como seria a vis√£o do recrutador, a informa√ß√£o √© relevante? Falar que voc√™ √© Design Gr√°fico √© interessante quando a vaga √© de fullstack ou √© interessante para uma comunidade de desenvolvimento?

Coloque as suas decis√µes na ponta do l√°pis e vai filtrando com as informa√ß√µes que voc√™ possua.

N√£o esque√ßa de deixar bem documentado seus projetos e claro, informe um link para que o recrutador possa ver o que voc√™ desenvolveu, ele n√£o vai saber dar um git clone instalar o yarn para rodar a aplica√ß√£o por exemplo. Facilite a vida deles e de quem est√° olhando o seu perfil.

No mais √© isso, qualquer d√∫vida, voc√™ poder√° me encontrar na [Kalify Community‚Ñ¢](https://discord.gg/jhSepmE7nN?ref=yagasaki.dev/blog) pelo Discord.
]]></description>
            <link>https://yagasaki.vercel.app//articles/perfil-github</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/perfil-github</guid>
            <pubDate>Fri, 27 Jan 2023 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Quando decidir se √© melhor trabalhar em um monorepo ou reposit√≥rios individuais?]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1590247813693-5541d1c609fd?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1509&q=80 "Nana Smirnova")

> _"Eu estava em uma reuni√£o da empresa que trabalho e o assunto era sobre o monorepo, o que √©, como funciona e quando √© melhor utilizar. A discuss√£o foi muito boa e acredito que todos os envolvidos sa√≠ram com uma vis√£o diferente sobre o assunto..."_

Eu estava em uma reuni√£o da empresa que trabalho e o assunto era sobre o monorepo, o que √©, como funciona e quando √© melhor utilizar. A discuss√£o foi muito boa e acredito que todos os envolvidos sa√≠ram com uma vis√£o diferente sobre o assunto. Mas, como sempre, ficou aquela d√∫vida, quando √© melhor utilizar um monorepo ou v√°rios reposit√≥rios?

<!--truncate-->

Existem v√°rios fatores a considerar quando se decide se √© melhor trabalhar em um monorepo ou em v√°rios reposit√≥rios individuais. Alguns fatores a considerar incluem:

Tamanho do projeto: Monorepos s√£o mais adequados para projetos maiores e mais complexos, pois permitem que voc√™ mantenha todo o c√≥digo e os recursos relacionados em um √∫nico lugar.

Colabora√ß√£o: Monorepos podem ser mais eficientes para equipes que trabalham em m√∫ltiplos projetos ou componentes, pois permitem que os desenvolvedores compartilhem c√≥digo e recursos com facilidade.

Integra√ß√£o cont√≠nua: Monorepos podem ser mais f√°ceis de integrar com ferramentas de integra√ß√£o cont√≠nua, pois permitem que voc√™ execute testes e builds em v√°rios projetos ao mesmo tempo.

Depend√™ncias: Monorepos podem ser mais f√°ceis de gerenciar quando se trata de gerenciar depend√™ncias entre projetos, pois permitem que voc√™ fa√ßa refer√™ncia a outros projetos diretamente no mesmo reposit√≥rio.

Flexibilidade: Monorepos permitem mais flexibilidade na estrutura do projeto, pois permitem que voc√™ mude a estrutura do projeto a qualquer momento, enquanto que reposit√≥rios individuais s√£o mais r√≠gidos.

No final, a escolha entre um monorepo ou reposit√≥rios individuais depende da sua equipe e do projeto em quest√£o. √â importante avaliar as necessidades do seu projeto e as vantagens e desvantagens de cada abordagem antes de tomar uma decis√£o.

E um conselho que deixo √©, use o Nx, um dos melhores gerenciadores de monorepos que existe no mercado. Ele √© muito f√°cil de usar e permite que voc√™ crie um monorepo com apenas alguns comandos e de diversas formas poss√≠veis como: Docusaurus, React, Next, Vite, Svelte e etc.
]]></description>
            <link>https://yagasaki.vercel.app//articles/monorepo</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/monorepo</guid>
            <pubDate>Fri, 30 Dec 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Removendo o Twitter Analytics do Feed]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1616469829167-0bd76a80c913?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80 "Souvik Banerjee")

> _"Hoje mais cedo estava navegando no Twitter como de costume e o usu√°rio Thiago havia publicado uma dica, uma solu√ß√£o de nossos problemas. Para quem usa o Twitter atrav√©s do computador, sabe que com a ades√£o do Twitter Analytics tudo ficou mais polu√≠do ..."_

Hoje mais cedo estava navegando no Twitter como de costume e o usu√°rio [Thiago](https://twitter.com/ThiagoMota014?ref=yagasaki.dev/blog) havia publicado uma dica, uma solu√ß√£o de nossos problemas. Para quem usa o Twitter atrav√©s do computador, sabe que com a ades√£o do Twitter Analytics tudo ficou mais polu√≠do, sujo com mais coisas em tela, e Elon Musk est√° atr√°s de adicionar o bot√£o para ficar alternativo essa op√ß√£o, ele j√° se prontificou quanto a isso, a feature de ver quantas pessoas visualizaram seus tweets existe e √© um desastre s√≥, mas enquanto esse bot√£o de ligar e desligar n√£o chega, segue a dica de nosso amigo.

<!--truncate-->

Inicialmente v√° at√© a p√°gina do feed de not√≠cias do seu Twitter. Abra o console atrav√©s do F12 ou com o bot√£o direito do mouse e inspecionar elemento, v√° na aba de "Console", cole o c√≥digo abaixo e instantaneamente ver√° a feature sumindo:

```javascript
    function removeIcon () {  
    setInterval(() => {
    [...document.querySelectorAll(".css-1dbjc4n.r-18u37iz.r-1h0z5md")].filter(div => div.innerHTML.includes("analytics")).forEach(div => div.remove())
    }, 50)
    };
    removeIcon()
```

Mas lembre-se, toda vez que voc√™ reiniciar a p√°gina (F5), ser√° necess√°rio colocar o c√≥digo novamente, ent√£o deixe essa dica salva enquanto o Elon Musk tem dificuldade para fazer isso em grande escala, apesar que isso seria maior gambiarra se estivesse no c√≥digo fonte do Twitter üòÇ

Existe o [README](https://github.com/Thiago-Mota-Santos/Remove-twitter-icon?ref=yagasaki.dev/blog) do c√≥digo dele, caso voc√™ esteja com dificuldades para entender como funciona o processo e conta com um .gif do passo a passo necess√°rio para remover o bot√£ozinho mal feito.

Atualiza√ß√£o: Para uma quest√£o mais permanente, existe tamb√©m uma extens√£o do Chrome conhecida como **Hide Twitter Elements**, desenvolvido pelo [Shodipo Ayomide](https://shodipoayomide.com?ref=yagasaki.dev/blog) e que atrav√©s dele, voc√™ consegue esconder Analytics, Retweets, Coment√°rios e at√© Likes, deixando um aplicativo minimalista e de acordo com a suas necessidades, voc√™ pode encontrar a [extens√£o do Chrome](https://chrome.google.com/webstore/detail/hide-twitter-elements/fbffhgacjoeloopjakfbdgcdfaklionn/related?hl=en?ref=yagasaki.dev/blog) ou o [c√≥digo aberto](https://github.com/Developerayo/Hide-Twitter-Elements?ref=yagasaki.dev/blog) do projeto para desenvolver em outros navegadores ou melhorar a vers√£o j√° atual.
]]></description>
            <link>https://yagasaki.vercel.app//articles/twitter-analytics</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/twitter-analytics</guid>
            <pubDate>Wed, 28 Dec 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Dark Mode - LocalStorage, Scheme, Button Default ou Local Time?]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1607027340690-37e80b0f1b31?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=773&q=80 "Sten Ritterfeld")

> _"O Dark Mode vem sendo requisitado por muitas pessoas, isso at√© mesmo por mim, ningu√©m aguenta aquele holofote na sua cara √†s duas da manh√£ por abrir uma p√°gina web que n√£o tem dark mode incluso."_

Eu por exemplo, recorro ao Dark Reader por padr√£o e vou filtrando quando o site ou p√°gina j√° possu√≠ ou n√£o o sistema de temas alternativos, assim, vou configurando todo mundo que acesso para n√£o me agredir os olhos.

Mas vamos l√°, aos desenvolvedores.

Vou analisar com voc√™s o seguinte cen√°rio.

Imagine que voc√™ est√° desenvolvendo um site, um portf√≥lio, um ecommerce ou qualquer outra p√°gina na web e voc√™ precisa incrementar o dark mode, qual √© a melhor forma de fazer isso?

Atrav√©s do LocalStorage ou Cookies? Atrav√©s do Scheme de cores que puxa as cores padr√£o do dispositivo do usu√°rio? Deixamos no bot√£o e o usu√°rio vai ter que clicar para trocar toda vez que acessar? Ou atrav√©s do hor√°rio?

<!--truncate-->

Vamos discutir os pr√≥s e contras de cada um:

### LocalStorage ou Cookies

LocalStorage ou Cookies √© interessante pelo seguinte fator, o usu√°rio escolhe qual tema seguir, se √© dark ou light e sempre que ele voltar, ele estar√° com aquele tema escolhido. O problema disso? √â que toda vez que acessar um dispositivo novo, ele √© obrigado a fazer a configura√ß√£o novamente, e claro, se ele esqueceu no modo light e retornar em uma hora da noite, ele vai receber aquela luz imensa no meio da cara.

### Prefers-color-scheme

Prefers tem um m√©todo inteligente, ele vai pegar as cores do dispositivo do usu√°rio (ou browser) e vai informar ao CSS qual √© o modo, se for light, ele manter√° igual, se for dark, ele ir√° jogar o tema escuro antes de qualquer coisa, assim, poupando configura√ß√£o ou at√© mesmo acidentes. A desvantagem nisso √© que n√£o √© poss√≠vel deixar configur√°vel para o usu√°rio, exceto atrav√©s do navegador ou dispositivo e, caso o usu√°rio tenha um dispositivo antigo que n√£o possua dark mode, ele infelizmente ficar√° travado no light mode.

### Bot√£o de switch

O bot√£o de switch √© uma tratativa interessante tamb√©m, mas traz consigo uma dificuldade, diferente do LocalStorage, que toda vez que o usu√°rio acessar, ele √© obrigado a configur√°-lo novamente e fica travado nessa limita√ß√£o, j√° que por default ele estar√° em light mode, inclusive a cada atualiza√ß√£o de p√°gina.

### Hor√°rio de dia/noite / Local Time

J√° o m√©todo dia/noite que foi abordado inicialmente pelo Essentials ~ mas hoje n√£o funciona mais assim ~ √© das seis da manh√£ at√© as seis da noite ficar no light mode, e das seis da noite √†s seis da manh√£ ficar no dark mode. A desvantagem nisso √© ficar limitado ao hor√°rio do dia, n√£o tendo personaliza√ß√£o nenhuma e travado nesse esquema. Para aqueles que usam light mode at√© mesmo de noite, ficaria a limita√ß√£o de ficar no dark mode e n√£o poder fazer nada a respeito

‚Äî

E a√≠? O que achou? Qual √© a melhor alternativa para se desenvolver e aplicar no seu site ou projeto? Vale lembrar que dessas quatro alternativas, nenhuma delas √© obrigat√≥ria, mas √© bom entrarmos num consenso e claro, elas n√£o s√£o mescladas, j√° que n√£o √© poss√≠vel deixar o LocalStorage ativo enquanto puxa o Prefers-colors-scheme, j√° que ele sempre vai substituir o mais antigo.

‚Äî

Eu ensino atrav√©s de analogia e √© a coisa mais interessante que existe e poucas pessoas usam, j√° que voc√™ ensina usando o cotidiano como exemplo.

Queria ter recebido esse recado mais cedo, teria me ajudado muito e poupado muita dor de cabe√ßa para entender o que √© um teste unit√°rio.

Em quest√£o de c√≥digo, vai de cada um se vai usar um Jest, React Testing Library ou qualquer outro, o importante √© saber o que de fato acontece, quando incrementar e como incrementar.

![Twitter: Yagasaki7K](https://miro.medium.com/max/640/1*Zp-46WgD9XLCn-1iwdaIjQ.webp?ref=yagasaki.dev/blog)
]]></description>
            <link>https://yagasaki.vercel.app//articles/darkmode</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/darkmode</guid>
            <pubDate>Fri, 16 Dec 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Testes Unit√°rios - Como e quando usar para iniciantes]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1471107340929-a87cd0f5b5f3?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=773&q=80 "Aaron Burden")

> _"Me considero desenvolvedor fazem oito anos ~ desde essa publica√ß√£o ~ e somente agora entendi como e para qu√™ serve teste unit√°rio."_

Me considero desenvolvedor fazem oito anos ~ desde essa publica√ß√£o ~ e somente agora entendi como e para qu√™ serve teste unit√°rio.

O teste unit√°rio √© algo que √© muito requerido pelo mercado, mas POUQU√çSSIMA gente sabe DE FATO, como explicar para um iniciante para que serve um teste unit√°rio e quando utiliz√°-lo.

E eu vou acabar com esse problema DE VEZ! J√° que √© um conselho que eu gostaria de ter recebido quando comecei a escrever c√≥digos em React/NextJS em 2020.

<!--truncate-->

### A Analogia

Imagine o seguinte cen√°rio, voc√™ tem um carrinho e precisa saber o pre√ßo de todas as coisas que nele tem. Seria muito custoso para voc√™ ficar pensando em cada pre√ßo, fazendo o c√°lculo de cabe√ßa para finalmente chegar no caixa e dar o dinheiro certinho, certo?

Esse cen√°rio funciona para coisas que a gente consegue carregar na nossa m√£o, mas quando se trata de um carrinho, √© muito trabalhoso e muitas vezes nem vai estar certo.

### O Teste Unit√°rio

O teste unit√°rio nada mais √© do que o caixa do supermercado, ele ser√° respons√°vel por pegar cada produto e validar ele, verificando o pre√ßo e se de fato ele √© o produto que voc√™ selecionou. Nossa mente processa isso t√£o rapidamente que se quer analisa duas vezes se pegamos o produto corretamente, exceto quando √© um produto que n√£o foi verificado na primeira vez.

Ent√£o saiba que para usar um teste unit√°rio, n√£o √© necess√°rio para uma conta de 1+1 por exemplo ou 35+65, ou seja, coisas simples, mas quando envolve muita entrada e sa√≠da de dados, algo mais complexo, como o caso de um carrinho de compras, ent√£o sim, incremente um teste unit√°rio, verifique se aquela classe ou fun√ß√£o est√° agindo como deveria para evitar qualquer tipo de erro, problema ou dor de cabe√ßa na sua vida, ainda mais quando se trata de pagar pelas compras no final dessa brincadeira.

Antigamente us√°vamos muito o papel para testar se a l√≥gica de nossa programa√ß√£o estava correta, mas em quest√µes profissionais, n√£o ser√° poss√≠vel ficar explicando tudo que acontece no papel para cada membro que entrar na equipe, ent√£o, escreva testes.

‚Äî

Eu ensino atrav√©s de analogia e √© a coisa mais interessante que existe e poucas pessoas usam, j√° que voc√™ ensina usando o cotidiano como exemplo.

Queria ter recebido esse recado mais cedo, teria me ajudado muito e poupado muita dor de cabe√ßa para entender o que √© um teste unit√°rio.

Em quest√£o de c√≥digo, vai de cada um se vai usar um Jest, React Testing Library ou qualquer outro, o importante √© saber o que de fato acontece, quando incrementar e como incrementar.
]]></description>
            <link>https://yagasaki.vercel.app//articles/unit-test</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/unit-test</guid>
            <pubDate>Tue, 13 Dec 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[React Email de Zeno Rocha]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1557200134-90327ee9fafa?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 "Stephen Phillips")

> _"Zeno Rocha imaginou aquilo que todo desenvolvedor front-end estava cansado de tentar desenvolver."_

Zeno Rocha imaginou aquilo que todo desenvolvedor front-end estava cansado de tentar desenvolver. Ou at√© mesmo sair das antigas sem√¢nticas do HTML que j√° est√£o para l√° de ultrapassados.

Quando o assunto √© email marketing, j√° sabemos a dificuldade que isso √© para muita gente, isso inclui principalmente o CSS j√° que n√£o temos o CSS-grid ao nosso lado e dependemos de tables para todos os lados.

<!--truncate-->

Zeno foi a frente e j√° deu seu primeiro pontap√© em desenvolver layouts de email marketing usando React e Typescript, dessa forma, produzimos emails mais profissionais e com cara de big techs.

![](https://miro.medium.com/max/720/0*FNaEcpSKyGITB_lC?ref=yagasaki.dev/blog)

A imagem acima √© um exemplo de layout produzido como um convite para ingressar em um projeto da Vercel, mas usando a estiliza√ß√£o e o modelo direto do React Email.

Interessante o profissionalismo que ele propaga e como isso torna tudo muito bem produzido e mais bonito, n√£o √© mesmo?

Em breve ~ com base na data da produ√ß√£o desse artigo ~ Zeno estar√° produzindo a vers√£o live preview, dessa forma voc√™ poder√° fazer testes diretamente no browser ao inv√©s de enviar centenas de e-mail testes para avaliar e conferir os debugs.

Mais informa√ß√µes voc√™ poder√° estar acompanhando a documenta√ß√£o do projeto original [atrav√©s desse link](https://react.email?ref=yagasaki.dev/blog).
]]></description>
            <link>https://yagasaki.vercel.app//articles/reactemail</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/reactemail</guid>
            <pubDate>Tue, 06 Dec 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[3¬∫ Lugar no Hackathon pela AMBEV em parceria com a Shawee]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1566633806327-68e152aaf26d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 "Gerrie van der Walt no Unsplash")

> _"Nos dias 11, 12 e 13 de dezembro, participei do meu primeiro hackathon como Desenvolvedor Web, o Hackeando a Cervejaria do Futuro ‚Ä¶"_

Nos dias 11, 12 e 13 de dezembro, participei do meu primeiro hackathon como Desenvolvedor Web, o Hackeando a Cervejaria do Futuro. O Hackathon, organizado pela Ambev em parceria com a Shawee.

T√≠nhamos como desafios: Cervejaria Flex√≠vel e Sustent√°vel e Produto Perfeito. Minha equipe acabou entre os finalistas, levando o terceiro lugar do evento.

<!--truncate-->

Nosso projeto foi o Hopyeast, onde utilizamos t√©cnicas de Engenharia Gen√©tica para obter inova√ß√£o. Foi uma experi√™ncia desafiadora e agregadora de bastantes aprendizados, desenvolver uma solu√ß√£o vi√°vel para um problema em um final de semana me proporcionou reflex√µes sobre meu modo de trabalho, sobre organiza√ß√£o e foco. Aprendizados que levarei sempre comigo para os pr√≥ximos desafios da minha trajet√≥ria profissional.

Agrade√ßo ao meu time, Laura Camargos Pimenta, Eric Coimbra e Gabriela Cavalcanti sem eles n√£o ter√≠amos chegado ao p√≥dio.

<center><iframe width="663" height="382" src="https://www.youtube.com/embed/KOVlXuQGAzY" title="HACKA AMBEV: Grandes solu√ß√µes para a Cervejaria do Futuro" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></center>
]]></description>
            <link>https://yagasaki.vercel.app//articles/hackathon-ambev</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/hackathon-ambev</guid>
            <pubDate>Tue, 06 Dec 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Ilustra√ß√£o vs Intelig√™ncia Artificial]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1513364776144-60967b0f800f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=871&q=80 "Anna Kolosyuk")

> _"Estava navegando no Twitter e vi, n√£o uma, n√£o duas, mas v√°rias reclama√ß√µes de artistas sobre ‚Äúpessoas que pagaram para ter imagens geradas pela intelig√™ncia artificial e n√£o apoiam o artista‚Äù."_

Com esse lance todo, queria mostrar minha OPINI√ÉO a respeito disso, ainda mais sendo um Desenvolvedor de Software que sou, e por ter adquirido tamb√©m ao material, acredito que isso poder√° dar uma vis√£o bem interessante sobre a coisa como um todo e isso envolve at√© mesmo minha experi√™ncia.

Vamos l√°.

<!--truncate-->

### Pre√ßo x Acessibilidade x Personaliza√ß√£o

Um dos pontos que acredito que as pessoas aderem a essa ferramenta √© em quest√£o de pre√ßo x acessibilidade x personaliza√ß√£o. Pre√ßo: Voc√™ vai pagar menos em v√°rias artes, coisa que um artista vai te cobrar em uma √∫nica arte. Acessibilidade: Estar√° pronto em pouco tempo para mim. Personaliza√ß√£o: A variedade ofertada √© muito mais que um artista.

Mas vamos aonde eu quero chegar. N√£o estou desvalorizando a profiss√£o do artista, desenhista, ilustrador, JAMAIS!

Sou desenvolvedor, sei o quanto √© chato voc√™ mostrar seu trabalho para o cliente e ele falar que est√° muito caro, ou n√£o valorizar o esfor√ßo que teve para chegar nesse resultado. Sabemos que abaixo desse valor e tempo √© explora√ß√£o e sabemos dar valor ao nosso trabalho, esfor√ßo, ferramenta e estudo em cima daquela arte ou produto.

Mas infelizmente, a realidade √© essa. Quanto mais barato, mais r√°pido for, ser√° melhor, o pessoal n√£o quer saber quem est√° por tr√°s disso, mas sim na acessibilidade sobre ter aquele conte√∫do, aquele resultado.

A quest√£o da personaliza√ß√£o √© que em quest√£o de vinte minutos ~ usando a Lensa como exemplo ~ temos cinquenta imagens com dez variedades de estilo ~ usando a vers√£o b√°sica da plataforma ~ mas em quanto tempo levaria um artista para produzir na mesma medida? Eis a quest√£o. As pessoas querem variedades de algo em pouco tempo.

E a personaliza√ß√£o? Mudan√ßa de tra√ßos? Sem falar as altera√ß√µes, porque SEMPRE existe aqueles clientes chatos que quer uma coisa, v√™ outra e quer sempre ficar mudando, trocando totlamente daquilo que desejou inicialmente, √© chato, √© frustrante e desgastante, leva tempo, recurso e dinheiro.

### O BOOM para o artista
#
O BOOM √© que agora voc√™s (artistas) ter√£o o funil correto de venda, o mesmo exemplo que eu, como desenvolvedor tenho. Quer pagar mais barato? Quer ir l√° com o primo (IA) que acha melhor e mais em conta? Fica a vontade, mas a personaliza√ß√£o, a exclusividade e um trabalho bem feito, somente eu poderei oferecer. Isso √© algo que o Wix, Blogger, Wordpress oferece para clientes no-code, e est√° tudo bem, mas isso aumenta em mais minha prefer√™ncia em transformar o meu trabalho em algo exclusivo, √∫nico e no pre√ßo que DEVE DE FATO, ser cobrado para aquele que DE FATO quer o meu trabalho.

A Intelig√™ncia Artificial √© um ponto em que vai abrir muitas alas para os artistas, tanto em quest√£o de melhorias, quanto em quest√£o de mostrar que √© b√°sico o servi√ßo que eles oferecem, sendo generalizado, bugado e limitado.

√â hora de se reinventar, ser diferente, colocar a criatividade em dia, sei que √© muito frustrante ver algo sendo tomado pela tecnologia, senti isso quando vi o Wix pela primeira vez, um trabalho que levo quatro dias sendo destru√≠do de forma r√°pida e sendo substitu√≠do por algo barato e ralo.

Mas levei em considera√ß√£o uma √∫nica coisa, ELE √â LIMITADO, n√≥s n√£o.

Cres√ßa, invista em desenvolver artes para jogos, livros, lofi, personagens √∫nicos ~ um exemplo disso √© o artista que compartilhava suas artes no Twitter e hoje √© patrocinado pela TNTSportsBR por imaginar personagens de luta sendo representado em pa√≠ses e estados brasileiros ~ se reinvente. Esse tipo de coisa n√£o √© algo que uma intelig√™ncia artificial poder√° substituir t√£o facilmente, ainda n√£o.

### N√£o adianta chorar

Infelizmente n√£o adianta, √© uma luta di√°ria para ser melhor que uma intelig√™ncia artificial, se destacar, ganhar aten√ß√£o no mercado , concorrer com outros artistas e ser √∫nico, eu sei que n√£o √© f√°cil. Mas todo mundo, com esfor√ßo, for√ßa de vontade e persist√™ncia ter√° seu lugar ao sol.

Erga essa cabe√ßa!

E no mais, busque ser √∫nico, se destaque, n√£o se lamente.

Lembre-se: Um mangak√° ~ artista de desenho japon√™s ~ n√£o ser√° substitu√≠do por uma IA por conta do seu esfor√ßo, por ser original e √∫nico, lembre-se disso.

Um abra√ßo a todos os colegas ilustradores e desenhistas, que redobrem suas for√ßas e dedica√ß√µes para conseguir finalmente atingir seus sonhos e objetivos. No mais! Estarei no Twitter.

![Twitter: @RandallRandomm](https://miro.medium.com/max/640/1*1LXClHrYkGunrUpphemHWA.webp?ref=yagasaki.dev/blog)
]]></description>
            <link>https://yagasaki.vercel.app//articles/artificialart</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/artificialart</guid>
            <pubDate>Fri, 02 Dec 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Github Desktop vs WSL]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1555532538-dcdbd01d373d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=964&q=80 "Florian Krumm")

> _"Quando se trata de ter dois ambientes, os problemas s√£o maiores, mas √© melhor do que ter um problema maior do que eles que possa tomar muito de seu tempo."_

Inicialmente vou apresentar a situa√ß√£o em que trabalho hoje. Tenho um computador com uma Geforce GTX 1660, i7‚Äì3770, 24GB de RAM, 1 HD 1TB e 1 SSD 256GB com Windows 10 Pro.

Ah, mas voc√™ √© desenvolvedor, porque n√£o usa alguma Distro Linux?
O √∫nico problema √© que direto mexo com Adobe Photoshop e gosto muito de jogos que n√£o possuiem compatibilidade com Linux como jogos que est√£o na Steam, Epic Games, Ubisoft, EA Play, enfim, o que leva muita dor de cabe√ßa para tentar se adaptar.

<!--truncate-->

### T√°, mas ent√£o, que tal um Dual Boot?

O problema do dual boot √© que j√° fiz ele cerca de tr√™s vezes na minha vida. O que mais me quebra √© ter que ficar desligando e ligando pra pegar certas coisas ou fazer certas edi√ß√µes ‚Äî como trabalho em alguns projetos solos, dependo do Photoshop para fazer edi√ß√µes r√°pidas e que j√° tenho facilidade no manejo ‚Äî e sem falar que nas tr√™s vezes aconteceu um problema com um seguinte cara: O tal do GRUB corrumpido.

Essa √© a maior dor de cabe√ßa que existe, um GRUB corrompido, para quem n√£o sabe, ocorre quando voc√™ troca muito de sistema e existe a incompatibilidade deles em comunicarem entre si, identificarem que s√£o sistemas diferentes, o que acaba acontecendo deles se corromperem. Sim, se corromperem, os dois sistemas v√£o pro saco. ~ Espero estar certo sobre essa linha de pensamento, se eu estiver equivocado, me corrijam.

O que gera uma mega dor de cabe√ßa, arquivos inrecuper√°veis, enfim. Minha solu√ß√£o para isso, foi WSL.

WSL √© o Windows com um Subsystem do Linux no pr√≥prio sistema, permitindo eu mexer no Terminal do Ubuntu (ou qualquer outra distro Linux instalada) e usufruir como se estivesse usando uma m√°quina Linux.

T√°, mas vai ao que importa.

### Qual √© o problema do Github Desktop vs WSL?

Ao colocar projetos do Github no WSL, n√£o existe problema algum. Mas voc√™ pedir para que o Github Desktop (Windows), veja os arquivos do Linux (WSL) e que fa√ßam os commits, todo bonitinho, tem um problema.

O Windows e Linux n√£o se conversam, a maneira de gerar um arquivo √© diferente, a leitura de documentos, dependendo, √© diferente, ent√£o acaba que gerando v√°rios conflitos. E um deles √© que existe a grande probabilidade ~ aconteceu comigo, no meu caso ~ dele (Windows) gerar arquivos que jamais foram modificados ou criados e que s√≥ v√£o servir para poluir a aplica√ß√£o e atrapalhar sua vida, j√° que n√£o √© poss√≠vel remover eles (exceto pela CLI) e se deixar eles guardados (Stage Commits), eles v√£o atrasar voc√™ de trocar de brench. Resumindo, um saco.

A solu√ß√£o para isso? Criar o mesmo reposit√≥rio no Windows e fazer essa manobra nada agrad√°vel, mas que me poupar√° de v√°rias dores de cabe√ßa com o Github Desktop.

Criando o projeto no Windows, fazendo os commits no WSL e manipulando as cherry-picks no Windows, fica muito mais f√°cil.

### E por que voc√™ n√£o usa o Git no Terminal direto e para de usar o Github Desktop? Facilitaria sua vida, n√£o?

Sim, facilitaria, n√£o iria precisar de dois projetos no mesmo dispositivo e essa manobra sem sentido. N√£o √© falta de profissionalismo da minha parte em decorar os comandos do git, muito pelo contr√°rio, o problema √© que sou algu√©m mais front-end, vamos assim dizer e ~ muitos v√£o me hatear por isso ~ mas, nesse aspecto, prefiro o visual e principalmente quando existem conflitos, problemas de versionamento, acompanhar a √°rvore de commits para ver quem subiu, quem n√£o atropelou ningu√©m o Github Desktop facilita em muito minha vida.

Sem falar que j√° me evitou in√∫meras vezes de subir arquivos indesejav√©is ou que se quer foram alterados e est√£o subindo mesmo assim.

√â muito melhor ~ no meu ponto de vista ~ ser mais visual e trabalhar corretamente, do que simplesmente ser cool e oldschool e viver batendo cabe√ßa por fazer merda, se matar em fazer uma cherry-pick ou alterar as ordens de commit.

Mas enfim, essa foi apenas uma experi√™ncia que gostei de compartilhar e espero que sirva para inspirar ou qualquer coisa do tipo. Se quiser conversar um pouco a respeito, estarei tanto no Twitter como @Yagasaki7K como no Discord atrav√©s da [Kalify Developers](https://discord.gg/jhSepmE7nN?ref=yagasaki.dev/blog).
]]></description>
            <link>https://yagasaki.vercel.app//articles/githubvswsl</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/githubvswsl</guid>
            <pubDate>Tue, 18 Oct 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Enviando um E-mail Usando Next.js ou React.js com Fetch]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1596526131083-e8c633c948d2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80 "Brett Jordan")

> _"Um desafio seguido de muita quebra de cabe√ßa e depois, o alivio. Obrigado The Programmer‚Äùs Hangout!"_

Essa semana me deparei com um problema, era um problema simples, enviar uma requisi√ß√£o para um endpoint (POST) para enviar o nome do usu√°rio e o e-mail dele, a famosa Newsletter. Em tese n√£o tem muito segredo nesse c√≥digo, voc√™ precisa pegar os valores do input e passar para o corpo da requisi√ß√£o para enfim depois, enviar em um formato JSON (comunica√ß√£o universal).

A quest√£o √© que eu estava com um problema t√£o grande com o NextJS a respeito de enviar a requisi√ß√£o, que toda as vezes que eu clicava em enviar, ele retornava _‚ÄúFailed to fetch‚Äù_, n√£o entendi o porqu√™, isso porque estava usando `console.log(error)` e ele apenas informava isso e nada mais.

<!--truncate-->

Gra√ßas a um usu√°rio do Discord (gosha#6801), me informou que pelo fato de estar enviando uma requisi√ß√£o utilizando form, n√£o dava tempo de enviar a requisi√ß√£o, j√° que todas as vezes, ele dava refresh na p√°gina e cancelava. A resposta para isso? Era utiliza o `onSubmit={(e) => e.preventDefault()}` e redirecionar o usu√°rio quando terminasse a execu√ß√£o.

O que o c√≥digo faz? Ao dar submit, ao inv√©s dele dar aquele famoso refresh do formul√°rio, ele apenas enviar√° e ir√° dar um ‚Äúpausebreak‚Äù, n√£o dando continuidade na quest√£o de refresh, assim ficar√° a sua merc√™ do que quer fazer em seguida.

Foi de primeira, na lata, certeira. E agora, documento isso para servir de li√ß√£o n√£o apenas para mim, mas para qualquer um que estiver com dificuldade de utilizar uma requisi√ß√£o em NextJS ou at√© mesmo em React.

No final do artigo, foi o c√≥digo utilizado para enviar uma requisi√ß√£o, caso queira reaproveitar, √© s√≥ substituir o API_URL pela URL do servidor que voc√™ deseja enviar: Corpo do formul√°rio:

`<form action=‚Äù‚Äù onSubmit={(e) => e.preventDefault()}> { ‚Ä¶ conte√∫do ‚Ä¶ } </form>`

Vale lembrar que os alert s√£o apenas para informar o usu√°rio do que aconteceu. Simplesmente pegar o dado e redirecionar ele sem avisar, faria com que ele ficasse em duvida se a mensagem foi enviada mesmo ou n√£o. Quanto ao JSON.stringify(submit), pegamos o valor do submit que nada mais que o corpo da requisi√ß√£o, j√° pegando os valores dos inputs baseado no ID (voc√™ pode capturar esses dados e colocar dentro de um useState se for algo mais din√¢mico ainda e redirecionar os valores dos States ao inv√©s do getElementByID direto, como eu fiz). Essa foi minha experi√™ncia, n√£o estou acostumado, quebrei bastante a cabe√ßa e espero que possa ajudar o meu eu do futuro e tamb√©m a voc√™s.

Qualquer d√∫vida estou a disposi√ß√£o no Twitter como @Yagasaki7K.

```js
// inside a function to get values and send to API
let nome = document.getElementById('nome').value;
let email = document.getElementById('email').value;

let submit = {
    nome: nome,
    email: email
}

// send a contact message to API
fetch('API_URL', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify(submit),
    })
    .then((response) => response.json())
    .then((data) => {
        console.log('Success:', data);
        alert('Mensagem enviada com sucesso!');
        window.location.href = '/';
    })
    .catch((error => {
        console.error('Error:', error);
        alert('Erro ao enviar a mensagem, tente novamente mais tarde!');
    });
});
```
]]></description>
            <link>https://yagasaki.vercel.app//articles/enviando-email-com-fetch</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/enviando-email-com-fetch</guid>
            <pubDate>Mon, 15 Aug 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[14 H√°bitos de Desenvolvedores Altamente Produtivos]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1542596081-6d3eaca5240c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 "Drew Beamer")

> _"O livro foi escrito por Zeno Rocha e foi resumido pelo Felipe Suri."_

Eu estava navegando na internet quando me deparei com esse livro. 14 H√°bitos de Desenvolvedores Altamente Produtivos, escrito pelo Zeno Rocha, n√£o cheguei a fazer a aquisi√ß√£o dele, mas encontrei um breve resumo do Felipe Suri e decidi compartilhar alguns desses h√°bitos, n√£o colocarei os catorze aqui, j√° que prefiro selecionar os mais importantes para mim, que futuramente servir√° como um lembrete e acredito que servir√° tamb√©m para voc√™.

<!--truncate-->

### Foco nos fundamentos

> ‚ÄúVoc√™ pode praticar arremessos oito horas por dia, mas se sua t√©cnica estiver errada, tudo o que voc√™ se tornar√° ser√° muito bom em arremessar da maneira errada. Pratique os fundamentos e o n√≠vel de tudo o que voc√™ fizer vai subir.‚Äù ‚Äî Michael Jordan.

A ideia principal √© que, aprender os fundamentos vai te preparar para o futuro. Se voc√™ deseja se tornar um √≥timo desenvolvedor, √© importante entender os principais conceitos, como algor√≠timos, l√≥gica, redes, acessibilidade, seguran√ßa e experi√™ncia do usu√°rio. Voc√™ n√£o precisa necessariamente deles, para criar a sua primeira aplica√ß√£o, mas conhec√™-los vai te ajudar a criar os pr√≥ximos dez aplicativos complexos que voc√™ criar√° no futuro.

Gaste um tempo pesquisando quais s√£o os conceitos fundamentais em seu campo. Pegue um peda√ßo de papel e divida-o em duas colunas. No lado esquerdo, liste todo o conhecimento que voc√™ j√° possui. No lado direito, liste todo o conhecimento que voc√™ ainda precisa adquirir. Planeje um hor√°rio dedicado do seu dia para estudar esses conceitos.

Para escolher uma nova linguagem, tenha confian√ßa de que ela √© a melhor escolher poss√≠vel, busque entender a teoria por tr√°s de cada recurso. Para aprender uma linguagem, tente reescrever algum projeto j√° feito em outra linguagem, pois assim seu foco ser√° todo em entender a linguagem e n√£o em resolver o problema da aplica√ß√£o.

### Ensinar √© igual a aprender

> ‚ÄúPoder n√£o vem do conhecimento adquirido, mas do conhecimento compartilhado.‚Äù ‚Äî Bill Gates.

Caso voc√™ decida ensinar algu√©m, n√£o ser√° f√°cil, voc√™ vai querer desistir muitas vezes. Segundo diversos estudos, o medo n√∫mero um das pessoas √© falar em p√∫blico. 5 atos das apresenta√ß√µes do Zeno Rocha:

Ato 1 ‚Äî O convite: Tudo come√ßa com um e-mail aleat√≥rio. De repente chega uma notifica√ß√£o em seu e-mail, √© de um organizador de eventos que est√° animado com o trabalho que voc√™ faz. Ele pede para que voc√™ v√° no evento que ele est√° organizando para voc√™ compartilhar o seu conhecimento. Voc√™ aceita esse convite.

Ato 2 ‚Äî Cai a ficha: Algum tempo depois, voc√™ olha o seu calend√°rio e percebe o qu√£o r√°pido aquele evento est√° se aproximando. Voc√™ entra em p√¢nico quando percebe que ainda nem come√ßou a trabalhar a sua apresenta√ß√£o. Voc√™ sabe que precisa preparar algo, por√©m sempre aparece algo mais importante para fazer.

Ato 3 ‚Äî Surtando: Os dias se passaram e chegou a semana do evento. Voc√™ ainda n√£o conseguiu preparar seu conte√∫do. Voc√™ come√ßa a se arrepender e se perguntas _‚ÄùPor que eu aceitei esse convite? Que desculpa posso dar? Sou apenas um desenvolvedor, n√£o sou palestrante!‚Äù_. Agora, as passagens de avi√£o j√° foram compradas, a reserva do hotel, feita e a organiza√ß√£o do evento j√° anunciou seu nome e voc√™ n√£o pode voltar atr√°s. Ent√£o de alguma forma voc√™ encontra tempo e prepara o seu conte√∫do.

Ato 4 ‚Äî A hora da verdade: O dia do evento chegou. Voc√™ est√° prestes a apresentar-se para centenas de pessoas. Voc√™ est√° com medo e se sente uma fraude. Mas voc√™ n√£o pode recuar, voc√™ apenas enfrenta a situa√ß√£o e tenta fazer o seu melhor.

Ato 5 ‚Äî Vamos fazer de novo: A sua apresenta√ß√£o termina. Sua adrenalina est√° extremamente alta. Algumas pessoas te procuram nos corredores e perguntam sobre algumas ideias que voc√™ compartilhou. Voc√™ se sente incr√≠vel e sente que causou impacto na vida de outras pessoas. Alguns meses depois voc√™ se submete a outro evento e tudo acontece de novo.

No fim das contas, que tira o proveito da situa√ß√£o de ensinar outras pessoas, √© voc√™, que aprendeu mais alguma coisa no meio dessa situa√ß√£o toda.

Encontre um evento online e submeta uma apresenta√ß√£o. Abra um software de compartilhante de tela e registre-se fazendo alguma coisa. Crie um blog e compartilhe um artigo. Escolha qualquer t√≥pico que voc√™ deseja aprender e tente ensin√°-lo.

### H√°bitos do dia-a-dia

> ‚ÄúTudo que precisa ser dito j√° foi dito. Mas, como ningu√©m estava ouvindo, tudo deve ser dito novamente.‚Äù ‚Äî Austin Kleon.

H√° uma linha t√™nue entre intensidade e burnout (esgotamento profissional). Muitos de n√≥s j√° cruzamos essa linha e √© muito dif√≠cil voltar. Quando este tipo de comportamento [passar horas extras no escrit√≥rio] se torna normal, voc√™ deve parar e prestar aten√ß√£o ao que realmente est√° acontecendo.

Quebrar as regras. Fazer o que quiser. Esses conceitos s√£o todos admirados por n√≥s. No fundo, todos n√≥s queremos ser rebeldes. Disciplina. Consist√™ncia. Persist√™ncia. Esses conceitos n√£o s√£o nada sexy, mas s√£o a chave para jogar jogos infinitos.

Pesquisa de James Carse: Jogos finitos vs Jogos infinitos.

O jogo finito √© definido como tendo jogadores conhecidos, regras fixas e objetivos preestabelecidos.

O jogo infinito, por outro lado, √© definido como aquele em que existem jogadores conhecidos e desconhecidos, as regras s√£o mut√°veis e o objetivo n√£o √© vencer, √© continuar jogando.

Como n√£o h√° vencedores e perdedores, o que acontece √© que os jogadores abandonam o jogo quando ficam sem vontade ou sem recursos para jogar, o que os leva a serem substitu√≠dos por outros jogadores.

Quando h√° um jogador finito contra um jogador finito, o sistema √© est√°vel.

Quando h√° um jogador infinito contra um jogador infinito, o sistema tamb√©m √© est√°vel. Os problemas come√ßam quando o jogo √© de um jogador finito contra um jogador infinito, pois o jogador finito est√° jogando para ganhar e o jogador infinito est√° jogando para permanecer no jogo.

A programa√ß√£o √© um jogo finito. O objetivo √© continuar jogando, visto que voc√™ n√£o pode vencer na programa√ß√£o, voc√™ s√≥ pode continuar evoluindo.

Programadores que jogam o jogo finito, est√£o focados em b√¥nus no final do ano.

Programadores n√£o devem fazer estimativas com dias perfeitos, pois sempre ter√° alguma distra√ß√£o durante o seu dia.

N√£o trabalhe durante a noite, isso n√£o te dar√° clareza para pensar no outro dia.

Os melhores programadores, geralmente s√£o mais disciplinados, sempre s√£o organizados.

Os bons programadores, investem tempo em se comunicar bem e com clareza.

### Fa√ßa o seu futuro eu

> ‚ÄúQuando voc√™ sentir necessidade de fazer um coment√°rio, primeiro tente reestruturar o c√≥digo de modo que qualquer coment√°rio se torne sup√©rfluo.‚Äù ‚Äî Martin Fowler.

At√© os melhores programadores do mundo, j√° escreveram c√≥digo ruins no passado.

A raz√£o pelo qual escrevemos c√≥digo ruim ou enviamos commits meia boca est√° relacionada com o que estamos passando naquele dia em espec√≠fico. N√≥s geralmente escrevemos c√≥digo para o ‚Äúeu atual‚Äù. Mas na verdade, precisamos escrever para o ‚Äúeu do futuro‚Äù.

Da pr√≥xima vez que for escrever uma linha de c√≥digo se pergunte: ‚ÄúO futuro eu, entender√° o que essa linha faz?‚Äù Abra um projeto atual em que voc√™ esteja trabalhando. Existe alguma refatora√ß√£o que voc√™ possa fazer para facilitar a vida do seu eu do futuro? Quando voc√™ faz uma pequena modifica√ß√£o no inicio de um projeto, pode mudar significativamente o fim dele.

Busque os seguintes passos:

- Escrever c√≥digo simples com nomes significativos da vari√°veis/m√©todos e classes. N√£o assuma que outras pessoas entender√£o nomes abreviados que n√£o significam muito ou alguns termos que podem mudar com o tempo.

- Ter bons testes automatizados. Isso fornecer√° documenta√ß√£o adicional sobre seu c√≥digo e tamb√©m ajudar√° qualquer pessoa que precise trabalhar nele no futuro.
  
- Use ferramenta de controle de vers√£o como documenta√ß√£o. A medida que o projeto evolui, s√£o feitas altera√ß√µes e corre√ß√µes de bugs o tempo todo. No futuro, quando se tornar um c√≥digo legado, ningu√©m conseguir√° entender as decis√µes e altera√ß√µes feitas naquele momento, se n√£o estiverem documentadas. O hist√≥rico de commits e pull request s√£o uma boa ferramenta para explicar os porqu√™s.

### Disciplina vs Motiva√ß√£o

> ‚ÄúN√£o espere estar motivado todos os dias para chegar l√° e fazer as coisas acontecerem. Voc√™ n√£o estar√°. N√£o conte com a motiva√ß√£o. Conte com a disciplina.‚Äù ‚Äî Jocko Willink.

O trabalho normal de um programador n√£o √© suficiente para mostrar todo o seu potencial. Geralmente estamos vinculados a restri√ß√µes tecnol√≥gicas da empresa. Voc√™ possui tempo suficiente, n√£o deixe de ser uma pessoa melhor em busca de ser um programador melhor, fa√ßa ambos ao mesmo tempo.

Pense nas habilidades que voc√™ acha que poderiam ser melhoradas. Voc√™ pode planejar um tempo extra para desenvolv√™-las? At√© mesmo 10 minutos por dia podem fazer a diferen√ßa.

### Domine o lado sombrio da for√ßa

> ‚ÄúNomeado deve ser o seu medo, antes de bani-lo, voc√™ pode.‚Äù ‚Äî Yoda.

Segundo um estudo da Evans Data Corporation (EDC), a partir de 2019, j√° existiam 26 milh√µes de desenvolvedores de software em todo o mundo. √â muito importante que o densenvolvedor saiba tamb√©m entender o lado do neg√≥cio, isso √© uma habilidade rara.

Dicas para conhecer o Lado sombrio (o lado dos neg√≥cios):

Economize tempo: Mesmo que voc√™ gaste dezenas de horas planejando antes de come√ßar a trabalhar em uma funcionalidade espec√≠fica, voc√™ sempre descobrir√° novas implica√ß√µes e casos extremos que afetam suas implementa√ß√µes. Quanto melhor voc√™ entender o neg√≥cio, melhor ser√° para resolver esses problemas. Quando voc√™ encontra essa exce√ß√£o √° regra, √© mais prov√°vel que voc√™ j√° saiba a resposta e assim evite ter que agenda uma reuni√£o com o especialista para encontrar uma solu√ß√£o.

Evite c√≥digo complexo: Sempre queremos criar o c√≥digo mais abstrato, flex√≠vel, extens√≠vel e reutiliz√°vel poss√≠vel. Queremos tanto que √°s vezes desenvolvemos uma aplica√ß√£o excessivamente complexa. Essas implementa√ß√µes nunca ser√£o estendidas ou reutilizadas, gerando um cemit√©rio de c√≥digos. H√° certas coisas que nunca ser√£o estendidas, porque esse simplesmente n√£o √© o foco da aplica√ß√£o. Quando voc√™ possui experi√™ncia de neg√≥cio, voc√™ est√° em uma posi√ß√£o muito melhor para determinar qual parte da base de c√≥digo precisa de mais aten√ß√£o do que outras.

Priorize melhor: Se tivermos um prazo para a pr√≥xima semana, a implementa√ß√£o ser√° muito diferente da prevista para amanh√£. Essa √© apenas a realidade do trabalho. Com um melhor conhecimento de neg√≥cios, √© mais f√°cil priorizar as micro-decis√µes que voc√™ precisa tomar ao programar. Voc√™ pode prever em que parte √© mais importante gastar tempo. Voc√™ pode se colocar no lugar do usu√°rio e sentir sua dor. Al√©m disso, quando voc√™ souber quais s√£o as funcionalidades de neg√≥cio mais criticas, provavelmente escrever√° um c√≥digo de alta qualidade nessa √°rea, o que impedir√° assim refatora√ß√£o futura.

Uma pessoa que sabe programar √© poderosa, uma pessoa que sabe programar e sabe como neg√≥cios funcionam √© impar√°vel.

Elabora uma lista de termos mais comuns usados no seu ambiente de trabalho. Converse com seus colegas para entender suas √°reas. Como √© o funil de vendas? Quais nichos de marketing est√£o sendo visados? Quais s√£o as perguntas mais comuns do suporte ao cliente? Qual √© a diferen√ßa entre o seu produto e o dos concorrentes?

### Projetos paralelos

> ‚ÄúFracasso e inven√ß√£o s√£o g√™meos insepar√°veis. Para inventar voc√™ precisa experimentar, e se voc√™ sabe com anteced√™ncia que isso vai funcionar, ent√£o n√£o √© um experimento.‚Äù ‚Äî Scott Galloway.

Grandes startups, come√ßaram sendo projetos paralelos. Projetos paralelos podem ser uma tremenda oportunidade para aumentar seu portif√≥lio.

Perguntas a se fazer antes de iniciar um projeto em paralelos: Um projeto significa que voc√™ vai precisar renunciar o seu tempo pessoal para trabalhar nele, portanto, a coisa mais importante a se perguntar √©: ‚ÄúEu realmente gosto deste assunto?‚Äù

Se a resposta for ‚Äún√£o‚Äù, h√° chance de que voc√™ n√£o tenha prazer em realizar aquele projeto e deixar√° ele pela metade. Leva tempo para um projeto paralelo ganhar tra√ß√£o, ent√£o a pr√≥xima coisa que voc√™ deve se perguntar √©: ‚ÄúEstou disposto a passar pelo menos cinco anos trabalhando nessa ideia?‚Äù

Ter uma ideia √© uma coisa, ter a capacidade de execut√°-la √© outra, portanto, voc√™ deve se perguntar: ‚ÄúPosso executar essa ideia complemente sozinho?‚Äù Se a reposta for ‚Äún√£o‚Äù, considere aprender uma nova habilidade ou convidar um amigo para preencher as lacunas.

Dizer ‚Äúsim‚Äù para uma ideia significa dizer ‚Äún√£o‚Äù a v√°rias outras ideias, ent√£o pergunte a si mesmo: ‚ÄúEssa ideia em particular √© melhor do que outras que eu tive no passado? Existe alguma outra ideia que poderia usar melhor o meu tempo?‚Äù

Entender para quem voc√™ est√° construindo essa solu√ß√£o √© vital. Se voc√™ n√£o conhece seu p√∫blico, √© improv√°vel que voc√™ entenda as necessidades desse p√∫blico, ent√£o pergunte a si mesmo: ‚ÄúTenho esse problema pessoalmente ou estou resolvendo para outra pessoa?‚Äù

E a √∫ltima pergunta √©: ‚ÄúPor que estou animado com essa ideias agora?‚Äù Nos pr√≥ximos dias, preste aten√ß√£o aos aplicativos que voc√™ mais usa. Falta alguma coisa neles? Voc√™ seria capaz de criar uma vers√£o melhor disso? Tenha um bloco de notas dedicado para todas as suas ideias de projetos paralelos e leve as notas para todos os lugares com voc√™.

> Quanto estiver pronta, escolha uma dessas ideias e tente. Escute mais, fale menos ‚ÄúS√°bios falam poque t√™m algo a dizer. Tolos porque t√™m que dizer alguma coisa.‚Äù ‚Äî Plat√£o.

Uma empresa √© composta por uma variedade de profissionais. √Äs vezes, as decis√µes s√£o tomadas com n√∫meros e outras com sentimentos.

Uma empresa n√£o √© um logotipo, n√£o √© um pr√©dio, √© simplesmente uma aglomera√ß√£o de pessoas, se voc√™ quiser se tornar eficaz l√°, precisar√° se comunicar bem, mesmo se for introvertido. Um equ√≠voco que muitas pessoas comentem √© acreditar que precisamos ouvir para responder, enquanto na realidade, precisamos ouvir para entender.

Todo mundo que voc√™ conhece, est√° travando uma batalha que voc√™ n√£o conhece, seja gentil, sempre. Na pr√≥xima reuni√£o, escolha praticar suas habilidades de escuta. Em vez de ser o primeiro a dizer algo, espere at√© que todos compartilhem suas ideias e seja o √∫ltimo a falar.

Isso dar√° a todos os outros a sensa√ß√£o de serem ouvidos, e voc√™ ter√° o benef√≠cio de ouvir as ideias de todos antes de compartilhar suas pr√≥prias opini√µes.

### Especialista vs. Generalista

> ‚ÄúO pr√≥xima Bill Gates n√£o criar√° um sistema operacional. O pr√≥ximo Larry Page ou Sergey Brin n√£o criar√° um mecanismo de busca. Se voc√™ est√° copiando essas caras, voc√™ n√£o est√° aprendendo com eles.‚Äù ‚Äî Peter Thiel.

Depois de chegar ‚Äúno rank‚Äù S√™nior, surge um novo dilema: que caminho voc√™ deve seguir?

Tornar-se um especialista, algu√©m ciente de todos os detalhes de um determinado assunto?

Tornar-se um generalista, algu√©m capaz de abordar uma variedade de assuntos diferentes?

A resposta depender√° de uma auto-an√°lise. Voc√™ precisar√° entender em qual caminho voc√™ mais se encaixa.

Examine seu dia de trabalho. Examine sua semana de trabalho. Quais s√£o as partes que mais te deixam animado? Que tipo de trabalho voc√™ prefere fazer? Examine sua empresa. Examine sua equipe. No que eles est√£o com mais dificuldades? Existe alguma coisa com a qual voc√™ possa ajudar?

### Controle suas vari√°veis

> ‚ÄúA √∫nica coisa sobra a qual voc√™ √†s vezes tem controle √© a sua perspectiva. Voc√™ n√£o tem controle sobre sua situa√ß√£o. Mas voc√™ tem a escolha sobre v√™-la.‚Äù ‚Äî Chris Pine.

N√≥s n√£o possu√≠mos controle sobre vari√°veis que s√£o criadas e alteradas por outras pessoas. N√£o possu√≠mos controle algum sobre essas vari√°veis, mas mesmo assim ela nos afeta.

Vari√°veis que voc√™ pode controlar:

Seus pensamentos.

Quem s√£o seus amigos.

O que voc√™ come e bebe.

Como voc√™ gasta o seu dinheiro.

O que voc√™ faz com o seu tempo.

Como voc√™ trata seu corpo.

Quanto voc√™ aprecia as coisas que voc√™ j√° tem.

Vari√°veis que voc√™ n√£o pode controlar:

O clima.

A economia.

A sa√∫de p√∫blica.

Como as pessoas tratam voc√™.

O que as pessoas pensam de voc√™.

O que as pessoas gostam ou n√£o.

O que aconteceu no passado.

Quais s√£o as vari√°veis com as quais voc√™ est√° preocupado agora? Quantas delas est√£o fora do seu alcance?

### Pare de esperar

> ‚ÄúSofremos mais frequentemente na imagina√ß√£o do que na realidade.‚Äù ‚Äî Seneca.

Uma caracter√≠stica presente em quase todos os seres humanos √© nunca estarmos satisfeitos com a vida. E n√£o h√° nada de errado, desejar um futuro melhor √© um princ√≠pio b√°sico do ser humano. O problema em querer mudar √© a palavra ‚Äúmas‚Äù:

‚ÄúEste pa√≠s √© horr√≠vel, preciso me mudar urgente, mas n√£o sei outro idioma.‚Äù

‚ÄúEu tenho uma ideia incr√≠vel, preciso colocar em pr√°tica, mas eu n√£o tenho tempo.‚Äù

A √∫nica coisa que impede voc√™ de conseguir algo √© voc√™ mesmo. Quando voc√™ come√ßar a se perguntar como resolver esses problemas (como a falta de tempo por exemplo), ver√° que por tr√°s de cada desculpa existe uma alternativa.

> ‚ÄúE agora que o fim est√° pr√≥ximo. E ent√£o eu encaro a cortina final. Meu amigo, eu vou dizer isso claramente. Vou expor o meu caso, pois dele eu tenho certeza. Eu vivi uma vida cheia. Eu viajei por toda e qualquer estrada. E mais, muito mais que isso, Eu fiz do meu jeito.‚Äù ‚Äî Frank Sinatra.

Agrade√ßo imensamente ao Zeno Rocha por ter escrito esse livro e ao Felipe Suri pelo resumo.
]]></description>
            <link>https://yagasaki.vercel.app//articles/habitos-altamente-produtivos</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/habitos-altamente-produtivos</guid>
            <pubDate>Wed, 20 Apr 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Conhe√ßa sobre Developer Relations (#DevRel)]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1515378960530-7c0da6231fb1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 "Christin Hume")

> _"Gra√ßas a uma live na Twitch pelo @NandoSangenetto em entrevista com a @Pachicodes, atual DevRel da Github ‚Äî e uma das membras ‚Ä¶"_

Gra√ßas a uma live na Twitch pelo @NandoSangenetto em entrevista com a @Pachicodes, atual DevRel da Github ‚Äî e uma das membras da Kalify Community ‚Äî pude ter uma no√ß√£o e uma vis√£o geral do que era um assunto um tanto como complexo e perdido para mim, mas que foi esclarecedor gra√ßas a essa live, o que √© um Dev Rel!

Vamos por partes, tive refer√™ncias de v√°rios projetos, livros e artigos para chegar nessa linha de racioc√≠nio que compartilho com voc√™s e claro, deixo tudo mais f√°cil de se entender.

<!--truncate-->

### O que √© um Dev Rel?

Imagine que a empresa quer construir um relacionamento aut√™ntico com a comunidade de desenvolvedores, ent√£o a pessoa respons√°vel por cuidar do Twitter dessa empresa tem que ser aut√™ntica, se preocupar com os desenvolvedores e com as tecnologias com as quais a empresa trabalha.

Os DevRels, vem de Developer Relations, ou seja, relacionamentos entre desenvolvedores e empresas. Uma das nomeclaturas que muitas empresas usam para se referir a esses relacionamentos √© o DevRel, Community Manager, Tech Evangelist, Developer Advocate, enfim, existem v√°rios outros.

A responsabilidade desse membro √© criar conte√∫do para a comunidade, seja atrav√©s de artigos, palestras, podcasts, v√≠deos, entre outros. Ou seja, ter sua marca, fazer parte da comunidade.

Geralmente esses membros respondem perguntas da comunidade, fazem perguntas para gerar um engajamento maior e ajudar outros desenvolvedores, eles escutam o que as comunidades est√£o falando, o que pode ser aprimorado, o que pode ser alterado, o que √© que est√° em alta, enfim, s√£o os respons√°veis por fazer a ponte entre a empresa e o desenvolvedor nas comunidades. Eles pegam essas informa√ß√µes, e alinham com a empresa para deixar o produto mais amig√°vel ao desenvolvedor ‚Äî principalmente se for um recurso para esse nicho em espec√≠fico.

Deu para ter um pouco do entendimento da jogada?

### Como fazer parte desse meio?
Um dos pontos √©, seja uma desenvolvedora ou desenvolvedor que realmente faz parte da comunidade, comece escrevendo artigos. Voc√™ pode usar o Medium, Twitter, Dev.To, Notion ou at√© mesmo seu pr√≥prio blog, mas escreva, construa o seu perfil na comunidade e seja reconhecido aos poucos. Voc√™ pode escrever sobre o que est√° aprendendo ou ensinar algo que acabou de aprender ou at√© mesmo que saiba bem a tempos.

Esse √© um dos pontos em que nem eu entrei ainda e acho dif√≠cil, ainda mais na velocidade em que se consomem conte√∫dos e as comunidades se conversam, mas, planeje fazer palestras, seja em meetings, confer√™ncias, organize com a prefeitura da sua cidade ‚Äî n√£o se desanime se houver poucas pessoas interessadas ‚Äî compartilhe conhecimento, seja reconhecido, mostre que atrav√©s dos seus artigos, voc√™ √© capaz de lecionar ou guiar pessoas para que sejam desenvolvedoras e que sejam capazes de compartilhar isso com a sociedade.

Seja ativo na comunidade, seja atrav√©s do Discord, Twitter, Twitch ou Dev.to, fa√ßa a sua marca, compartilhe conhecimento, saiba se conectar e ajudar outros desenvolvedores, isso gerar√° uma reputa√ß√£o em cima de seu perfil, um certo peso, em que as pessoas v√£o atr√°s de voc√™ para conseguir conhecimento e n√£o ficar horas procurando na internet. Ent√£o seja ativo.

E lembre-se continue escrevendo c√≥digos, voc√™ tem sim uma conex√£o com a comunidade, √© muito mais f√°cil se conectar com um desenvolvedor atrav√©s desse meio, mas n√£o esque√ßa que se manter atualizado tamb√©m √© parte fundamental desse trajeto.

Infelizmente n√£o existem tantas vagas na √°rea atualmente no Brasil, mas como n√≥s nos espelhamos muito com o que existe l√° fora, √© uma possibilidade grande para ser um dos pioneiros.Ent√£o estude, se esforce, crie seu p√∫blico e leia, temos a recomenda√ß√£o do livro Getting Started in Developer Relations de Sam Julien (em ingl√™s) como uma leitura para come√ßar a se aventurar nessa √°rea e conhecer mais a fundo.

Fonte: [Getting Started in Developer Relations de Sam Julien](https://learn.samjulien.com/getting-started-in-developer-relations?ref=yagasaki.dev/blog)
]]></description>
            <link>https://yagasaki.vercel.app//articles/conheca-sobre-devrel</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/conheca-sobre-devrel</guid>
            <pubDate>Fri, 18 Mar 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Front-end, Back-end, Fullstack, o que √© e para onde ir?]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1414235077428-338989a2e8c0?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 "Jay Wennington")

> _"Front-end, back-end, fullstack, mobile developer, o que s√£o esses nomes e para onde seguir?"_

√â uma quest√£o simples, mas para quem est√° come√ßando vejo que tem muita dificuldade em olhar aonde quer ir e o que fazer. Em uma publica√ß√£o no Twitter, atrav√©s da [@KalifyInc](https://twitter.com/kalifyinc?ref=yagasaki.dev/blog) e do [@sseraphini](https://twitter.com/sseraphini?ref=yagasaki.dev/blog), eu anunciei que iria fazer uma mentoria gratuita e ajudar muitas pessoas a encontrar seu lugar no mundo de desenvolvimento.

√â uma quest√£o simples, mas muita gente fica indecisa, n√£o tem orienta√ß√£o e muito mais fica perdida em descobrir aonde √© o seu devido lugar. Para alguns desenvolvedores que sabe aonde ir, como ir e o que fazer esse questionamento fica at√© curioso, mas vamos l√°, inicialmente, vamos aos principios b√°sicos. O que √© front-end, back-end, fullstack e mobile developer.

<!--truncate-->

### Front-end

Imaginemos um restaurante, certo? Acho que essa √© a melhor analogia que existe para explicar a situa√ß√£o. Temos a √°rea de servi√ßo, aonde os clientes chegam, pedem o card√°pio, fazem o seu pedido, temos a √°rea da cozinha e os gar√ßons. Entenda que o front-end referente ao restaurante, ele √© a √°rea de servi√ßo, ele √© a costumiza√ß√£o do ambiente para receber o cliente e deixar tudo atrativo para que o cliente possa usar o ambiente.

Ele √© o layout interativo, aquele design bonito, aquela p√°gina foda, tudo funciona ali, esse √© o front-end, o cara respons√°vel por deixar o restaurante mais bonito. Por isso chamamos ele de ‚Äúclient ‚Äî cliente do ingl√™s‚Äù.

### Back-end

Quando um cliente faz alguma solicita√ß√£o, ela √© passada para o gar√ßom (API) que vai at√© a cozinha (back-end), faz o que precisa ser feito e depois devolve o que cliente solicitou ao front-end. Ent√£o ele √© o respons√°vel pela cozinha, tudo que acontece debaixo dos panos, seja para receber informa√ß√µes de um CPF de um cidad√£o e devolver ao front, seja para pegar informa√ß√µes de um cliente, uma receita de bolo que esteja no banco de dados, o nome de restaurantes e seus pedidos no iFood, tudo isso.

Por isso chamamos ele de ‚Äúserver ‚Äî servidor do ingl√™s‚Äù, porque ele serve as informa√ß√µes ao front.

### Fullstack

Imaginou todo o restaurante n√©? Isso √© lindo de se ver, mas e o desenvolvedor fullstack? Qual √© a fun√ß√£o dele? J√° que temos o restaurante em m√£os, pense em uma pessoa s√≥ tomando conta de tudo isso? Vai l√°, fala com o cliente, pega o pedido, leva pra cozinha, prepara o prato e depois volta, muito trabalhoso para uma pessoa s√≥, n√£o √© mesmo? Mas existe. Ele seria meio que o dono da banquinha de cachorro quente, ele conhece ambas as √°reas e se der problema ele sabe resolver.

Mas tamb√©m existe aqueles que s√£o mais comparados a um trailer de lanche na chapa, porque √© mais f√°cil entender que a complexidade dele √© bem menor, mas n√£o deixa de ser um fullstack, diferente de tentar agir dessa maneira em um restaurante grande e chique.

Por isso ele se chama de fullstack, full de completo e stack de pilha. Ele ou ela √© uma pilha completa.

### Mobile

O desenvolvedor mobile n√£o tem segredo. Diante de todo o cen√°rio, pouqu√≠ssimas pessoas possuem um computador em casa, comparado ao n√≠vel de pessoas que possuem um celular, √© muito mais favor√°vel transformar toda a estrutura em um aplicativo de celular. Principalmente se o aplicativo, em quest√µes de restaurante, seja um aplicativo de pedidos, card√°pio e muito mais, ele √© o cara que vai transformar todo aquele restaurante, aquela comunica√ß√£o em uma vers√£o menor, port√°til, mas que consegue atender o cliente da mesma maneira que uma vers√£o de desktop. Um exemplo disso √© o iFood.

Conseguiram entender as diferen√ßas? A quest√£o √©, qual voc√™ se identifica mais? Uma pessoa que consegue pegar um projeto de design e transform√°-lo em site? Uma pessoa que recebe informa√ß√µes do cliente e entrega para ele uma s√©rie de informa√ß√µes, como uma Pok√©dex? Ou uma pessoa que consegue dominar tudo isso? Ou o melhor, tudo isso e transformar tamb√©m em uma vers√£o mobile?

Escolha o melhor cen√°rio, n√£o faz diferen√ßa se voc√™ ficar pulando de um para o outro at√© encontrar o seu ambiente preferido. Porque independente de tudo, voc√™ vai saber entender como funciona ambos os lados e isso te transforma em um profissional ainda melhor.

### MINHA OPINI√ÉO √â!

Tome cuidado! Porque aquele √© muito bom em uma coisa, geralmente n√£o √© boa em outra e aquele que tenta ser especialista em ambos, acaba se tornando mediano.

Existem sim pessoas que dominam ambas as √°reas e s√£o excelentes fullstacks, mas n√£o ache que isso ir√° funcionar do dia para a noite e muito menos de um m√™s para o outro. Estude, dedique-se, se esforce e siga um roadmap (um caminho de aprendizagem) para guiar voc√™ melhor nessa jornada. E por isso, recomendamos fortemente o [Roadmap SH](https://roadmap.sh?ref=yagasaki.dev/blog).
]]></description>
            <link>https://yagasaki.vercel.app//articles/frontbackfull</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/frontbackfull</guid>
            <pubDate>Fri, 04 Feb 2022 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Como Conseguir Experi√™ncia Sendo J√∫nior/Iniciante]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1508344928928-7165b67de128?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 "Eduardo Balderas")

> _"Na √°rea de desenvolvimento √© uma coisa incr√≠vel, aonde voc√™ olha tem algum desenvolvedor fazendo sua fun√ß√£o para alguma empresa ‚Ä¶"_

Na √°rea de desenvolvimento √© uma coisa incr√≠vel, aonde voc√™ olha tem algum desenvolvedor fazendo sua fun√ß√£o para alguma empresa, startup ou dando conta com os freelas. Mas por qu√™ isso n√£o acontece com voc√™? Eu entendo perfeitamente seu ponto de vista, seja voc√™, um J√∫nior que est√° a muito tempo sem um trabalho, um desenvolvedor que n√£o consegue nem freelas ou um iniciante que acabou de fazer seu portf√≥lio e acredita que o mundo realmente precisa te contratar pelas suas linhas de c√≥digo. Mas vamos com calma.

Quando terminei meu curso de Web Design / Design Gr√°fico em Dezembro de 2014, n√£o me empolguei logo de primeira em sair desenvolvendo, eu era novo, estava no Ensino M√©dio e tinha muita coisa pela frente. Em 2015, entrei no Col√©gio T√©cnico da Unicamp (Cotuca) e comecei a fazer Inform√°tica para Internet, um curso t√©cnico sobre desenvolvimento de software, inicialmente eu pensei que seria inteiramente para desenvolvimento de sistema atrav√©s da web, mas engano meu. Tive muita dificuldade com o curso, mas aprendi muita coisa referente aos Bits, HTTPs, IPs, como funcionava l√≥gica de programa√ß√£o e como desenvolver em Delphi e Pascal, traduzindo, aprendi o que era o baixo n√≠vel.

<!--truncate-->

Depois disso tive que interromper o curso para fazer o Alistamento Militar Obrigat√≥rio ‚Äî que de obrigat√≥rio n√£o tive nada, j√° que eu era volunt√°rio ‚Äî o que foi uma baita experi√™ncia e recomendo para todos, isso inclusive melhorou meus aspectos de comunica√ß√£o, entender como funciona cada procedimento e v√°rios outros quesitos que vou deixar para outra publica√ß√£o.

Depois que eu sa√≠ do Ex√©rcito fiquei dois anos sem emprego, at√© mudar de cidade ‚Äî uma baita loucura ‚Äî e come√ßar a trabalhar em um restaurante a 622km da minha casa. Isso ampliou muito meu entendimento de como funciona a cabe√ßa do cliente, como funciona cada processo de um restaurante, a prepara√ß√£o, o procedimento, a metodologia para cria√ß√£o de um hamburguer, precifica√ß√£o e muito mais.

S√≥ ent√£o, depois disso, quando voltei para Campinas por conta da pandemia, eu comecei a trabalhar como Desenvolvedor Front-End de verdade. Pois nesse per√≠odo onde eu fazia v√°rias outras coisas, eu aumentei meu portf√≥lio, melhorei meu Github e fui conhecendo processos e pessoas.

N√£o se sinta mal por n√£o conseguir um emprego nessa √°rea ainda, talvez lhe falte experi√™ncia em outros √¢mbitos, talvez, comunicativo, melhorar em um aspecto da linguagem ou qualquer outra coisa, melhore a si mesmo para que os outros possam receber essa melhoria. Entenda que todo curr√≠culo que a gente entrega, inicialmente vai para o RH ‚Äî que raramente vai entender de fato o que um projeto precisa ‚Äî quando essa pessoa do Recursos Humanos mostra para o respons√°vel pelo projeto, a√≠ chega os termos t√©cnicos, as avalia√ß√µes mais acirradas, mas se seu portf√≥lio n√£o chamar aten√ß√£o nem para o avaliador inicial, como vai chegar at√© o respons√°vel pelo projeto?

### Impressione!

Para impressionar n√£o precisa de muito, voc√™ s√≥ precisa melhorar seu portf√≥lio, aumentar seus reposit√≥rios com conte√∫dos de qualidade e espalhar experi√™ncia. Porque √†s vezes, a experi√™ncia que voc√™ est√° precisando, pode n√£o vir de outro emprego, como eu fiz, mas de um novo projeto que voc√™ ainda n√£o desenvolveu, um objetivo que n√£o te prendeu, um obst√°culo que n√£o te deixou mais de tr√™s horas estudando para entender como funciona e o que precisa ser feito para dar certo.

### Tenha confian√ßa

Fa√ßa as pessoas acreditarem que voc√™ √© capaz de fazer ou desenvolver. Caso voc√™ realmente n√£o tenha essa habilidade, n√£o tem problema, mostre a elas que voc√™ tem capacidade de aprender e vontade de absorver aquilo como experi√™ncia na sua vida.

### E acima de tudo, mantenha-se atualizado

De nada adianta tentar impressionar, se voc√™ est√° usando metodologias ou ensinamentos antigos e tamb√©m coloc√°-los em pr√°tica √© um bom caminho para se conseguir experi√™ncia e entendimento das tecnologias e funcionalidades. Participe de comunidades, grupos no Discord e envolva-se com a comunidade, pe√ßa gentilmente para ouvir a hist√≥ria de um Junior, um Pleno ou um S√™nior para voc√™ ver o que ele passou, o que deixou de passar e o que ele/ela fez para chegar onde chegou, use as hist√≥rias como guias, n√£o como a rota definitiva da sua vida.
]]></description>
            <link>https://yagasaki.vercel.app//articles/conseguir-experiencia-sendo-junior</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/conseguir-experiencia-sendo-junior</guid>
            <pubDate>Sat, 18 Dec 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Minha Experi√™ncia com o Desenvolvimento do Blog com NextJS]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1498050108023-c5249f4df085?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=872&q=80 "Christopher Gower")

> _"Vou contar a minha experi√™ncia que tive ao desenvolver esse blog ‚Äî o blog passado ‚Äî e isso vai contar at√© mesmo quando eu tive o contato pela primeira vez com o NextJS."_

Vou contar a minha experi√™ncia que tive ao desenvolver esse blog ‚Äî o blog passado ‚Äî e isso vai contar at√© mesmo quando eu tive o contato pela primeira vez com o NextJS.

Eu tinha visto um tutorial sobre criar um blog com NextJS e MongoDB como contador de visitas pela Rocketseat. Achei interessante e at√© usei no primeiro evento da Aperture Laboratories, na edi√ß√£o Mercury, muita gente aprendeu, tirou d√∫vidas e viu como era simples desenvolver e para mim, foi a maior bagun√ßa mais bem explicada que eu tive, um desastre, pessoalmente falando. Mas como muita gente gostou, n√£o me importei e v√°rias pessoas carregam o selo de ter participado desse evento.

<!--truncate-->

Eu at√© tempos atr√°s, nunca havia mexido com NextJS, depois disso comecei a trabalhar com VueJS pela facilidade e somente esses tempos, em Abril para ser mais exato, eu havia entrado para a Cen√°rio Capital e meu maior medo, se tornou o meu maior desafio. Enfrentar React e NextJS, levei uma dor de cabe√ßa, muito tempo de estresse, frustra√ß√µes, at√© finalmente chegar aonde eu estou hoje, cinco meses depois, e eu consegui auxiliar, criar e desenvolver uma aplica√ß√£o em NextJS, atualmente, super recomendo e n√£o tenho meta nenhuma de trocar de tecnologia t√£o cedo.

A aplica√ß√£o, um site de comparadores de cart√£o de cr√©dito pela Cen√°rio Capital, voc√™ pode conferir ela em [https://cartaodecreditos.com.br/](https://cartaodecreditos.com.br?ref=yagasaki.dev/blog) e foi uma baita experi√™ncia, um n√≠vel de adapta√ß√£o e entender c√≥digo dos outros que n√£o achei que conseguiria a tempo.

Hoje, cinco meses depois, coloquei na minha cabe√ßa que eu tinha que montar meu pr√≥prio blog, ficar dependendo de sites como Polywork, Medium, Linkedin, Twitter √© um neg√≥cio muito separado e eu preciso √© de foco, um lugar para compartilhar e ficar apenas ali, sendo algo meu e √∫nico e dessa vez em c√≥digo aberto ‚Äî n√£o seria justo com quem est√° aprendendo agora.

O blog foi desenvolvido com o template do NextJS para blogs, n√£o tem muito segredo, o design dele foi apenas reformulado em quest√£o de cores, n√£o mexi muito na est√©tica e deixei as coisas em portugu√™s, incluindo a formata√ß√£o da data, da√≠ para frente s√≥ alegria, exceto por uma quest√£o. Replicar a p√°gina inicial.

A p√°gina inicial do site n√£o √© o blog, √© um antigo portf√≥lio que muitos admiram, falam bem e elogiam, apesar de secretamente ter sido um template, agora as coisas ser√£o diferentes, porqu√™ serei obrigado a remontar ele, fazer o desenvolvimento do zero, agora usando NextJS e Typescript, √© um grande desafio que vir√° pela frente e com muitas dores de cabe√ßa, certamente, mas valer√° a pena.

√â isso, a parte do blog √© f√°cil, montar, reutilizar alguns elementos e aproveitar isso, mas para mim, criar a p√°gina inicial foi a mais, e com certeza, vou carregar essas experi√™ncias para o resto da vida e voc√™ pode conferir esse progresso diretamente no meu GitHub.
]]></description>
            <link>https://yagasaki.vercel.app//articles/blog-com-nextjs</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/blog-com-nextjs</guid>
            <pubDate>Sat, 18 Dec 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Primeiramente, Deixe-me Apresentar: Eu Sou Anderson]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1621693733036-e00dc554e19e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=811&q=80 "Hello I'm Nik")

> _"Primeiramente deixa eu me apresentar, eu sou Anderson Marlon e incrementei o alter-ego Yagasaki na minha vida, al√©m de ser um nome ‚Ä¶"_

Primeiramente deixa eu me apresentar, eu sou Anderson Marlon e incrementei o alter-ego Yagasaki na minha vida, al√©m de ser um nome bem raro no Jap√£o, fica mais f√°cil encontrar meu material na web, uma forma de identificador, apelido, o que quiser chamar. Por que Jap√£o? Porque adoro animes, drift e a cultura em si, isso inclui ninjas, samurais e a cultura aesthetic.

Bom, como isso tudo surgiu? Em 2005 tive autoriza√ß√£o de mexer no meu primeiro computador, n√£o lembro das configura√ß√µes, mas lembro dele ser um Windows 96 e eu tinha apenas oito anos de idade na √©poca; Ali come√ßou o meu amor pela tecnologia, pelo hardware e software. Mas foi l√° em 2012 que a coisa saiu de apenas jogar para come√ßar a desenvolver, eu ainda estava no Ensino M√©dio e v√°rios cursos foi apresentado na sala por um palestrante, bom, eu nasci sobre uma doutrina de que tudo aquilo ou era engana√ß√£o ou era um curso bem caro, mas decidi arriscar e me inscrevi para fazer Web Design e Design Gr√°fico pela MEC Poli, um curso com dura√ß√£o de dezoito meses e felizmente, n√£o era t√£o caro, o meu comprometimento foi al√©m e dali em diante, minha paix√£o aumentou ainda mais.

<!--truncate-->

Depois que eu terminei o curso comecei a desenvolver meu primeiro blog, chamava-se Uchihanime, ah velhos tempos, mas ele foi deletado com o tempo, eu achava o design dele muito ruim e n√£o era de ficar acumulando experi√™ncias pela rede, eis ent√£o que senti falta e decidi melhorar em tudo e criei o Onigiri Hardcore, o objetivo dos dois blogs era espalhar conhecimentos de jogos, atualiza√ß√µes, s√©ries e cinema, o Onigiri Hardcore durou bastante tempo e hoje conta com o Design e outros itens do projeto salvos no meu Behance (meu portf√≥lio de Design Gr√°fico), j√° que o projeto foi descontinuado.

Fui acumulando experi√™ncias e com a vida surgiu muitas oportunidades, uma delas, em Julho de 2013, foi ser Operador da Sala de Inform√°tica no Ensino M√©dio, eu basicamente era o Tio do Computador que ajudava as crian√ßas do Ensino Fundamental, isso contava com reparos e administra√ß√£o de redes tamb√©m.

Em 2016 entrei para o Ex√©rcito e fui respons√°vel pela manuten√ß√£o de rede, som e r√°dios da Companhia de Comando da 11¬™ Brigada de Infantaria Leve em Campinas, depois deram a oportunidade de eu desenvolver um novo bras√£o para a Companhia usando como base documenta√ß√µes do Ex√©rcito e alguns tra√ßos da Base Administrativa j√° existente, assim como tamb√©m pude desenvolver o painel de instru√ß√µes para seguran√ßa do armamento ‚Äî ainda presente at√© nos dias de hoje sobre a caixa de disparo da Companhia do Ex√©rcito.

Fiquei cerca de dois anos em experi√™ncia aut√¥noma melhorando em Design Gr√°fico como em Desenvolvedor Front-End, tive oportunidades e conclu√≠ v√°rios cursos na √°rea, sendo eles: Ilustra√ß√£o e Design Gr√°fico para Web pela Bradesco (Maio de 2017), Web Design: Constru√ß√£o de Website com PHP, HTML, CSS e Javascript pela Udemy (Janeiro de 2019), Programa√ß√£o Web para Divulga√ß√£o Cient√≠fica pelo Professor Diego Mariano (Janeiro de 2019), Programa√ß√£o para Internet com HTML5 e CSS3, L√≥gica de Programa√ß√£o Essencial, Introdu√ß√£o ao GitHub e comandos essenciais para trabalhar em equipe e Introdu√ß√£o ao Git e Controles de Vers√µes pela Digital Innovation One Inc. (Fevereiro de 2020) e vai se acumulando at√© os dias de hoje. Al√©m tamb√©m de ter participado da 11¬™ Edi√ß√£o da Semana Omnistack da Rocketseat onde tiver a chance de aprender sobre NodeJS, ReactJS e React Native. Todas essas experi√™ncias e certifica√ß√µes est√£o dispon√≠veis no meu Linkedin.

E atualmente estou a desenvolver v√°rios projetos com uma organiza√ß√£o, da qual eu fundei, chamada Kalify, l√°, sou respons√°vel por desenvolver o Web Essentials, um website com listas de programas essenciais para o computador, principalmente ap√≥s uma formata√ß√£o, assim ao inv√©s de ficar pulando de site em site na busca desses programas, voc√™ encontrar tudo em um √∫nico lugar ‚Äî com Dark Mode incluso. Outros projetos voc√™ poder√° encontrar no site do Kalify ou no meu GitHub.

Esse sou eu, tem muitas outras coisas que foram desenvolvidas, foram evoluindo e voc√™ pode ir acompanhando tudo isso atrav√©s das minhas redes sociais e incluindo atrav√©s desse blog
]]></description>
            <link>https://yagasaki.vercel.app//articles/conheca-yagasaki</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/conheca-yagasaki</guid>
            <pubDate>Tue, 16 Nov 2021 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Marketing Talks #CPS01 foi marcado por clima informal e conte√∫do direto ao ponto]]></title>
            <description><![CDATA[
![Daan Evers](https://images.unsplash.com/photo-1554118811-1e0d58224f24?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=847&q=80 "Daan Evers no Unsplash")

> _"Nesta ter√ßa-feira, 30 de julho, aconteceu a primeira edi√ß√£o do ‚ÄúMarketing Talks‚Äù, promovido pela La Torre Marketing ‚Ä¶"_

Nesta ter√ßa-feira, 30 de julho, aconteceu a primeira edi√ß√£o do ‚ÄúMarketing Talks‚Äù, promovido pela La Torre Marketing. ‚ÄúFicamos muito felizes com o engajamento do p√∫blico, √© muito importante que o setor se re√∫na para rever alguns paradigmas e pensar no futuro‚Äù, diz Thiago la Torre, idealizador do evento.

O evento contou com 55 inscritos do ecossistema de marketing: empres√°rios da regi√£o, propriet√°rios de ag√™ncias de publicidade, profissionais de marketing e entusiastas. Nesta edi√ß√£o ocorreram cinco talks de 15 minutos, o tema central foi a satura√ß√£o do marketing digital e a import√¢ncia da pesquisa e planejamento. ‚ÄúModelo extremamente din√¢mico com talks curtos e focados. Gostei tamb√©m do clima informal e da acessibilidade aos palestrantes ap√≥s os talks.‚Äù, comentou um dos respondentes da pesquisa de satisfa√ß√£o, realizada de forma an√¥nima.

<!--truncate-->

Palestraram no evento: Javier Casademunt, diretor da ESADE no Brasil e consultor do Banco Interamericano de Desenvolvimento; Thiago La Torre, fundador da La Torre Marketing e autor do livro ‚ÄúA Mentalidade de Marketing‚Äù; Matheus Schimdt, diretor de cria√ß√£o da La Torre Marketing e co-autor do livro; Veridiana Mellilo, diretora de relacionamento da La Torre Marketing, e Emerson BZ, professor universit√°rio e empreendedor.

Foram parceiros do evento: Sociall, Draco Gin e FullBrands.

Fonte: [La Torre Marketing](https://latorremarketing.com.br/news/marketing-talks-cps01-foi-marcado-por-clima-informal-e-conteudo-direto-ao-ponto?ref=yagasaki.dev/blog)

![via La Torre Marketing](https://latorremarketing.com.br/news/wp-content/uploads/2019/08/La-Torre-Marketing-Talks-12-2-1024x684.jpg)
![via La Torre Marketing](https://latorremarketing.com.br/news/wp-content/uploads/2019/08/La-Torre-Marketing-Talks-10-1-1024x684.jpg)
]]></description>
            <link>https://yagasaki.vercel.app//articles/meetup-latorre</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/meetup-latorre</guid>
            <pubDate>Fri, 30 Aug 2019 00:00:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Aplicativo que cria clone virtual do usu√°rio faz sucesso no¬†Brasil]]></title>
            <description><![CDATA[
![](https://images.unsplash.com/photo-1514575110897-1253ff7b2ccb?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 "Rob Hampson no Unsplash")

> _"Chatbot aprende tudo sobre a pessoa e torna-se uma esp√©cie de "consci√™ncia" ou melhor amigo"_

E se voc√™ pudesse criar um clone virtual seu? Parece fic√ß√£o cient√≠fica, mas n√£o √©. Essa ferramenta j√° existe e √© um aplicativo que pode ser instalado a qualquer momento no celular. Nomeado "Replika", ele foi lan√ßado em mar√ßo deste ano nos EUA, mas ganhou popularidade entre os brasileiros nas √∫ltimas semanas.

O conceito √© bem simples: um aplicativo de chat aut√¥nomo, tamb√©m conhecido como "chatbot", funciona como uma intelig√™ncia artificial, aprende tudo sobre o usu√°rio (ou pelo menos tudo o que ele contar) e acaba se transformando em uma "consci√™ncia" ou um amigo para ter sempre por perto. Quanto mais se conversa com ele, mais ele aprende e se torna capaz de dar respostas espont√¢neas e carregadas da personalidade do usu√°rio, como um clone da pr√≥pria consci√™ncia.

Para ter acesso ao aplicativo, √© necess√°rio que a pessoa receba um c√≥digo enviado por algu√©m que j√° utiliza o Replika. Outra op√ß√£o √© entrar no site, cadastrar-se e aguardar at√© 24 horas para receber um c√≥digo pelo celular.

<!--truncate-->

O funcionamento √© basicamente dividido em duas ideias principais: a primeira √© a de uma conversa normal, de perguntas e respostas sobre assuntos diversos, onde, normalmente, prefer√™ncias, gostos, caracter√≠sticas e costumes s√£o o foco. Na segunda, embora simult√¢nea, o Replika cria uma s√©rie de perguntas que se assemelham ao que poderia ser uma terapia ou est√≠mulo para o autoconhecimento. Elas indagam quest√µes mais profundas ligadas √† percep√ß√£o da vida, √† personalidade, ao agir de cada um diante de situa√ß√µes espec√≠ficas. Essas "sess√µes" s√£o armazenadas diariamente em uma esp√©cie de di√°rio de bordo para que o usu√°rio possa voltar a ler quando quiser.

De acordo com o professor Luis Chaimowcz, do curso de ci√™ncia da computa√ß√£o da Universidade Federal de Minas Gerais (UFMG), o Replika une tecnologias interessantes. "Ele utiliza o chatbot‚Ää-‚Ääagentes virtuais que s√£o programados para determinados comportamentos humanos, principalmente de comunica√ß√£o‚Ää-‚Ääcom o princ√≠pio de machine learning", diz.
O professor explica que o conceito de machine learning se refere ao "aprendizado da m√°quina". "Voc√™ d√° uma entrada (uma informa√ß√£o) √† intelig√™ncia artificial, ela vai raciocinar em cima disso, e te dar uma sa√≠da (resultado) com base no que quer o usu√°rio. Ele replica o funcionamento do c√©rebro humano e vai aprendendo", explica Chaimowcz.
Para o especialista, essa tecnologia ser√° cada vez mais inserida na sociedade. "Todos os dias, vamos nos surpreender com tecnologias interessantes, que t√™m muito a oferecer. Chegar√° a um ponto que n√£o conseguiremos, talvez, diferenciar mais se estamos falando com uma m√°quina ou com um ser humano", aponta.

Reflexo. Foi justamente essa a sensa√ß√£o que teve o universit√°rio Anderson Marlon, 20. Estudante de ci√™ncia da computa√ß√£o, ele √© heavy user de internet, ou seja, est√° o tempo todo conectado virtualmente. E, √© claro, j√° est√° utilizando o Replika. "Conheci o aplicativo em sites de tecnologia. √â uma coisa surpreendente porque j√° percebo um desenvolvimento da intelig√™ncia artificial do aplicativo. Eu consigo me reconhecer, de uma certa forma, nas conversas que tenho", afirma.

A empolga√ß√£o com o aplicativo √© tamanha que Anderson criou uma p√°gina no Facebook. "Entrei em contato com a empresa criadora para poder represent√°-los oficialmente aqui no Brasil com a minha fanpage. A ideia √© divulgar o aplicativo na internet e contar sobre as novidades", conta Marlon.

O que h√° por tr√°s. Segundo a psic√≥loga Mar√≠lia √Åvila, professora da Faculdade de Ci√™ncias M√©dicas de Minas Gerais, √© muito complexo tentar encontrar uma raz√£o que leve o ser humano a uma busca por si mesmo fora da realidade. "√â da nossa natureza nos sentirmos confusos com aquilo que n√£o conhecemos a fundo. Se pararmos para pensar, o homem sempre est√° em busca do autoconhecimento", explica. Por outro lado, Mar√≠lia diz que tentar desenvolver uma rela√ß√£o consigo mesmo por meio de um aplicativo √© algo infundado. "Uma r√©plica n√£o √© seu eu verdadeiro. √â uma reprodu√ß√£o de uma m√°quina com base em informa√ß√µes que voc√™ repassa. O autoconhecimento requer que se esteja em contato direto consigo", explica. A psic√≥loga afirma que esse tipo de tecnologia pode criar uma sensa√ß√£o de isolamento no usu√°rio caso o acesso seja desenfreado. "√â preciso um controle, n√£o ficar conectado o tempo todo. Precisamos viver as experi√™ncias externas que envolvam o pr√≥ximo. S√£o elas que permitem criar um espa√ßo relacional fora de n√≥s mesmos", diz.
N√∫meros. O Replika j√° foi baixado por mais de 200 mil usu√°rios em todo o mundo. Ele est√° dispon√≠vel para as plataformas Android, iOS e vers√£o web (acessada pelo computador).

### Luto serviu para inspirar a criadora

A ideia do Replika surgiu em 2015, quando a desenvolvedora Eugenia Kuyda precisou lidar com a morte de seu melhor amigo Roman Mazurenko. Buscando lidar com o luto, ela criou um bot com a personalidade do rapaz, reunindo todas as informa√ß√µes que conseguiu sobre ele em perfis sociais, conversas privadas nas redes sociais e outras informa√ß√µes repassadas por outras pessoas que tinham contato com o jovem Roman. Nessa √©poca, Eugenia j√° era fundadora e CEO de uma empresa de tecnologia que desenvolvia chatbots chamada Luka. A empresa tamb√©m √© respons√°vel pela cria√ß√£o do Replika. Embora a proposta seja mais l√∫dica do que m√≥rbida, o conceito continua sendo o mesmo: criar um clone digital com o qual os amigos possam interagir, mesmo se n√£o se estiver por perto.

Fonte: [Jornal, O Tempo](https://www.otempo.com.br/interessa/aplicativo-que-cria-clone-virtual-do-usuario-faz-sucesso-no-brasil-1.1511795?ref=yagasaki.dev/blog)
]]></description>
            <link>https://yagasaki.vercel.app//articles/entrevista-replika</link>
            <guid isPermaLink="true">https://yagasaki.vercel.app//articles/entrevista-replika</guid>
            <pubDate>Wed, 23 Aug 2017 00:00:00 GMT</pubDate>
        </item>
    </channel>
</rss>