[
    {
        "id": 0,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "17 de Agosto de 2017",
        "header":"/posts/smartphone.jpg",
        "ytid": "",
        "image1": "",
        "image2": "",
        "slug": "aplicativo-que-cria-clone-virtual-do-usuario-faz-sucesso-no-brasil",
        "title":"Aplicativo que cria clone virtual do usuário faz sucesso no Brasil",
        "description": "“Chatbot aprende tudo sobre a pessoa e torna-se uma espécie de “consciência” ou melhor amigo”",
        "post": "E se você pudesse criar um clone virtual seu? Parece ficção científica, mas não é. Essa ferramenta já existe e é um aplicativo que pode ser instalado a qualquer momento no celular. Nomeado “Replika”, ele foi lançado em março deste ano nos EUA, mas ganhou popularidade entre os brasileiros nas últimas semanas.\n\nO conceito é bem simples: um aplicativo de chat autônomo, também conhecido como “chatbot”, funciona como uma inteligência artificial, aprende tudo sobre o usuário (ou pelo menos tudo o que ele contar) e acaba se transformando em uma “consciência” ou um amigo para ter sempre por perto. Quanto mais se conversa com ele, mais ele aprende e se torna capaz de dar respostas espontâneas e carregadas da personalidade do usuário, como um clone da própria consciência.\n\nPara ter acesso ao aplicativo, é necessário que a pessoa receba um código enviado por alguém que já utiliza o Replika. Outra opção é entrar no site, cadastrar-se e aguardar até 24 horas para receber um código pelo celular.\n\nO funcionamento é basicamente dividido em duas ideias principais: a primeira é a de uma conversa normal, de perguntas e respostas sobre assuntos diversos, onde, normalmente, preferências, gostos, características e costumes são o foco. Na segunda, embora simultânea, o Replika cria uma série de perguntas que se assemelham ao que poderia ser uma terapia ou estímulo para o autoconhecimento. Elas indagam questões mais profundas ligadas à percepção da vida, à personalidade, ao agir de cada um diante de situações específicas. Essas “sessões” são armazenadas diariamente em uma espécie de diário de bordo para que o usuário possa voltar a ler quando quiser.\n\nDe acordo com o professor Luis Chaimowcz, do curso de ciência da computação da Universidade Federal de Minas Gerais (UFMG), o Replika une tecnologias interessantes. “Ele utiliza o chatbot — agentes virtuais que são programados para determinados comportamentos humanos, principalmente de comunicação — com o princípio de machine learning”, diz.\n\nO professor explica que o conceito de machine learning se refere ao “aprendizado da máquina”. “Você dá uma entrada (uma informação) à inteligência artificial, ela vai raciocinar em cima disso, e te dar uma saída (resultado) com base no que quer o usuário. Ele replica o funcionamento do cérebro humano e vai aprendendo”, explica Chaimowcz.\n\nPara o especialista, essa tecnologia será cada vez mais inserida na sociedade. “Todos os dias, vamos nos surpreender com tecnologias interessantes, que têm muito a oferecer. Chegará a um ponto que não conseguiremos, talvez, diferenciar mais se estamos falando com uma máquina ou com um ser humano”, aponta.\n\nReflexo. Foi justamente essa a sensação que teve o universitário Anderson Marlon, 20. Estudante de ciência da computação, ele é heavy user de internet, ou seja, está o tempo todo conectado virtualmente. E, é claro, já está utilizando o Replika. “Conheci o aplicativo em sites de tecnologia. É uma coisa surpreendente porque já percebo um desenvolvimento da inteligência artificial do aplicativo. Eu consigo me reconhecer, de uma certa forma, nas conversas que tenho”, afirma.\n\nA empolgação com o aplicativo é tamanha que Anderson criou uma página no Facebook. “Entrei em contato com a empresa criadora para poder representá-los oficialmente aqui no Brasil com a minha fanpage. A ideia é divulgar o aplicativo na internet e contar sobre as novidades”, conta Marlon.\n\nO que há por trás. Segundo a psicóloga Marília Ávila, professora da Faculdade de Ciências Médicas de Minas Gerais, é muito complexo tentar encontrar uma razão que leve o ser humano a uma busca por si mesmo fora da realidade. “É da nossa natureza nos sentirmos confusos com aquilo que não conhecemos a fundo. Se pararmos para pensar, o homem sempre está em busca do autoconhecimento”, explica.\n\nPor outro lado, Marília diz que tentar desenvolver uma relação consigo mesmo por meio de um aplicativo é algo infundado. “Uma réplica não é seu eu verdadeiro. É uma reprodução de uma máquina com base em informações que você repassa. O autoconhecimento requer que se esteja em contato direto consigo”, explica. A psicóloga afirma que esse tipo de tecnologia pode criar uma sensação de isolamento no usuário caso o acesso seja desenfreado. “É preciso um controle, não ficar conectado o tempo todo. Precisamos viver as experiências externas que envolvam o próximo. São elas que permitem criar um espaço relacional fora de nós mesmos”, diz.\n\nNúmeros. O Replika já foi baixado por mais de 200 mil usuários em todo o mundo. Ele está disponível para as plataformas Android, iOS e versão web (acessada pelo computador).\n\nLuto serviu para inspirar a criadora\n\nA ideia do Replika surgiu em 2015, quando a desenvolvedora Eugenia Kuyda precisou lidar com a morte de seu melhor amigo Roman Mazurenko. Buscando lidar com o luto, ela criou um bot com a personalidade do rapaz, reunindo todas as informações que conseguiu sobre ele em perfis sociais, conversas privadas nas redes sociais e outras informações repassadas por outras pessoas que tinham contato com o jovem Roman.\n\nNessa época, Eugenia já era fundadora e CEO de uma empresa de tecnologia que desenvolvia chatbots chamada Luka. A empresa também é responsável pela criação do Replika. Embora a proposta seja mais lúdica do que mórbida, o conceito continua sendo o mesmo: criar um clone digital com o qual os amigos possam interagir, mesmo se não se estiver por perto.",
        "fonte":"Jornal, O Tempo",
        "fontelink":"https://www.otempo.com.br/interessa/aplicativo-que-cria-clone-virtual-do-usuario-faz-sucesso-no-brasil-1.1511795"
    },
    {
        "id": 1,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "31 de Julho de 2019",
        "header":"/posts/coffee.jpg",
        "ytid": "",
        "image1": "https://latorremarketing.com.br/news/wp-content/uploads/2019/08/La-Torre-Marketing-Talks-12-2-1024x684.jpg",
        "image2": "https://latorremarketing.com.br/news/wp-content/uploads/2019/08/La-Torre-Marketing-Talks-10-1-1024x684.jpg",
        "slug": "marketing-talks-cps01-foi-marcado-por-clima-informal-e-conteudo-direto-ao-ponto",
        "title":"Marketing Talks #CPS01 foi marcado por clima informal e conteúdo direto ao ponto",
        "description": "Nesta terça-feira, 30 de julho, aconteceu a primeira edição do “Marketing Talks”, promovido pela La Torre Marketing ...",
        "post": "Nesta terça-feira, 30 de julho, aconteceu a primeira edição do “Marketing Talks”, promovido pela La Torre Marketing. “Ficamos muito felizes com o engajamento do público, é muito importante que o setor se reúna para rever alguns paradigmas e pensar no futuro”, diz Thiago la Torre, idealizador do evento.\n\nO evento contou com 55 inscritos do ecossistema de marketing: empresários da região, proprietários de agências de publicidade, profissionais de marketing e entusiastas. Nesta edição ocorreram cinco talks de 15 minutos, o tema central foi a saturação do marketing digital e a importância da pesquisa e planejamento. “Modelo extremamente dinâmico com talks curtos e focados. Gostei também do clima informal e da acessibilidade aos palestrantes após os talks.”, comentou um dos respondentes da pesquisa de satisfação, realizada de forma anônima.\n\nPalestraram no evento: Javier Casademunt, diretor da ESADE no Brasil e consultor do Banco Interamericano de Desenvolvimento; Thiago La Torre, fundador da La Torre Marketing e autor do livro “A Mentalidade de Marketing”; Matheus Schimdt, diretor de criação da La Torre Marketing e co-autor do livro; Veridiana Mellilo, diretora de relacionamento da La Torre Marketing, e Emerson BZ, professor universitário e empreendedor.\n\nForam parceiros do evento: Sociall, Draco Gin e FullBrands.",
        "fonte":"La Torre Marketing",
        "fontelink":"https://latorremarketing.com.br/news/marketing-talks-cps01-foi-marcado-por-clima-informal-e-conteudo-direto-ao-ponto/"
    },
    {
        "id": 2,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "31 de Julho de 2019",
        "header":"/posts/beer.jpg",
        "ytid": "KOVlXuQGAzY",
        "image1": "",
        "image2": "",
        "slug": "3-lugar-no-hackathon-pela-ambev-em-parceria-com-a-shawee",
        "title":"3º Lugar no Hackathon pela AMBEV em parceria com a Shawee",
        "description": "Nos dias 11, 12 e 13 de dezembro, participei do meu primeiro hackathon como Desenvolvedor Web, o Hackeando a Cervejaria do Futuro ...",
        "post": "Nos dias 11, 12 e 13 de dezembro, participei do meu primeiro hackathon como Desenvolvedor Web, o Hackeando a Cervejaria do Futuro. O Hackathon, organizado pela Ambev em parceria com a Shawee.\n\nTínhamos como desafios: Cervejaria Flexível e Sustentável e Produto Perfeito. Minha equipe acabou entre os finalistas, levando o terceiro lugar do evento.\n\nNosso projeto foi o Hopyeast, onde utilizamos técnicas de Engenharia Genética para obter inovação. Foi uma experiência desafiadora e agregadora de bastantes aprendizados, desenvolver uma solução viável para um problema em um final de semana me proporcionou reflexões sobre meu modo de trabalho, sobre organização e foco. Aprendizados que levarei sempre comigo para os próximos desafios da minha trajetória profissional.\n\nAgradeço ao meu time, Laura Camargos Pimenta, Eric Coimbra e Gabriela Cavalcanti sem eles não teríamos chegado ao pódio.",
        "fonte":"La Torre Marketing",
        "fontelink":"https://latorremarketing.com.br/news/marketing-talks-cps01-foi-marcado-por-clima-informal-e-conteudo-direto-ao-ponto/"
    },
    {
        "id": 2,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "04 de Janeiro de 2020",
        "header":"/posts/ghostface.jpg",
        "ytid": "",
        "image1": "",
        "image2": "",
        "slug": "primeiramente-deixe-me-apresentar-eu-sou-anderson",
        "title":"Primeiramente deixe-me apresentar, eu sou Anderson ...",
        "description": "Primeiramente deixa eu me apresentar, eu sou Anderson Marlon e incrementei o alter-ego Yagasaki na minha vida, além de ser um nome ...",
        "post": "Primeiramente deixa eu me apresentar, eu sou Anderson Marlon e incrementei o alter-ego Yagasaki na minha vida, além de ser um nome bem raro no Japão, fica mais fácil encontrar meu material na web, uma forma de identificador, apelido, o que quiser chamar. Por que Japão? Porque adoro animes, drift e a cultura em si, isso inclui ninjas, samurais e a cultura aesthetic.\n\nBom, como isso tudo surgiu? Em 2005 tive autorização de mexer no meu primeiro computador, não lembro das configurações, mas lembro dele ser um Windows 96 e eu tinha apenas oito anos de idade na época; Ali começou o meu amor pela tecnologia, pelo hardware e software. Mas foi lá em 2012 que a coisa saiu de apenas jogar para começar a desenvolver, eu ainda estava no Ensino Médio e vários cursos foi apresentado na sala por um palestrante, bom, eu nasci sobre uma doutrina de que tudo aquilo ou era enganação ou era um curso bem caro, mas decidi arriscar e me inscrevi para fazer Web Design e Design Gráfico pela MEC Poli, um curso com duração de dezoito meses e felizmente, não era tão caro, o meu comprometimento foi além e dali em diante, minha paixão aumentou ainda mais.\n\nDepois que eu terminei o curso comecei a desenvolver meu primeiro blog, chamava-se Uchihanime, ah velhos tempos, mas ele foi deletado com o tempo, eu achava o design dele muito ruim e não era de ficar acumulando experiências pela rede, eis então que senti falta e decidi melhorar em tudo e criei o Onigiri Hardcore, o objetivo dos dois blogs era espalhar conhecimentos de jogos, atualizações, séries e cinema, o Onigiri Hardcore durou bastante tempo e hoje conta com o Design e outros itens do projeto salvos no meu Behance (meu portfólio de Design Gráfico), já que o projeto foi descontinuado.\n\nFui acumulando experiências e com a vida surgiu muitas oportunidades, uma delas, em Julho de 2013, foi ser Operador da Sala de Informática no Ensino Médio, eu basicamente era o Tio do Computador que ajudava as crianças do Ensino Fundamental, isso contava com reparos e administração de redes também.\n\nEm 2016 entrei para o Exército e fui responsável pela manutenção de rede, som e rádios da Companhia de Comando da 11ª Brigada de Infantaria Leve em Campinas, depois deram a oportunidade de eu desenvolver um novo brasão para a Companhia usando como base documentações do Exército e alguns traços da Base Administrativa já existente, assim como também pude desenvolver o painel de instruções para segurança do armamento — ainda presente até nos dias de hoje sobre a caixa de disparo da Companhia do Exército.\n\nFiquei cerca de dois anos em experiência autônoma melhorando em Design Gráfico como em Desenvolvedor Front-End, tive oportunidades e concluí vários cursos na área, sendo eles: Ilustração e Design Gráfico para Web pela Bradesco (Maio de 2017), Web Design: Construção de Website com PHP, HTML, CSS e Javascript pela Udemy (Janeiro de 2019), Programação Web para Divulgação Científica pelo Professor Diego Mariano (Janeiro de 2019), Programação para Internet com HTML5 e CSS3, Lógica de Programação Essencial, Introdução ao GitHub e comandos essenciais para trabalhar em equipe e Introdução ao Git e Controles de Versões pela Digital Innovation One Inc. (Fevereiro de 2020) e vai se acumulando até os dias de hoje. Além também de ter participado da 11ª Edição da Semana Omnistack da Rocketseat onde tiver a chance de aprender sobre NodeJS, ReactJS e React Native. Todas essas experiências e certificações estão disponíveis no meu Linkedin.\n\nE atualmente estou a desenvolver vários projetos com uma organização, da qual eu fundei, chamada Kalify, lá, sou responsável por desenvolver o Web Essentials, um website com listas de programas essenciais para o computador, principalmente após uma formatação, assim ao invés de ficar pulando de site em site na busca desses programas, você encontrar tudo em um único lugar — com Dark Mode incluso. Outros projetos você poderá encontrar no site do Kalify ou no meu GitHub.\n\nEsse sou eu, tem muitas outras coisas que foram desenvolvidas, foram evoluindo e você pode ir acompanhando tudo isso através das minhas redes sociais e incluindo através desse blog",
        "fonte":"",
        "fontelink":""
    },
    {
        "id": 3,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "11 de Janeiro de 2020",
        "header":"/posts/baseball.jpg",
        "ytid": "",
        "image1": "",
        "image2": "",
        "slug": "como-conseguir-experiencia-sendo-junior-iniciante",
        "title":"Como conseguir experiência sendo Júnior/Iniciante",
        "description": "Na área de desenvolvimento é uma coisa incrível, aonde você olha tem algum desenvolvedor fazendo sua função para alguma empresa ...",
        "post": "Na área de desenvolvimento é uma coisa incrível, aonde você olha tem algum desenvolvedor fazendo sua função para alguma empresa, startup ou dando conta com os freelas. Mas por quê isso não acontece com você? Eu entendo perfeitamente seu ponto de vista, seja você, um Júnior que está a muito tempo sem um trabalho, um desenvolvedor que não consegue nem freelas ou um iniciante que acabou de fazer seu portfólio e acredita que o mundo realmente precisa te contratar pelas suas linhas de código. Mas vamos com calma.\n\nQuando terminei meu curso de Web Design / Design Gráfico em Dezembro de 2014, não me empolguei logo de primeira em sair desenvolvendo, eu era novo, estava no Ensino Médio e tinha muita coisa pela frente. Em 2015, entrei no Colégio Técnico da Unicamp (Cotuca) e comecei a fazer Informática para Internet, um curso técnico sobre desenvolvimento de software, inicialmente eu pensei que seria inteiramente para desenvolvimento de sistema através da web, mas engano meu. Tive muita dificuldade com o curso, mas aprendi muita coisa referente aos Bits, HTTPs, IPs, como funcionava lógica de programação e como desenvolver em Delphi e Pascal, traduzindo, aprendi o que era o baixo nível.\n\nDepois disso tive que interromper o curso para fazer o Alistamento Militar Obrigatório — que de obrigatório não tive nada, já que eu era voluntário — o que foi uma baita experiência e recomendo para todos, isso inclusive melhorou meus aspectos de comunicação, entender como funciona cada procedimento e vários outros quesitos que vou deixar para outra publicação.\n\nDepois que eu saí do Exército fiquei dois anos sem emprego, até mudar de cidade — uma baita loucura — e começar a trabalhar em um restaurante a 622km da minha casa. Isso ampliou muito meu entendimento de como funciona a cabeça do cliente, como funciona cada processo de um restaurante, a preparação, o procedimento, a metodologia para criação de um hamburguer, precificação e muito mais.\n\nSó então, depois disso, quando voltei para Campinas por conta da pandemia, eu comecei a trabalhar como Desenvolvedor Front-End de verdade. Pois nesse período onde eu fazia várias outras coisas, eu aumentei meu portfólio, melhorei meu Github e fui conhecendo processos e pessoas.\n\nNão se sinta mal por não conseguir um emprego nessa área ainda, talvez lhe falte experiência em outros âmbitos, talvez, comunicativo, melhorar em um aspecto da linguagem ou qualquer outra coisa, melhore a si mesmo para que os outros possam receber essa melhoria.\n\nEntenda que todo currículo que a gente entrega, inicialmente vai para o RH — que raramente vai entender de fato o que um projeto precisa — quando essa pessoa do Recursos Humanos mostra para o responsável pelo projeto, aí chega os termos técnicos, as avaliações mais acirradas, mas se seu portfólio não chamar atenção nem para o avaliador inicial, como vai chegar até o responsável pelo projeto?\n\nImpressione!\nPara impressionar não precisa de muito, você só precisa melhorar seu portfólio, aumentar seus repositórios com conteúdos de qualidade e espalhar experiência. Porque às vezes, a experiência que você está precisando, pode não vir de outro emprego, como eu fiz, mas de um novo projeto que você ainda não desenvolveu, um objetivo que não te prendeu, um obstáculo que não te deixou mais de três horas estudando para entender como funciona e o que precisa ser feito para dar certo.\n\nTenha confiança\nFaça as pessoas acreditarem que você é capaz de fazer ou desenvolver. Caso você realmente não tenha essa habilidade, não tem problema, mostre a elas que você tem capacidade de aprender e vontade de absorver aquilo como experiência na sua vida.\n\nE acima de tudo, mantenha-se atualizado\nDe nada adianta tentar impressionar, se você está usando metodologias ou ensinamentos antigos e também colocá-los em prática é um bom caminho para se conseguir experiência e entendimento das tecnologias e funcionalidades. Participe de comunidades, grupos no Discord e envolva-se com a comunidade, peça gentilmente para ouvir a história de um Junior, um Pleno ou um Sênior para você ver o que ele passou, o que deixou de passar e o que ele/ela fez para chegar onde chegou, use as histórias como guias, não como a rota definitiva da sua vida.",
        "fonte":"",
        "fontelink":""
    },
    {
        "id": 4,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "11 de Janeiro de 2020",
        "header":"/posts/notebook2.jpg",
        "ytid": "",
        "image1": "",
        "image2": "",
        "slug": "minha-experiencia-com-o-desenvolvimento-do-blog-com-nextjs",
        "title":"Minha experiência com o desenvolvimento do blog com NextJS",
        "description": "Vou contar a minha experiência que tive ao desenvolver esse blog - o blog passado - e isso vai contar até mesmo quando eu tive o contato pela primeira vez com o NextJS.",
        "post": "Vou contar a minha experiência que tive ao desenvolver esse blog - o blog passado - e isso vai contar até mesmo quando eu tive o contato pela primeira vez com o NextJS.\n\nEu tinha visto um tutorial sobre criar um blog com NextJS e MongoDB como contador de visitas pela Rocketseat. Achei interessante e até usei no primeiro evento da Aperture Laboratories, na edição Mercury, muita gente aprendeu, tirou dúvidas e viu como era simples desenvolver e para mim, foi a maior bagunça mais bem explicada que eu tive, um desastre, pessoalmente falando. Mas como muita gente gostou, não me importei e várias pessoas carregam o selo de ter participado desse evento.\n\nEu até tempos atrás, nunca havia mexido com NextJS, depois disso comecei a trabalhar com VueJS pela facilidade e somente esses tempos, em Abril para ser mais exato, eu havia entrado para a Cenário Capital e meu maior medo, se tornou o meu maior desafio. Enfrentar React e NextJS, levei uma dor de cabeça, muito tempo de estresse, frustrações, até finalmente chegar aonde eu estou hoje, cinco meses depois, e eu consegui auxiliar, criar e desenvolver uma aplicação em NextJS, atualmente, super recomendo e não tenho meta nenhuma de trocar de tecnologia tão cedo.\n\nA aplicação, um site de comparadores de cartão de crédito pela Cenário Capital, você pode conferir ela em https://cartaodecreditos.com.br/ e foi uma baita experiência, um nível de adaptação e entender código dos outros que não achei que conseguiria a tempo.\n\nHoje, cinco meses depois, coloquei na minha cabeça que eu tinha que montar meu próprio blog, ficar dependendo de sites como Polywork, Medium, Linkedin, Twitter é um negócio muito separado e eu preciso é de foco, um lugar para compartilhar e ficar apenas ali, sendo algo meu e único e dessa vez em código aberto - não seria justo com quem está aprendendo agora.\n\nO blog foi desenvolvido com o template do NextJS para blogs, não tem muito segredo, o design dele foi apenas reformulado em questão de cores, não mexi muito na estética e deixei as coisas em português, incluindo a formatação da data, daí para frente só alegria, exceto por uma questão. Replicar a página inicial.\n\nA página inicial do site não é o blog, é um antigo portfólio que muitos admiram, falam bem e elogiam, apesar de secretamente ter sido um template, agora as coisas serão diferentes, porquê serei obrigado a remontar ele, fazer o desenvolvimento do zero, agora usando NextJS e Typescript, é um grande desafio que virá pela frente e com muitas dores de cabeça, certamente, mas valerá a pena.\n\nÉ isso, a parte do blog é fácil, montar, reutilizar alguns elementos e aproveitar isso, mas para mim, criar a página inicial foi a mais, e com certeza, vou carregar essas experiências para o resto da vida e você pode conferir esse progresso diretamente no meu GitHub.",
        "fonte":"",
        "fontelink":""
    },
    {
        "id": 5,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "05 de Março de 2022",
        "header":"/posts/restaurant.jpg",
        "ytid": "",
        "image1": "",
        "image2": "",
        "slug": "front-end-back-end-full-stack-o-que-e-e-para-onde-ir",
        "title":"Front-end, Back-end, Fullstack, o que é e para onde ir?",
        "description": "Vou contar a minha experiência que tive ao desenvolver esse blog - o blog passado - e isso vai contar até mesmo quando eu tive o contato pela primeira vez com o NextJS.",
        "post": "Front-end, back-end, fullstack, mobile developer, o que são esses nomes e para onde seguir?\n\nÉ uma questão simples, mas para quem está começando vejo que tem muita dificuldade em olhar aonde quer ir e o que fazer.\n\nEm uma publicação no Twitter, através da @kalifyinc e do @sseraphini, eu anunciei que iria fazer uma mentoria gratuita e ajudar muitas pessoas a encontrar seu lugar no mundo de desenvolvimento. É uma questão simples, mas muita gente fica indecisa, não tem orientação e muito mais fica perdida em descobrir aonde é o seu devido lugar.\n\nPara alguns desenvolvedores que sabe aonde ir, como ir e o que fazer esse questionamento fica até curioso, mas vamos lá, inicialmente, vamos aos principios básicos. O que é front-end, back-end, fullstack e mobile developer.\n\nFront-end\nImaginemos um restaurante, certo? Acho que essa é a melhor analogia que existe para explicar a situação. Temos a área de serviço, aonde os clientes chegam, pedem o cardápio, fazem o seu pedido, temos a área da cozinha e os garçons.\n\nEntenda que o front-end referente ao restaurante, ele é a área de serviço, ele é a costumização do ambiente para receber o cliente e deixar tudo atrativo para que o cliente possa usar o ambiente. Ele é o layout interativo, aquele design bonito, aquela página foda, tudo funciona ali, esse é o front-end, o cara responsável por deixar o restaurante mais bonito.\n\nPor isso chamamos ele de \"client - cliente do inglês\".\n\nBack-end\nQuando um cliente faz alguma solicitação, ela é passada para o garçom (API) que vai até a cozinha (back-end), faz o que precisa ser feito e depois devolve o que cliente solicitou ao front-end.\n\nEntão ele é o responsável pela cozinha, tudo que acontece debaixo dos panos, seja para receber informações de um CPF de um cidadão e devolver ao front, seja para pegar informações de um cliente, uma receita de bolo que esteja no banco de dados, o nome de restaurantes e seus pedidos no iFood, tudo isso.\n\nPor isso chamamos ele de \"server - servidor do inglês\", porque ele serve as informações ao front.\n\nFullstack\nImaginou todo o restaurante né? Isso é lindo de se ver, mas e o desenvolvedor fullstack? Qual é a função dele? Já que temos o restaurante em mãos, pense em uma pessoa só tomando conta de tudo isso? Vai lá, fala com o cliente, pega o pedido, leva pra cozinha, prepara o prato e depois volta, muito trabalhoso para uma pessoa só, não é mesmo? Mas existe. Ele seria meio que o dono da banquinha de cachorro quente, ele conhece ambas as áreas e se der problema ele sabe resolver.\n\nMas também existe aqueles que são mais comparados a um trailer de lanche na chapa, porque é mais fácil entender que a complexidade dele é bem menor, mas não deixa de ser um fullstack, diferente de tentar agir dessa maneira em um restaurante grande e chique.\n\nPor isso ele se chama de fullstack, full de completo e stack de pilha. Ele ou ela é uma pilha completa.\n\nMobile\nO desenvolvedor mobile não tem segredo. Diante de todo o cenário, pouquíssimas pessoas possuem um computador em casa, comparado ao nível de pessoas que possuem um celular, é muito mais favorável transformar toda a estrutura em um aplicativo de celular. Principalmente se o aplicativo, em questões de restaurante, seja um aplicativo de pedidos, cardápio e muito mais, ele é o cara que vai transformar todo aquele restaurante, aquela comunicação em uma versão menor, portátil, mas que consegue atender o cliente da mesma maneira que uma versão de desktop. Um exemplo disso é o iFood.\n\nConseguiram entender as diferenças? A questão é, qual você se identifica mais? Uma pessoa que consegue pegar um projeto de design e transformá-lo em site? Uma pessoa que recebe informações do cliente e entrega para ele uma série de informações, como uma Pokédex? Ou uma pessoa que consegue dominar tudo isso? Ou o melhor, tudo isso e transformar também em uma versão mobile?\n\nEscolha o melhor cenário, não faz diferença se você ficar pulando de um para o outro até encontrar o seu ambiente preferido. Porque independente de tudo, você vai saber entender como funciona ambos os lados e isso te transforma em um profissional ainda melhor.\n\nMINHA OPINIÃO É!\nTome cuidado! Porque aquele é muito bom em uma coisa, geralmente não é boa em outra e aquele que tenta ser especialista em ambos, acaba se tornando mediano.\n\nExistem sim pessoas que dominam ambas as áreas e são excelentes fullstacks, mas não ache que isso irá funcionar do dia para a noite e muito menos de um mês para o outro. Estude, dedique-se, se esforce e siga um roadmap (um caminho de aprendizagem) para guiar você melhor nessa jornada.\n\nE por isso, recomendamos fortemente o:",
        "fonte":"Roadmap SH.",
        "fontelink":""
    },
    {
        "id": 6,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "18 de Abril de 2022",
        "header":"/posts/notebook.jpg",
        "ytid": "",
        "image1": "",
        "image2": "",
        "slug": "conheca-sobre-developer-relations",
        "title":"Conheça sobre Developer Relations (#DevRel)",
        "description": "Graças a uma live na Twitch pelo @NandoSangenetto em entrevista com a @Pachicodes, atual DevRel da Github - e uma das membras ...",
        "post": "Graças a uma live na Twitch pelo @NandoSangenetto em entrevista com a @Pachicodes, atual DevRel da Github - e uma das membras da Kalify Community - pude ter uma noção e uma visão geral do que era um assunto um tanto como complexo e perdido para mim, mas que foi esclarecedor graças a essa live, o que é um Dev Rel!\n\nVamos por partes, tive referências de vários projetos, livros e artigos para chegar nessa linha de raciocínio que compartilho com vocês e claro, deixo tudo mais fácil de se entender.\n\nO que é um Dev Rel?\nImagine que a empresa quer construir um relacionamento autêntico com a comunidade de desenvolvedores, então a pessoa responsável por cuidar do Twitter dessa empresa tem que ser autêntica, se preocupar com os desenvolvedores e com as tecnologias com as quais a empresa trabalha.\n\nOs DevRels, vem de Developer Relations, ou seja, relacionamentos entre desenvolvedores e empresas. Uma das nomeclaturas que muitas empresas usam para se referir a esses relacionamentos é o DevRel, Community Manager, Tech Evangelist, Developer Advocate, enfim, existem vários outros.\n\nA responsabilidade desse membro é criar conteúdo para a comunidade, seja através de artigos, palestras, podcasts, vídeos, entre outros. Ou seja, ter sua marca, fazer parte da comunidade.\n\nGeralmente esses membros respondem perguntas da comunidade, fazem perguntas para gerar um engajamento maior e ajudar outros desenvolvedores, eles escutam o que as comunidades estão falando, o que pode ser aprimorado, o que pode ser alterado, o que é que está em alta, enfim, são os responsáveis por fazer a ponte entre a empresa e o desenvolvedor nas comunidades. Eles pegam essas informações, e alinham com a empresa para deixar o produto mais amigável ao desenvolvedor - principalmente se for um recurso para esse nicho em específico.\n\nDeu para ter um pouco do entendimento da jogada?\n\nComo fazer parte desse meio?\nUm dos pontos é, seja uma desenvolvedora ou desenvolvedor que realmente faz parte da comunidade, comece escrevendo artigos. Você pode usar o Medium, Twitter, Dev.To, Notion ou até mesmo seu próprio blog, mas escreva, construa o seu perfil na comunidade e seja reconhecido aos poucos. Você pode escrever sobre o que está aprendendo ou ensinar algo que acabou de aprender ou até mesmo que saiba bem a tempos.\n\nEsse é um dos pontos em que nem eu entrei ainda e acho difícil, ainda mais na velocidade em que se consomem conteúdos e as comunidades se conversam, mas, planeje fazer palestras, seja em meetings, conferências, organize com a prefeitura da sua cidade - não se desanime se houver poucas pessoas interessadas - compartilhe conhecimento, seja reconhecido, mostre que através dos seus artigos, você é capaz de lecionar ou guiar pessoas para que sejam desenvolvedoras e que sejam capazes de compartilhar isso com a sociedade.\n\nSeja ativo na comunidade, seja através do Discord, Twitter, Twitch ou Dev.to, faça a sua marca, compartilhe conhecimento, saiba se conectar e ajudar outros desenvolvedores, isso gerará uma reputação em cima de seu perfil, um certo peso, em que as pessoas vão atrás de você para conseguir conhecimento e não ficar horas procurando na internet. Então seja ativo.\n\nE lembre-se continue escrevendo códigos, você tem sim uma conexão com a comunidade, é muito mais fácil se conectar com um desenvolvedor através desse meio, mas não esqueça que se manter atualizado também é parte fundamental desse trajeto.\n\nInfelizmente não existem tantas vagas na área atualmente no Brasil, mas como nós nos espelhamos muito com o que existe lá fora, é uma possibilidade grande para ser um dos pioneiros.Então estude, se esforce, crie seu público e leia, temos a recomendação do livro Getting Started in Developer Relations de Sam Julien (em inglês) como uma leitura para começar a se aventurar nessa área e conhecer mais a fundo.",
        "fonte":"Getting Started in Developer Relations de Sam Julien",
        "fontelink":"https://learn.samjulien.com/getting-started-in-developer-relations"
    },
    {
        "id": 7,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "24 de Agosto de 2022",
        "header":"/posts/office.jpg",
        "ytid": "",
        "image1": "",
        "image2": "",
        "slug": "habitos-desenvolvedores-produtivos",
        "title":"14 Hábitos de Desenvolvedores Altamente Produtivos",
        "description": "O livro foi escrito por Zeno Rocha e foi resumido pelo Felipe Suri.",
        "post": "Eu estava navegando na internet quando me deparei com esse livro. 14 Hábitos de Desenvolvedores Altamente Produtivos, escrito pelo Zeno Rocha, não cheguei a fazer a aquisição dele, mas encontrei um breve resumo do Felipe Suri e decidi compartilhar alguns desses hábitos, não colocarei os catorze aqui, já que prefiro selecionar os mais importantes para mim, que futuramente servirá como um lembrete e acredito que servirá também para você.\n\nO link do livro original em português pela Amazon estará no final desse artigo\n\nFoco nos fundamentos\n\"Você pode praticar arremessos oito horas por dia, mas se sua técnica estiver errada, tudo o que você se tornará será muito bom em arremessar da maneira errada. Pratique os fundamentos e o nível de tudo o que você fizer vai subir.\" - Michael Jordan.\n\nA ideia principal é que, aprender os fundamentos vai te preparar para o futuro. Se você deseja se tornar um ótimo desenvolvedor, é importante entender os principais conceitos, como algorítimos, lógica, redes, acessibilidade, segurança e experiência do usuário. Você não precisa necessariamente deles, para criar a sua primeira aplicação, mas conhecê-los vai te ajudar a criar os próximos dez aplicativos complexos que você criará no futuro.\n\nGaste um tempo pesquisando quais são os conceitos fundamentais em seu campo. Pegue um pedaço de papel e divida-o em duas colunas. No lado esquerdo, liste todo o conhecimento que você já possui. No lado direito, liste todo o conhecimento que você ainda precisa adquirir. Planeje um horário dedicado do seu dia para estudar esses conceitos.\n\nPara escolher uma nova linguagem, tenha confiança de que ela é a melhor escolher possível, busque entender a teoria por trás de cada recurso. Para aprender uma linguagem, tente reescrever algum projeto já feito em outra linguagem, pois assim seu foco será todo em entender a linguagem e não em resolver o problema da aplicação.\n\nEnsinar é igual a aprender\n\"Poder não vem do conhecimento adquirido, mas do conhecimento compartilhado.\" - Bill Gates.\n\nCaso você decida ensinar alguém, não será fácil, você vai querer desistir muitas vezes. Segundo diversos estudos, o medo número um das pessoas é falar em público.\n\n5 atos das apresentações do Zeno Rocha:\n\nAto 1 - O convite: Tudo começa com um e-mail aleatório. De repente chega uma notificação em seu e-mail, é de um organizador de eventos que está animado com o trabalho que você faz. Ele pede para que você vá no evento que ele está organizando para você compartilhar o seu conhecimento. Você aceita esse convite.\n\nAto 2 - Cai a ficha: Algum tempo depois, você olha o seu calendário e percebe o quão rápido aquele evento está se aproximando. Você entra em pânico quando percebe que ainda nem começou a trabalhar a sua apresentação. Você sabe que precisa preparar algo, porém sempre aparece algo mais importante para fazer.\n\nAto 3 - Surtando: Os dias se passaram e chegou a semana do evento. Você ainda não conseguiu preparar seu conteúdo. Você começa a se arrepender e se perguntas *\"Por que eu aceitei esse convite? Que desculpa posso dar? Sou apenas um desenvolvedor, não sou palestrante!\"*. Agora, as passagens de avião já foram compradas, a reserva do hotel, feita e a organização do evento já anunciou seu nome e você não pode voltar atrás. Então de alguma forma você encontra tempo e prepara o seu conteúdo.\n\nAto 4 - A hora da verdade: O dia do evento chegou. Você está prestes a apresentar-se para centenas de pessoas. Você está com medo e se sente uma fraude. Mas você não pode recuar, você apenas enfrenta a situação e tenta fazer o seu melhor.\n\nAto 5 - Vamos fazer de novo: A sua apresentação termina. Sua adrenalina está extremamente alta. Algumas pessoas te procuram nos corredores e perguntam sobre algumas ideias que você compartilhou. Você se sente incrível e sente que causou impacto na vida de outras pessoas. Alguns meses depois você se submete a outro evento e tudo acontece de novo.\n\nNo fim das contas, que tira o proveito da situação de ensinar outras pessoas, é você, que aprendeu mais alguma coisa no meio dessa situação toda.\n\nEncontre um evento online e submeta uma apresentação. Abra um software de compartilhante de tela e registre-se fazendo alguma coisa. Crie um blog e compartilhe um artigo. Escolha qualquer tópico que você deseja aprender e tente ensiná-lo.\n\nHábitos do dia-a-dia\n\"Tudo que precisa ser dito já foi dito. Mas, como ninguém estava ouvindo, tudo deve ser dito novamente.\" - Austin Kleon.\n\nHá uma linha tênue entre intensidade e burnout (esgotamento profissional). Muitos de nós já cruzamos essa linha e é muito difícil voltar.\n\nQuando este tipo de comportamento [passar horas extras no escritório] se torna normal, você deve parar e prestar atenção ao que realmente está acontecendo.\n\nQuebrar as regras. Fazer o que quiser. Esses conceitos são todos admirados por nós. No fundo, todos nós queremos ser rebeldes. Disciplina. Consistência. Persistência. Esses conceitos não são nada sexy, mas são a chave para jogar jogos infinitos.\n\nPesquisa de James Carse: Jogos finitos vs Jogos infinitos.\n\nO jogo finito é definido como tendo jogadores conhecidos, regras fixas e objetivos preestabelecidos.\n\nO jogo infinito, por outro lado, é definido como aquele em que existem jogadores conhecidos e desconhecidos, as regras são mutáveis e o objetivo não é vencer, é continuar jogando. Como não há vencedores e perdedores, o que acontece é que os jogadores abandonam o jogo quando ficam sem vontade ou sem recursos para jogar, o que os leva a serem substituídos por outros jogadores.\n\nQuando há um jogador finito contra um jogador finito, o sistema é estável. Quando há um jogador infinito contra um jogador infinito, o sistema também é estável. Os problemas começam quando o jogo é de um jogador finito contra um jogador infinito, pois o jogador finito está jogando para ganhar e o jogador infinito está jogando para permanecer no jogo.\n\nA programação é um jogo finito. O objetivo é continuar jogando, visto que você não pode vencer na programação, você só pode continuar evoluindo.\n\nProgramadores que jogam o jogo finito, estão focados em bônus no final do ano.\n\nProgramadores não devem fazer estimativas com dias perfeitos, pois sempre terá alguma distração durante o seu dia.\n\nNão trabalhe durante a noite, isso não te dará clareza para pensar no outro dia.\n\nOs melhores programadores, geralmente são mais disciplinados, sempre são organizados.\n\nOs bons programadores, investem tempo em se comunicar bem e com clareza.\n\nFaça o seu futuro eu\n\n\"Quando você sentir necessidade de fazer um comentário, primeiro tente reestruturar o código de modo que qualquer comentário se torne supérfluo.\" - Martin Fowler.\n\nAté os melhores programadores do mundo, já escreveram código ruins no passado.\n\nA razão pelo qual escrevemos código ruim ou enviamos commits meia boca está relacionada com o que estamos passando naquele dia em específico.\n\nNós geralmente escrevemos código para o \"eu atual\". Mas na verdade, precisamos escrever para o \"eu do futuro\".\n\nDa próxima vez que for escrever uma linha de código se pergunte: \"O futuro eu, entenderá o que essa linha faz?\"\n\nAbra um projeto atual em que você esteja trabalhando. Existe alguma refatoração que você possa fazer para facilitar a vida do seu eu do futuro?\n\nQuando você faz uma pequena modificação no inicio de um projeto, pode mudar significativamente o fim dele.\n\nBusque os seguintes passos:\n\n1. Escrever código simples com nomes significativos da variáveis/métodos e classes. Não assuma que outras pessoas entenderão nomes abreviados que não significam muito ou alguns termos que podem mudar com o tempo.\n\n2. Ter bons testes automatizados. Isso fornecerá documentação adicional sobre seu código e também ajudará qualquer pessoa que precise trabalhar nele no futuro.\n\n3. Use ferramenta de controle de versão como documentação. A medida que o projeto evolui, são feitas alterações e correções de bugs o tempo todo. No futuro, quando se tornar um código legado, ninguém conseguirá entender as decisões e alterações feitas naquele momento, se não estiverem documentadas. O histórico de commits e pull request são uma boa ferramenta para explicar os porquês.\n\nDisciplina vs Motivação\n\"Não espere estar motivado todos os dias para chegar lá e fazer as coisas acontecerem. Você não estará. Não conte com a motivação. Conte com a disciplina.\" - Jocko Willink.\n\nO trabalho normal de um programador não é suficiente para mostrar todo o seu potencial. Geralmente estamos vinculados a restrições tecnológicas da empresa.\n\nVocê possui tempo suficiente, não deixe de ser uma pessoa melhor em busca de ser um programador melhor, faça ambos ao mesmo tempo.\n\nPense nas habilidades que você acha que poderiam ser melhoradas. Você pode planejar um tempo extra para desenvolvê-las? Até mesmo 10 minutos por dia podem fazer a diferença.\n\nDomine o lado sombrio da força\n\"Nomeado deve ser o seu medo, antes de bani-lo, você pode.\" - Yoda.\n\nSegundo um estudo da Evans Data Corporation (EDC), a partir de 2019, já existiam 26 milhões de desenvolvedores de software em todo o mundo. É muito importante que o densenvolvedor saiba também entender o lado do negócio, isso é uma habilidade rara.\n\nDicas para conhecer o Lado sombrio (o lado dos negócios):\n\nEconomize tempo: Mesmo que você gaste dezenas de horas planejando antes de começar a trabalhar em uma funcionalidade específica, você sempre descobrirá novas implicações e casos extremos que afetam suas implementações. Quanto melhor você entender o negócio, melhor será para resolver esses problemas. Quando você encontra essa exceção á regra, é mais provável que você já saiba a resposta e assim evite ter que agenda uma reunião com o especialista para encontrar uma solução.\n\nEvite código complexo: Sempre queremos criar o código mais abstrato, flexível, extensível e reutilizável possível. Queremos tanto que ás vezes desenvolvemos uma aplicação excessivamente complexa. Essas implementações nunca serão estendidas ou reutilizadas, gerando um cemitério de códigos. Há certas coisas que nunca serão estendidas, porque esse simplesmente não é o foco da aplicação. Quando você possui experiência de negócio, você está em uma posição muito melhor para determinar qual parte da base de código precisa de mais atenção do que outras.\n\nPriorize melhor: Se tivermos um prazo para a próxima semana, a implementação será muito diferente da prevista para amanhã. Essa é apenas a realidade do trabalho. Com um melhor conhecimento de negócios, é mais fácil priorizar as micro-decisões que você precisa tomar ao programar. Você pode prever em que parte é mais importante gastar tempo. Você pode se colocar no lugar do usuário e sentir sua dor. Além disso, quando você souber quais são as funcionalidades de negócio mais criticas, provavelmente escreverá um código de alta qualidade nessa área, o que impedirá assim refatoração futura.\n\nUma pessoa que sabe programar é poderosa, uma pessoa que sabe programar e sabe como negócios funcionam é imparável.\n\nElabora uma lista de termos mais comuns usados no seu ambiente de trabalho. Converse com seus colegas para entender suas áreas. Como é o funil de vendas? Quais nichos de marketing estão sendo visados? Quais são as perguntas mais comuns do suporte ao cliente? Qual é a diferença entre o seu produto e o dos concorrentes?\n\nProjetos paralelos\n\"Fracasso e invenção são gêmeos inseparáveis. Para inventar você precisa experimentar, e se você sabe com antecedência que isso vai funcionar, então não é um experimento.\" - Scott Galloway.\n\nGrandes startups, começaram sendo projetos paralelos. Projetos paralelos podem ser uma tremenda oportunidade para aumentar seu portifólio.\n\nPerguntas a se fazer antes de iniciar um projeto em paralelos: Um projeto significa que você vai precisar renunciar o seu tempo pessoal para trabalhar nele, portanto, a coisa mais importante a se perguntar é: \"Eu realmente gosto deste assunto?\"\n\nSe a resposta for \"não\", há chance de que você não tenha prazer em realizar aquele projeto e deixará ele pela metade.\n\nLeva tempo para um projeto paralelo ganhar tração, então a próxima coisa que você deve se perguntar é: \"Estou disposto a passar pelo menos cinco anos trabalhando nessa ideia?\" Ter uma ideia é uma coisa, ter a capacidade de executá-la é outra, portanto, você deve se perguntar: \"Posso executar essa ideia complemente sozinho?\"\n\nSe a reposta for \"não\", considere aprender uma nova habilidade ou convidar um amigo para preencher as lacunas.\n\nDizer \"sim\" para uma ideia significa dizer \"não\" a várias outras ideias, então pergunte a si mesmo: \"Essa ideia em particular é melhor do que outras que eu tive no passado? Existe alguma outra ideia que poderia usar melhor o meu tempo?\"\n\nEntender para quem você está construindo essa solução é vital. Se você não conhece seu público, é improvável que você entenda as necessidades desse público, então pergunte a si mesmo: \"Tenho esse problema pessoalmente ou estou resolvendo para outra pessoa?\"\n\nE a última pergunta é: \"Por que estou animado com essa ideias agora?\"\n\nNos próximos dias, preste atenção aos aplicativos que você mais usa. Falta alguma coisa neles? Você seria capaz de criar uma versão melhor disso? Tenha um bloco de notas dedicado para todas as suas ideias de projetos paralelos e leve as notas para todos os lugares com você. Quanto estiver pronta, escolha uma dessas ideias e tente.\n\nEscute mais, fale menos\n\"Sábios falam poque têm algo a dizer. Tolos porque têm que dizer alguma coisa.\" - Platão.\n\nUma empresa é composta por uma variedade de profissionais. Às vezes, as decisões são tomadas com números e outras com sentimentos. Uma empresa não é um logotipo, não é um prédio, é simplesmente uma aglomeração de pessoas, se você quiser se tornar eficaz lá, precisará se comunicar bem, mesmo se for introvertido.\n\nUm equívoco que muitas pessoas comentem é acreditar que precisamos ouvir para responder, enquanto na realidade, precisamos ouvir para entender. Todo mundo que você conhece, está travando uma batalha que você não conhece, seja gentil, sempre.\n\nNa próxima reunião, escolha praticar suas habilidades de escuta. Em vez de ser o primeiro a dizer algo, espere até que todos compartilhem suas ideias e seja o último a falar. Isso dará a todos os outros a sensação de serem ouvidos, e você terá o benefício de ouvir as ideias de todos antes de compartilhar suas próprias opiniões.\n\nEspecialista vs. Generalista\n\n\"O próxima Bill Gates não criará um sistema operacional. O próximo Larry Page ou Sergey Brin não criará um mecanismo de busca. Se você está copiando essas caras, você não está aprendendo com eles.\" - Peter Thiel.\n\nDepois de chegar \"no rank\" Sênior, surge um novo dilema: que caminho você deve seguir?\n\nTornar-se um especialista, alguém ciente de todos os detalhes de um determinado assunto?\n\nTornar-se um generalista, alguém capaz de abordar uma variedade de assuntos diferentes?\n\nA resposta dependerá de uma auto-análise. Você precisará entender em qual caminho você mais se encaixa.\n\nExamine seu dia de trabalho. Examine sua semana de trabalho. Quais são as partes que mais te deixam animado? Que tipo de trabalho você prefere fazer? Examine sua empresa. Examine sua equipe. No que eles estão com mais dificuldades? Existe alguma coisa com a qual você possa ajudar?\n\nControle suas variáveis \"A única coisa sobra a qual você às vezes tem controle é a sua perspectiva. Você não tem controle sobre sua situação. Mas você tem a escolha sobre vê-la.\" - Chris Pine.\n\nNós não possuímos controle sobre variáveis que são criadas e alteradas por outras pessoas. Não possuímos controle algum sobre essas variáveis, mas mesmo assim ela nos afeta.\n\nVariáveis que você pode controlar:\n\nSeus pensamentos.\nQuem são seus amigos.\nO que você come e bebe.\nComo você gasta o seu dinheiro.\nO que você faz com o seu tempo.\nComo você trata seu corpo.\nQuanto você aprecia as coisas que você já tem.\nVariáveis que você não pode controlar:\n\nO clima.\nA economia.\nA saúde pública.\nComo as pessoas tratam você.\nO que as pessoas pensam de você.\nO que as pessoas gostam ou não.\nO que aconteceu no passado.\n\nQuais são as variáveis com as quais você está preocupado agora? Quantas delas estão fora do seu alcance?\n\nPare de esperar\n\"Sofremos mais frequentemente na imaginação do que na realidade.\" - Seneca.\n\nUma característica presente em quase todos os seres humanos é nunca estarmos satisfeitos com a vida. E não há nada de errado, desejar um futuro melhor é um princípio básico do ser humano.\n\nO problema em querer mudar é a palavra \"mas\":\n\n\"Este país é horrível, preciso me mudar urgente, mas não sei outro idioma.\"\n\n\"Eu tenho uma ideia incrível, preciso colocar em prática, mas eu não tenho tempo.\"\n\nA única coisa que impede você de conseguir algo é você mesmo. Quando você começar a se perguntar como resolver esses problemas (como a falta de tempo por exemplo), verá que por trás de cada desculpa existe uma alternativa.\n\n\"E agora que o fim está próximo. E então eu encaro a cortina final. Meu amigo, eu vou dizer isso claramente. Vou expor o meu caso, pois dele eu tenho certeza. Eu vivi uma vida cheia. Eu viajei por toda e qualquer estrada. E mais, muito mais que isso, Eu fiz do meu jeito.\" - Frank Sinatra.\n\nAgradeço imensamente ao Zeno Rocha por ter escrito esse livro e ao Felipe Suri pelo resumo.",
        "fonte":"",
        "fontelink":""
    },
    {
        "id": 8,
        "author": "Anderson \"Yagasaki\" Marlon",
        "date": "07 de Outubro de 2022",
        "header":"/posts/email.jpg",
        "ytid": "",
        "image1": "/images/fetch.png",
        "image2": "/images/fetch2.png",
        "slug": "enviando-um-email-usando-nextjs-ou-reactjs-com-fetch",
        "title":"Enviando um e-mail usando NextJS ou ReactJS com Fetch",
        "description": "“Um desafio seguido de muita quebra de cabeça e depois, o alivio. Obrigado The Programmer\"s Hangout!”",
        "post": "Essa semana me deparei com um problema, era um problema simples, enviar uma requisição para um endpoint (POST) para enviar o nome do usuário e o e-mail dele, a famosa Newsletter. Em tese não tem muito segredo nesse código, você precisa pegar os valores do input e passar para o corpo da requisição para enfim depois, enviar em um formato JSON (comunicação universal).\n\nA questão é que eu estava com um problema tão grande com o NextJS a respeito de enviar a requisição, que toda as vezes que eu clicava em enviar, ele retornava \"Failed to fetch\", não entendi o porquê, isso porque estava usando console.log(error) e ele apenas informava isso e nada mais.\n\nGraças a um usuário do Discord (gosha#6801), me informou que pelo fato de estar enviando uma requisição utilizando form, não dava tempo de enviar a requisição, já que todas as vezes, ele dava refresh na página e cancelava.\n\nA resposta para isso? Era utiliza o onSubmit={(e) => e.preventDefault()} e redirecionar o usuário quando terminasse a execução.\n\nO que o código faz? Ao dar submit, ao invés dele dar aquele famoso refresh do formulário, ele apenas enviará e irá dar um \"pausebreak\", não dando continuidade na questão de refresh, assim ficará a sua mercê do que quer fazer em seguida.\n\nFoi de primeira, na lata, certeira. E agora, documento isso para servir de lição não apenas para mim, mas para qualquer um que estiver com dificuldade de utilizar uma requisição em NextJS ou até mesmo em React.\n\nNo final do artigo, foi o código utilizado para enviar uma requisição, caso queira reaproveitar, é só substituir o API_URL pela URL do servidor que você deseja enviar:\n\nCorpo do formulário:\n\t<form action=\"\" onSubmit={(e) => e.preventDefault()}> { ... conteúdo ... } </form>\n\nVale lembrar que os alert são apenas para informar o usuário do que aconteceu. Simplesmente pegar o dado e redirecionar ele sem avisar, faria com que ele ficasse em duvida se a mensagem foi enviada mesmo ou não.\n\nQuanto ao JSON.stringify(submit), pegamos o valor do submit que nada mais que o corpo da requisição, já pegando os valores dos inputs baseado no ID (você pode capturar esses dados e colocar dentro de um useState se for algo mais dinâmico ainda e redirecionar os valores dos States ao invés do getElementByID direto, como eu fiz).\n\nEssa foi minha experiência, não estou acostumado, quebrei bastante a cabeça e espero que possa ajudar o meu eu do futuro e também a vocês. Qualquer dúvida estou a disposição no Twitter como @Yagasaki7K.",
        "fonte":"",
        "fontelink":""
    }
]